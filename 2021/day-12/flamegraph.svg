<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="3000" height="1286" onload="init(evt)" viewBox="0 0 3000 1286" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = false;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1286" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="1269.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="2990" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="2990" y="1269.00"> </text><svg id="frames" x="10" width="2980" total_samples="1452"><g><title>.LCPI462_0 (1 samples, 0.07%)</title><rect x="0.0000%" y="1205" width="0.0689%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.1000%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="0.0000%" y="1189" width="0.0689%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.1000%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="0.0000%" y="1173" width="0.0689%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.1000%" y="1183.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="0.0000%" y="1157" width="0.0689%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.1000%" y="1167.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (1 samples, 0.07%)</title><rect x="0.0000%" y="1141" width="0.0689%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.1000%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.07%)</title><rect x="0.0000%" y="1125" width="0.0689%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.1000%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (1 samples, 0.07%)</title><rect x="0.0000%" y="1109" width="0.0689%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.1000%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.07%)</title><rect x="0.0000%" y="1093" width="0.0689%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.1000%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="0.0000%" y="1077" width="0.0689%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.1000%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="0.0000%" y="1061" width="0.0689%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.1000%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="0.0000%" y="1045" width="0.0689%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1"/><text x="0.1000%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="0.0000%" y="1029" width="0.0689%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="1"/><text x="0.1000%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="0.0000%" y="1013" width="0.0689%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="1"/><text x="0.1000%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="0.0689%" y="1205" width="0.1377%" height="15" fill="rgb(206,188,39)" fg:x="1" fg:w="2"/><text x="0.1689%" y="1215.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="0.2066%" y="1093" width="0.0689%" height="15" fill="rgb(217,207,13)" fg:x="3" fg:w="1"/><text x="0.3066%" y="1103.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="0.2066%" y="1077" width="0.0689%" height="15" fill="rgb(231,73,38)" fg:x="3" fg:w="1"/><text x="0.3066%" y="1087.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="0.2066%" y="1061" width="0.0689%" height="15" fill="rgb(225,20,46)" fg:x="3" fg:w="1"/><text x="0.3066%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="0.2066%" y="1045" width="0.0689%" height="15" fill="rgb(210,31,41)" fg:x="3" fg:w="1"/><text x="0.3066%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="0.2066%" y="1141" width="0.1377%" height="15" fill="rgb(221,200,47)" fg:x="3" fg:w="2"/><text x="0.3066%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (2 samples, 0.14%)</title><rect x="0.2066%" y="1125" width="0.1377%" height="15" fill="rgb(226,26,5)" fg:x="3" fg:w="2"/><text x="0.3066%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.14%)</title><rect x="0.2066%" y="1109" width="0.1377%" height="15" fill="rgb(249,33,26)" fg:x="3" fg:w="2"/><text x="0.3066%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.07%)</title><rect x="0.2755%" y="1093" width="0.0689%" height="15" fill="rgb(235,183,28)" fg:x="4" fg:w="1"/><text x="0.3755%" y="1103.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.07%)</title><rect x="0.2755%" y="1077" width="0.0689%" height="15" fill="rgb(221,5,38)" fg:x="4" fg:w="1"/><text x="0.3755%" y="1087.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}} (1 samples, 0.07%)</title><rect x="0.2755%" y="1061" width="0.0689%" height="15" fill="rgb(247,18,42)" fg:x="4" fg:w="1"/><text x="0.3755%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.21%)</title><rect x="0.2066%" y="1205" width="0.2066%" height="15" fill="rgb(241,131,45)" fg:x="3" fg:w="3"/><text x="0.3066%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.21%)</title><rect x="0.2066%" y="1189" width="0.2066%" height="15" fill="rgb(249,31,29)" fg:x="3" fg:w="3"/><text x="0.3066%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.21%)</title><rect x="0.2066%" y="1173" width="0.2066%" height="15" fill="rgb(225,111,53)" fg:x="3" fg:w="3"/><text x="0.3066%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.21%)</title><rect x="0.2066%" y="1157" width="0.2066%" height="15" fill="rgb(238,160,17)" fg:x="3" fg:w="3"/><text x="0.3066%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter_map::FilterMap&lt;std::collections::hash::map::IntoIter&lt;&amp;alloc::rc::Rc&lt;day_12::node::Node&gt;,usize&gt;,day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}}&gt;&gt; (1 samples, 0.07%)</title><rect x="0.3444%" y="1141" width="0.0689%" height="15" fill="rgb(214,148,48)" fg:x="5" fg:w="1"/><text x="0.4444%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;&amp;alloc::rc::Rc&lt;day_12::node::Node&gt;,usize&gt;&gt; (1 samples, 0.07%)</title><rect x="0.3444%" y="1125" width="0.0689%" height="15" fill="rgb(232,36,49)" fg:x="5" fg:w="1"/><text x="0.4444%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;&amp;alloc::rc::Rc&lt;day_12::node::Node&gt;,usize&gt;&gt; (1 samples, 0.07%)</title><rect x="0.3444%" y="1109" width="0.0689%" height="15" fill="rgb(209,103,24)" fg:x="5" fg:w="1"/><text x="0.4444%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(&amp;alloc::rc::Rc&lt;day_12::node::Node&gt;,usize)&gt;&gt; (1 samples, 0.07%)</title><rect x="0.3444%" y="1093" width="0.0689%" height="15" fill="rgb(229,88,8)" fg:x="5" fg:w="1"/><text x="0.4444%" y="1103.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="0.3444%" y="1077" width="0.0689%" height="15" fill="rgb(213,181,19)" fg:x="5" fg:w="1"/><text x="0.4444%" y="1087.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.07%)</title><rect x="0.6198%" y="1173" width="0.0689%" height="15" fill="rgb(254,191,54)" fg:x="9" fg:w="1"/><text x="0.7198%" y="1183.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.21%)</title><rect x="0.6198%" y="1189" width="0.2066%" height="15" fill="rgb(241,83,37)" fg:x="9" fg:w="3"/><text x="0.7198%" y="1199.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.14%)</title><rect x="0.6887%" y="1173" width="0.1377%" height="15" fill="rgb(233,36,39)" fg:x="10" fg:w="2"/><text x="0.7887%" y="1183.50"></text></g><g><title>core::cmp::min (1 samples, 0.07%)</title><rect x="0.8264%" y="1189" width="0.0689%" height="15" fill="rgb(226,3,54)" fg:x="12" fg:w="1"/><text x="0.9264%" y="1199.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.07%)</title><rect x="0.8264%" y="1173" width="0.0689%" height="15" fill="rgb(245,192,40)" fg:x="12" fg:w="1"/><text x="0.9264%" y="1183.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="0.8264%" y="1157" width="0.0689%" height="15" fill="rgb(238,167,29)" fg:x="12" fg:w="1"/><text x="0.9264%" y="1167.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.69%)</title><rect x="0.4132%" y="1205" width="0.6887%" height="15" fill="rgb(232,182,51)" fg:x="6" fg:w="10"/><text x="0.5132%" y="1215.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.21%)</title><rect x="0.8953%" y="1189" width="0.2066%" height="15" fill="rgb(231,60,39)" fg:x="13" fg:w="3"/><text x="0.9953%" y="1199.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseElementSimple&lt;Item&gt; as itertools::intersperse::IntersperseElement&lt;Item&gt;&gt;::generate (2 samples, 0.14%)</title><rect x="1.7906%" y="1141" width="0.1377%" height="15" fill="rgb(208,69,12)" fg:x="26" fg:w="2"/><text x="1.8906%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="1.9284%" y="1045" width="0.1377%" height="15" fill="rgb(235,93,37)" fg:x="28" fg:w="2"/><text x="2.0284%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="1.9284%" y="1029" width="0.1377%" height="15" fill="rgb(213,116,39)" fg:x="28" fg:w="2"/><text x="2.0284%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.07%)</title><rect x="1.9972%" y="1013" width="0.0689%" height="15" fill="rgb(222,207,29)" fg:x="29" fg:w="1"/><text x="2.0972%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.07%)</title><rect x="1.9972%" y="997" width="0.0689%" height="15" fill="rgb(206,96,30)" fg:x="29" fg:w="1"/><text x="2.0972%" y="1007.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.28%)</title><rect x="1.9284%" y="1109" width="0.2755%" height="15" fill="rgb(218,138,4)" fg:x="28" fg:w="4"/><text x="2.0284%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.28%)</title><rect x="1.9284%" y="1093" width="0.2755%" height="15" fill="rgb(250,191,14)" fg:x="28" fg:w="4"/><text x="2.0284%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.28%)</title><rect x="1.9284%" y="1077" width="0.2755%" height="15" fill="rgb(239,60,40)" fg:x="28" fg:w="4"/><text x="2.0284%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.28%)</title><rect x="1.9284%" y="1061" width="0.2755%" height="15" fill="rgb(206,27,48)" fg:x="28" fg:w="4"/><text x="2.0284%" y="1071.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.14%)</title><rect x="2.0661%" y="1045" width="0.1377%" height="15" fill="rgb(225,35,8)" fg:x="30" fg:w="2"/><text x="2.1661%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 1.38%)</title><rect x="1.1019%" y="1205" width="1.3774%" height="15" fill="rgb(250,213,24)" fg:x="16" fg:w="20"/><text x="1.2019%" y="1215.50">&lt;co..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (20 samples, 1.38%)</title><rect x="1.1019%" y="1189" width="1.3774%" height="15" fill="rgb(247,123,22)" fg:x="16" fg:w="20"/><text x="1.2019%" y="1199.50">cor..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (20 samples, 1.38%)</title><rect x="1.1019%" y="1173" width="1.3774%" height="15" fill="rgb(231,138,38)" fg:x="16" fg:w="20"/><text x="1.2019%" y="1183.50">cor..</text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (20 samples, 1.38%)</title><rect x="1.1019%" y="1157" width="1.3774%" height="15" fill="rgb(231,145,46)" fg:x="16" fg:w="20"/><text x="1.2019%" y="1167.50">&lt;it..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (8 samples, 0.55%)</title><rect x="1.9284%" y="1141" width="0.5510%" height="15" fill="rgb(251,118,11)" fg:x="28" fg:w="8"/><text x="2.0284%" y="1151.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (8 samples, 0.55%)</title><rect x="1.9284%" y="1125" width="0.5510%" height="15" fill="rgb(217,147,25)" fg:x="28" fg:w="8"/><text x="2.0284%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.28%)</title><rect x="2.2039%" y="1109" width="0.2755%" height="15" fill="rgb(247,81,37)" fg:x="32" fg:w="4"/><text x="2.3039%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.28%)</title><rect x="2.2039%" y="1093" width="0.2755%" height="15" fill="rgb(209,12,38)" fg:x="32" fg:w="4"/><text x="2.3039%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.28%)</title><rect x="2.2039%" y="1077" width="0.2755%" height="15" fill="rgb(227,1,9)" fg:x="32" fg:w="4"/><text x="2.3039%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.28%)</title><rect x="2.2039%" y="1061" width="0.2755%" height="15" fill="rgb(248,47,43)" fg:x="32" fg:w="4"/><text x="2.3039%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="2.4105%" y="1045" width="0.0689%" height="15" fill="rgb(221,10,30)" fg:x="35" fg:w="1"/><text x="2.5105%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="2.4105%" y="1029" width="0.0689%" height="15" fill="rgb(210,229,1)" fg:x="35" fg:w="1"/><text x="2.5105%" y="1039.50"></text></g><g><title>.LCPI462_0 (1 samples, 0.07%)</title><rect x="2.4793%" y="1189" width="0.0689%" height="15" fill="rgb(222,148,37)" fg:x="36" fg:w="1"/><text x="2.5793%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="2.4793%" y="1173" width="0.0689%" height="15" fill="rgb(234,67,33)" fg:x="36" fg:w="1"/><text x="2.5793%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="2.4793%" y="1157" width="0.0689%" height="15" fill="rgb(247,98,35)" fg:x="36" fg:w="1"/><text x="2.5793%" y="1167.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (7 samples, 0.48%)</title><rect x="3.4435%" y="1077" width="0.4821%" height="15" fill="rgb(247,138,52)" fg:x="50" fg:w="7"/><text x="3.5435%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (18 samples, 1.24%)</title><rect x="3.4435%" y="1109" width="1.2397%" height="15" fill="rgb(213,79,30)" fg:x="50" fg:w="18"/><text x="3.5435%" y="1119.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (18 samples, 1.24%)</title><rect x="3.4435%" y="1093" width="1.2397%" height="15" fill="rgb(246,177,23)" fg:x="50" fg:w="18"/><text x="3.5435%" y="1103.50">all..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.76%)</title><rect x="3.9256%" y="1077" width="0.7576%" height="15" fill="rgb(230,62,27)" fg:x="57" fg:w="11"/><text x="4.0256%" y="1087.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.48%)</title><rect x="4.2011%" y="1061" width="0.4821%" height="15" fill="rgb(216,154,8)" fg:x="61" fg:w="7"/><text x="4.3011%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.48%)</title><rect x="4.2011%" y="1045" width="0.4821%" height="15" fill="rgb(244,35,45)" fg:x="61" fg:w="7"/><text x="4.3011%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.48%)</title><rect x="4.2011%" y="1029" width="0.4821%" height="15" fill="rgb(251,115,12)" fg:x="61" fg:w="7"/><text x="4.3011%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (34 samples, 2.34%)</title><rect x="2.5482%" y="1189" width="2.3416%" height="15" fill="rgb(240,54,50)" fg:x="37" fg:w="34"/><text x="2.6482%" y="1199.50">&lt;alloc:..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (21 samples, 1.45%)</title><rect x="3.4435%" y="1173" width="1.4463%" height="15" fill="rgb(233,84,52)" fg:x="50" fg:w="21"/><text x="3.5435%" y="1183.50">&lt;all..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (21 samples, 1.45%)</title><rect x="3.4435%" y="1157" width="1.4463%" height="15" fill="rgb(207,117,47)" fg:x="50" fg:w="21"/><text x="3.5435%" y="1167.50">allo..</text></g><g><title>alloc::slice::hack::to_vec (21 samples, 1.45%)</title><rect x="3.4435%" y="1141" width="1.4463%" height="15" fill="rgb(249,43,39)" fg:x="50" fg:w="21"/><text x="3.5435%" y="1151.50">allo..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (21 samples, 1.45%)</title><rect x="3.4435%" y="1125" width="1.4463%" height="15" fill="rgb(209,38,44)" fg:x="50" fg:w="21"/><text x="3.5435%" y="1135.50">&lt;T a..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (3 samples, 0.21%)</title><rect x="4.6832%" y="1109" width="0.2066%" height="15" fill="rgb(236,212,23)" fg:x="68" fg:w="3"/><text x="4.7832%" y="1119.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.21%)</title><rect x="4.6832%" y="1093" width="0.2066%" height="15" fill="rgb(242,79,21)" fg:x="68" fg:w="3"/><text x="4.7832%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="5.0964%" y="1157" width="0.0689%" height="15" fill="rgb(211,96,35)" fg:x="74" fg:w="1"/><text x="5.1964%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="5.0964%" y="1141" width="0.0689%" height="15" fill="rgb(253,215,40)" fg:x="74" fg:w="1"/><text x="5.1964%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.07%)</title><rect x="5.0964%" y="1125" width="0.0689%" height="15" fill="rgb(211,81,21)" fg:x="74" fg:w="1"/><text x="5.1964%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (5 samples, 0.34%)</title><rect x="4.8898%" y="1189" width="0.3444%" height="15" fill="rgb(208,190,38)" fg:x="71" fg:w="5"/><text x="4.9898%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.28%)</title><rect x="4.9587%" y="1173" width="0.2755%" height="15" fill="rgb(235,213,38)" fg:x="72" fg:w="4"/><text x="5.0587%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="5.1653%" y="1157" width="0.0689%" height="15" fill="rgb(237,122,38)" fg:x="75" fg:w="1"/><text x="5.2653%" y="1167.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (1 samples, 0.07%)</title><rect x="5.1653%" y="1141" width="0.0689%" height="15" fill="rgb(244,218,35)" fg:x="75" fg:w="1"/><text x="5.2653%" y="1151.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.07%)</title><rect x="5.1653%" y="1125" width="0.0689%" height="15" fill="rgb(240,68,47)" fg:x="75" fg:w="1"/><text x="5.2653%" y="1135.50"></text></g><g><title>day_12::node::Node::rc_connections::{{closure}} (1 samples, 0.07%)</title><rect x="5.1653%" y="1109" width="0.0689%" height="15" fill="rgb(210,16,53)" fg:x="75" fg:w="1"/><text x="5.2653%" y="1119.50"></text></g><g><title>alloc::rc::Weak&lt;T&gt;::upgrade (1 samples, 0.07%)</title><rect x="5.1653%" y="1093" width="0.0689%" height="15" fill="rgb(235,124,12)" fg:x="75" fg:w="1"/><text x="5.2653%" y="1103.50"></text></g><g><title>core::cmp::min (1 samples, 0.07%)</title><rect x="5.7851%" y="1173" width="0.0689%" height="15" fill="rgb(224,169,11)" fg:x="84" fg:w="1"/><text x="5.8851%" y="1183.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.07%)</title><rect x="5.7851%" y="1157" width="0.0689%" height="15" fill="rgb(250,166,2)" fg:x="84" fg:w="1"/><text x="5.8851%" y="1167.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="5.7851%" y="1141" width="0.0689%" height="15" fill="rgb(242,216,29)" fg:x="84" fg:w="1"/><text x="5.8851%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (22 samples, 1.52%)</title><rect x="5.2342%" y="1189" width="1.5152%" height="15" fill="rgb(230,116,27)" fg:x="76" fg:w="22"/><text x="5.3342%" y="1199.50">&lt;cor..</text></g><g><title>core::hash::sip::u8to64_le (13 samples, 0.90%)</title><rect x="5.8540%" y="1173" width="0.8953%" height="15" fill="rgb(228,99,48)" fg:x="85" fg:w="13"/><text x="5.9540%" y="1183.50">c..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="6.7493%" y="1157" width="0.0689%" height="15" fill="rgb(253,11,6)" fg:x="98" fg:w="1"/><text x="6.8493%" y="1167.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseElementSimple&lt;Item&gt; as itertools::intersperse::IntersperseElement&lt;Item&gt;&gt;::generate (1 samples, 0.07%)</title><rect x="8.7466%" y="1125" width="0.0689%" height="15" fill="rgb(247,143,39)" fg:x="127" fg:w="1"/><text x="8.8466%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (4 samples, 0.28%)</title><rect x="8.8154%" y="1093" width="0.2755%" height="15" fill="rgb(236,97,10)" fg:x="128" fg:w="4"/><text x="8.9154%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.28%)</title><rect x="8.8154%" y="1077" width="0.2755%" height="15" fill="rgb(233,208,19)" fg:x="128" fg:w="4"/><text x="8.9154%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (4 samples, 0.28%)</title><rect x="8.8154%" y="1061" width="0.2755%" height="15" fill="rgb(216,164,2)" fg:x="128" fg:w="4"/><text x="8.9154%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (4 samples, 0.28%)</title><rect x="8.8154%" y="1045" width="0.2755%" height="15" fill="rgb(220,129,5)" fg:x="128" fg:w="4"/><text x="8.9154%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.28%)</title><rect x="9.0909%" y="1029" width="0.2755%" height="15" fill="rgb(242,17,10)" fg:x="132" fg:w="4"/><text x="9.1909%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.28%)</title><rect x="9.0909%" y="1013" width="0.2755%" height="15" fill="rgb(242,107,0)" fg:x="132" fg:w="4"/><text x="9.1909%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.14%)</title><rect x="9.2287%" y="997" width="0.1377%" height="15" fill="rgb(251,28,31)" fg:x="134" fg:w="2"/><text x="9.3287%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (2 samples, 0.14%)</title><rect x="9.2287%" y="981" width="0.1377%" height="15" fill="rgb(233,223,10)" fg:x="134" fg:w="2"/><text x="9.3287%" y="991.50"></text></g><g><title>alloc::string::String::push_str (9 samples, 0.62%)</title><rect x="9.0909%" y="1093" width="0.6198%" height="15" fill="rgb(215,21,27)" fg:x="132" fg:w="9"/><text x="9.1909%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.62%)</title><rect x="9.0909%" y="1077" width="0.6198%" height="15" fill="rgb(232,23,21)" fg:x="132" fg:w="9"/><text x="9.1909%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.62%)</title><rect x="9.0909%" y="1061" width="0.6198%" height="15" fill="rgb(244,5,23)" fg:x="132" fg:w="9"/><text x="9.1909%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.62%)</title><rect x="9.0909%" y="1045" width="0.6198%" height="15" fill="rgb(226,81,46)" fg:x="132" fg:w="9"/><text x="9.1909%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.34%)</title><rect x="9.3664%" y="1029" width="0.3444%" height="15" fill="rgb(247,70,30)" fg:x="136" fg:w="5"/><text x="9.4664%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="9.9174%" y="1013" width="0.0689%" height="15" fill="rgb(212,68,19)" fg:x="144" fg:w="1"/><text x="10.0174%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="10.3994%" y="933" width="0.0689%" height="15" fill="rgb(240,187,13)" fg:x="151" fg:w="1"/><text x="10.4994%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.07%)</title><rect x="10.3994%" y="917" width="0.0689%" height="15" fill="rgb(223,113,26)" fg:x="151" fg:w="1"/><text x="10.4994%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="10.3994%" y="901" width="0.0689%" height="15" fill="rgb(206,192,2)" fg:x="151" fg:w="1"/><text x="10.4994%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="10.3994%" y="885" width="0.0689%" height="15" fill="rgb(241,108,4)" fg:x="151" fg:w="1"/><text x="10.4994%" y="895.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="10.3994%" y="869" width="0.0689%" height="15" fill="rgb(247,173,49)" fg:x="151" fg:w="1"/><text x="10.4994%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="10.3994%" y="853" width="0.0689%" height="15" fill="rgb(224,114,35)" fg:x="151" fg:w="1"/><text x="10.4994%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="10.3994%" y="837" width="0.0689%" height="15" fill="rgb(245,159,27)" fg:x="151" fg:w="1"/><text x="10.4994%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.21%)</title><rect x="10.3306%" y="997" width="0.2066%" height="15" fill="rgb(245,172,44)" fg:x="150" fg:w="3"/><text x="10.4306%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.21%)</title><rect x="10.3306%" y="981" width="0.2066%" height="15" fill="rgb(236,23,11)" fg:x="150" fg:w="3"/><text x="10.4306%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.14%)</title><rect x="10.3994%" y="965" width="0.1377%" height="15" fill="rgb(205,117,38)" fg:x="151" fg:w="2"/><text x="10.4994%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.14%)</title><rect x="10.3994%" y="949" width="0.1377%" height="15" fill="rgb(237,72,25)" fg:x="151" fg:w="2"/><text x="10.4994%" y="959.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="10.4683%" y="933" width="0.0689%" height="15" fill="rgb(244,70,9)" fg:x="152" fg:w="1"/><text x="10.5683%" y="943.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_contains (1 samples, 0.07%)</title><rect x="10.5372%" y="997" width="0.0689%" height="15" fill="rgb(217,125,39)" fg:x="153" fg:w="1"/><text x="10.6372%" y="1007.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.07%)</title><rect x="10.5372%" y="981" width="0.0689%" height="15" fill="rgb(235,36,10)" fg:x="153" fg:w="1"/><text x="10.6372%" y="991.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.07%)</title><rect x="10.5372%" y="965" width="0.0689%" height="15" fill="rgb(251,123,47)" fg:x="153" fg:w="1"/><text x="10.6372%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.07%)</title><rect x="10.5372%" y="949" width="0.0689%" height="15" fill="rgb(221,13,13)" fg:x="153" fg:w="1"/><text x="10.6372%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.07%)</title><rect x="10.5372%" y="933" width="0.0689%" height="15" fill="rgb(238,131,9)" fg:x="153" fg:w="1"/><text x="10.6372%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.07%)</title><rect x="10.5372%" y="917" width="0.0689%" height="15" fill="rgb(211,50,8)" fg:x="153" fg:w="1"/><text x="10.6372%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.07%)</title><rect x="10.5372%" y="901" width="0.0689%" height="15" fill="rgb(245,182,24)" fg:x="153" fg:w="1"/><text x="10.6372%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.07%)</title><rect x="10.5372%" y="885" width="0.0689%" height="15" fill="rgb(242,14,37)" fg:x="153" fg:w="1"/><text x="10.6372%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.07%)</title><rect x="10.5372%" y="869" width="0.0689%" height="15" fill="rgb(246,228,12)" fg:x="153" fg:w="1"/><text x="10.6372%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.07%)</title><rect x="10.5372%" y="853" width="0.0689%" height="15" fill="rgb(213,55,15)" fg:x="153" fg:w="1"/><text x="10.6372%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="10.5372%" y="837" width="0.0689%" height="15" fill="rgb(209,9,3)" fg:x="153" fg:w="1"/><text x="10.6372%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.07%)</title><rect x="10.6749%" y="981" width="0.0689%" height="15" fill="rgb(230,59,30)" fg:x="155" fg:w="1"/><text x="10.7749%" y="991.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}} (1 samples, 0.07%)</title><rect x="10.6749%" y="965" width="0.0689%" height="15" fill="rgb(209,121,21)" fg:x="155" fg:w="1"/><text x="10.7749%" y="975.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="10.6749%" y="949" width="0.0689%" height="15" fill="rgb(220,109,13)" fg:x="155" fg:w="1"/><text x="10.7749%" y="959.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::inner (1 samples, 0.07%)</title><rect x="10.6749%" y="933" width="0.0689%" height="15" fill="rgb(232,18,1)" fg:x="155" fg:w="1"/><text x="10.7749%" y="943.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.07%)</title><rect x="10.6749%" y="917" width="0.0689%" height="15" fill="rgb(215,41,42)" fg:x="155" fg:w="1"/><text x="10.7749%" y="927.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (3 samples, 0.21%)</title><rect x="10.6061%" y="997" width="0.2066%" height="15" fill="rgb(224,123,36)" fg:x="154" fg:w="3"/><text x="10.7061%" y="1007.50"></text></g><g><title>day_12::node::Node::rc_connections (1 samples, 0.07%)</title><rect x="10.7438%" y="981" width="0.0689%" height="15" fill="rgb(240,125,3)" fg:x="156" fg:w="1"/><text x="10.8438%" y="991.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::borrow (1 samples, 0.07%)</title><rect x="10.7438%" y="965" width="0.0689%" height="15" fill="rgb(205,98,50)" fg:x="156" fg:w="1"/><text x="10.8438%" y="975.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow (1 samples, 0.07%)</title><rect x="10.7438%" y="949" width="0.0689%" height="15" fill="rgb(205,185,37)" fg:x="156" fg:w="1"/><text x="10.8438%" y="959.50"></text></g><g><title>core::cell::BorrowRef::new (1 samples, 0.07%)</title><rect x="10.7438%" y="933" width="0.0689%" height="15" fill="rgb(238,207,15)" fg:x="156" fg:w="1"/><text x="10.8438%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::get (1 samples, 0.07%)</title><rect x="10.7438%" y="917" width="0.0689%" height="15" fill="rgb(213,199,42)" fg:x="156" fg:w="1"/><text x="10.8438%" y="927.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (59 samples, 4.06%)</title><rect x="6.8182%" y="1141" width="4.0634%" height="15" fill="rgb(235,201,11)" fg:x="99" fg:w="59"/><text x="6.9182%" y="1151.50">&lt;itertools::int..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (30 samples, 2.07%)</title><rect x="8.8154%" y="1125" width="2.0661%" height="15" fill="rgb(207,46,11)" fg:x="128" fg:w="30"/><text x="8.9154%" y="1135.50">core::..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (30 samples, 2.07%)</title><rect x="8.8154%" y="1109" width="2.0661%" height="15" fill="rgb(241,35,35)" fg:x="128" fg:w="30"/><text x="8.9154%" y="1119.50">&lt;alloc..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (17 samples, 1.17%)</title><rect x="9.7107%" y="1093" width="1.1708%" height="15" fill="rgb(243,32,47)" fg:x="141" fg:w="17"/><text x="9.8107%" y="1103.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (17 samples, 1.17%)</title><rect x="9.7107%" y="1077" width="1.1708%" height="15" fill="rgb(247,202,23)" fg:x="141" fg:w="17"/><text x="9.8107%" y="1087.50">co..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (17 samples, 1.17%)</title><rect x="9.7107%" y="1061" width="1.1708%" height="15" fill="rgb(219,102,11)" fg:x="141" fg:w="17"/><text x="9.8107%" y="1071.50">co..</text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 1.17%)</title><rect x="9.7107%" y="1045" width="1.1708%" height="15" fill="rgb(243,110,44)" fg:x="141" fg:w="17"/><text x="9.8107%" y="1055.50">&lt;a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.96%)</title><rect x="9.9174%" y="1029" width="0.9642%" height="15" fill="rgb(222,74,54)" fg:x="144" fg:w="14"/><text x="10.0174%" y="1039.50">&lt;a..</text></g><g><title>alloc::alloc::dealloc (13 samples, 0.90%)</title><rect x="9.9862%" y="1013" width="0.8953%" height="15" fill="rgb(216,99,12)" fg:x="145" fg:w="13"/><text x="10.0862%" y="1023.50">a..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.07%)</title><rect x="10.8127%" y="997" width="0.0689%" height="15" fill="rgb(226,22,26)" fg:x="157" fg:w="1"/><text x="10.9127%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.07%)</title><rect x="10.8127%" y="981" width="0.0689%" height="15" fill="rgb(217,163,10)" fg:x="157" fg:w="1"/><text x="10.9127%" y="991.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.07%)</title><rect x="10.8127%" y="965" width="0.0689%" height="15" fill="rgb(213,25,53)" fg:x="157" fg:w="1"/><text x="10.9127%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (65 samples, 4.48%)</title><rect x="6.7493%" y="1189" width="4.4766%" height="15" fill="rgb(252,105,26)" fg:x="98" fg:w="65"/><text x="6.8493%" y="1199.50">&lt;core::iter::ada..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (65 samples, 4.48%)</title><rect x="6.7493%" y="1173" width="4.4766%" height="15" fill="rgb(220,39,43)" fg:x="98" fg:w="65"/><text x="6.8493%" y="1183.50">core::iter::trai..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (64 samples, 4.41%)</title><rect x="6.8182%" y="1157" width="4.4077%" height="15" fill="rgb(229,68,48)" fg:x="99" fg:w="64"/><text x="6.9182%" y="1167.50">core::iter::adap..</text></g><g><title>day_12::dfs::path_to_string::{{closure}} (5 samples, 0.34%)</title><rect x="10.8815%" y="1141" width="0.3444%" height="15" fill="rgb(252,8,32)" fg:x="158" fg:w="5"/><text x="10.9815%" y="1151.50"></text></g><g><title>[libc.so.6] (1 samples, 0.07%)</title><rect x="11.2259%" y="1189" width="0.0689%" height="15" fill="rgb(223,20,43)" fg:x="163" fg:w="1"/><text x="11.3259%" y="1199.50"></text></g><g><title>__GI___libc_free (16 samples, 1.10%)</title><rect x="11.2948%" y="1189" width="1.1019%" height="15" fill="rgb(229,81,49)" fg:x="164" fg:w="16"/><text x="11.3948%" y="1199.50">__..</text></g><g><title>arena_for_chunk (1 samples, 0.07%)</title><rect x="12.3278%" y="1173" width="0.0689%" height="15" fill="rgb(236,28,36)" fg:x="179" fg:w="1"/><text x="12.4278%" y="1183.50"></text></g><g><title>checked_request2size (3 samples, 0.21%)</title><rect x="14.2562%" y="1173" width="0.2066%" height="15" fill="rgb(249,185,26)" fg:x="207" fg:w="3"/><text x="14.3562%" y="1183.50"></text></g><g><title>__GI___libc_malloc (49 samples, 3.37%)</title><rect x="12.3967%" y="1189" width="3.3747%" height="15" fill="rgb(249,174,33)" fg:x="180" fg:w="49"/><text x="12.4967%" y="1199.50">__GI___libc_..</text></g><g><title>tcache_get (19 samples, 1.31%)</title><rect x="14.4628%" y="1173" width="1.3085%" height="15" fill="rgb(233,201,37)" fg:x="210" fg:w="19"/><text x="14.5628%" y="1183.50">tca..</text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="16.0468%" y="1173" width="0.0689%" height="15" fill="rgb(221,78,26)" fg:x="233" fg:w="1"/><text x="16.1468%" y="1183.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.41%)</title><rect x="15.7713%" y="1189" width="0.4132%" height="15" fill="rgb(250,127,30)" fg:x="229" fg:w="6"/><text x="15.8713%" y="1199.50"></text></g><g><title>arena_for_chunk (1 samples, 0.07%)</title><rect x="16.1157%" y="1173" width="0.0689%" height="15" fill="rgb(230,49,44)" fg:x="234" fg:w="1"/><text x="16.2157%" y="1183.50"></text></g><g><title>__memcmp_evex_movbe (11 samples, 0.76%)</title><rect x="16.1846%" y="1189" width="0.7576%" height="15" fill="rgb(229,67,23)" fg:x="235" fg:w="11"/><text x="16.2846%" y="1199.50">_..</text></g><g><title>__memcpy_evex_unaligned_erms (24 samples, 1.65%)</title><rect x="16.9421%" y="1189" width="1.6529%" height="15" fill="rgb(249,83,47)" fg:x="246" fg:w="24"/><text x="17.0421%" y="1199.50">__mem..</text></g><g><title>__rdl_alloc (5 samples, 0.34%)</title><rect x="18.5950%" y="1189" width="0.3444%" height="15" fill="rgb(215,43,3)" fg:x="270" fg:w="5"/><text x="18.6950%" y="1199.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (5 samples, 0.34%)</title><rect x="18.5950%" y="1173" width="0.3444%" height="15" fill="rgb(238,154,13)" fg:x="270" fg:w="5"/><text x="18.6950%" y="1183.50"></text></g><g><title>__rust_dealloc (1 samples, 0.07%)</title><rect x="18.9394%" y="1189" width="0.0689%" height="15" fill="rgb(219,56,2)" fg:x="275" fg:w="1"/><text x="19.0394%" y="1199.50"></text></g><g><title>_int_free (26 samples, 1.79%)</title><rect x="19.0083%" y="1189" width="1.7906%" height="15" fill="rgb(233,0,4)" fg:x="276" fg:w="26"/><text x="19.1083%" y="1199.50">_int_..</text></g><g><title>tcache_put (5 samples, 0.34%)</title><rect x="20.4545%" y="1173" width="0.3444%" height="15" fill="rgb(235,30,7)" fg:x="297" fg:w="5"/><text x="20.5545%" y="1183.50"></text></g><g><title>_int_malloc (6 samples, 0.41%)</title><rect x="20.7989%" y="1189" width="0.4132%" height="15" fill="rgb(250,79,13)" fg:x="302" fg:w="6"/><text x="20.8989%" y="1199.50"></text></g><g><title>tcache_put (1 samples, 0.07%)</title><rect x="21.1433%" y="1173" width="0.0689%" height="15" fill="rgb(211,146,34)" fg:x="307" fg:w="1"/><text x="21.2433%" y="1183.50"></text></g><g><title>_int_realloc (4 samples, 0.28%)</title><rect x="21.2121%" y="1189" width="0.2755%" height="15" fill="rgb(228,22,38)" fg:x="308" fg:w="4"/><text x="21.3121%" y="1199.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.14%)</title><rect x="21.6253%" y="1157" width="0.1377%" height="15" fill="rgb(235,168,5)" fg:x="314" fg:w="2"/><text x="21.7253%" y="1167.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.14%)</title><rect x="21.6253%" y="1141" width="0.1377%" height="15" fill="rgb(221,155,16)" fg:x="314" fg:w="2"/><text x="21.7253%" y="1151.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.07%)</title><rect x="21.6942%" y="1125" width="0.0689%" height="15" fill="rgb(215,215,53)" fg:x="315" fg:w="1"/><text x="21.7942%" y="1135.50"></text></g><g><title>__GI___libc_free (1 samples, 0.07%)</title><rect x="21.7631%" y="1157" width="0.0689%" height="15" fill="rgb(223,4,10)" fg:x="316" fg:w="1"/><text x="21.8631%" y="1167.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="21.8320%" y="1157" width="0.0689%" height="15" fill="rgb(234,103,6)" fg:x="317" fg:w="1"/><text x="21.9320%" y="1167.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="21.8320%" y="1141" width="0.0689%" height="15" fill="rgb(227,97,0)" fg:x="317" fg:w="1"/><text x="21.9320%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.07%)</title><rect x="21.9008%" y="1157" width="0.0689%" height="15" fill="rgb(234,150,53)" fg:x="318" fg:w="1"/><text x="22.0008%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (8 samples, 0.55%)</title><rect x="21.4876%" y="1189" width="0.5510%" height="15" fill="rgb(228,201,54)" fg:x="312" fg:w="8"/><text x="21.5876%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.48%)</title><rect x="21.5565%" y="1173" width="0.4821%" height="15" fill="rgb(222,22,37)" fg:x="313" fg:w="7"/><text x="21.6565%" y="1183.50"></text></g><g><title>core::cmp::max (1 samples, 0.07%)</title><rect x="21.9697%" y="1157" width="0.0689%" height="15" fill="rgb(237,53,32)" fg:x="319" fg:w="1"/><text x="22.0697%" y="1167.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.07%)</title><rect x="21.9697%" y="1141" width="0.0689%" height="15" fill="rgb(233,25,53)" fg:x="319" fg:w="1"/><text x="22.0697%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="21.9697%" y="1125" width="0.0689%" height="15" fill="rgb(210,40,34)" fg:x="319" fg:w="1"/><text x="22.0697%" y="1135.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="22.0386%" y="1189" width="0.0689%" height="15" fill="rgb(241,220,44)" fg:x="320" fg:w="1"/><text x="22.1386%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="22.0386%" y="1173" width="0.0689%" height="15" fill="rgb(235,28,35)" fg:x="320" fg:w="1"/><text x="22.1386%" y="1183.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="22.0386%" y="1157" width="0.0689%" height="15" fill="rgb(210,56,17)" fg:x="320" fg:w="1"/><text x="22.1386%" y="1167.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="22.0386%" y="1141" width="0.0689%" height="15" fill="rgb(224,130,29)" fg:x="320" fg:w="1"/><text x="22.1386%" y="1151.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&lt;&amp;str&gt;&gt;::ne (1 samples, 0.07%)</title><rect x="22.1763%" y="1077" width="0.0689%" height="15" fill="rgb(235,212,8)" fg:x="322" fg:w="1"/><text x="22.2763%" y="1087.50"></text></g><g><title>core::cmp::PartialEq::ne (1 samples, 0.07%)</title><rect x="22.1763%" y="1061" width="0.0689%" height="15" fill="rgb(223,33,50)" fg:x="322" fg:w="1"/><text x="22.2763%" y="1071.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.07%)</title><rect x="22.1763%" y="1045" width="0.0689%" height="15" fill="rgb(219,149,13)" fg:x="322" fg:w="1"/><text x="22.2763%" y="1055.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.07%)</title><rect x="22.1763%" y="1029" width="0.0689%" height="15" fill="rgb(250,156,29)" fg:x="322" fg:w="1"/><text x="22.2763%" y="1039.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.07%)</title><rect x="22.1763%" y="1013" width="0.0689%" height="15" fill="rgb(216,193,19)" fg:x="322" fg:w="1"/><text x="22.2763%" y="1023.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.07%)</title><rect x="22.1763%" y="997" width="0.0689%" height="15" fill="rgb(216,135,14)" fg:x="322" fg:w="1"/><text x="22.2763%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="22.2452%" y="997" width="0.0689%" height="15" fill="rgb(241,47,5)" fg:x="323" fg:w="1"/><text x="22.3452%" y="1007.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="22.3140%" y="869" width="0.0689%" height="15" fill="rgb(233,42,35)" fg:x="324" fg:w="1"/><text x="22.4140%" y="879.50"></text></g><g><title>&lt;day_12::node::Node as core::cmp::PartialEq&gt;::eq (3 samples, 0.21%)</title><rect x="22.3140%" y="901" width="0.2066%" height="15" fill="rgb(231,13,6)" fg:x="324" fg:w="3"/><text x="22.4140%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (3 samples, 0.21%)</title><rect x="22.3140%" y="885" width="0.2066%" height="15" fill="rgb(207,181,40)" fg:x="324" fg:w="3"/><text x="22.4140%" y="895.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (2 samples, 0.14%)</title><rect x="22.3829%" y="869" width="0.1377%" height="15" fill="rgb(254,173,49)" fg:x="325" fg:w="2"/><text x="22.4829%" y="879.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.14%)</title><rect x="22.3829%" y="853" width="0.1377%" height="15" fill="rgb(221,1,38)" fg:x="325" fg:w="2"/><text x="22.4829%" y="863.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.14%)</title><rect x="22.3829%" y="837" width="0.1377%" height="15" fill="rgb(206,124,46)" fg:x="325" fg:w="2"/><text x="22.4829%" y="847.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (7 samples, 0.48%)</title><rect x="22.1074%" y="1189" width="0.4821%" height="15" fill="rgb(249,21,11)" fg:x="321" fg:w="7"/><text x="22.2074%" y="1199.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (6 samples, 0.41%)</title><rect x="22.1763%" y="1173" width="0.4132%" height="15" fill="rgb(222,201,40)" fg:x="322" fg:w="6"/><text x="22.2763%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.41%)</title><rect x="22.1763%" y="1157" width="0.4132%" height="15" fill="rgb(235,61,29)" fg:x="322" fg:w="6"/><text x="22.2763%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.41%)</title><rect x="22.1763%" y="1141" width="0.4132%" height="15" fill="rgb(219,207,3)" fg:x="322" fg:w="6"/><text x="22.2763%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.41%)</title><rect x="22.1763%" y="1125" width="0.4132%" height="15" fill="rgb(222,56,46)" fg:x="322" fg:w="6"/><text x="22.2763%" y="1135.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (6 samples, 0.41%)</title><rect x="22.1763%" y="1109" width="0.4132%" height="15" fill="rgb(239,76,54)" fg:x="322" fg:w="6"/><text x="22.2763%" y="1119.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}} (6 samples, 0.41%)</title><rect x="22.1763%" y="1093" width="0.4132%" height="15" fill="rgb(231,124,27)" fg:x="322" fg:w="6"/><text x="22.2763%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (5 samples, 0.34%)</title><rect x="22.2452%" y="1077" width="0.3444%" height="15" fill="rgb(249,195,6)" fg:x="323" fg:w="5"/><text x="22.3452%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (5 samples, 0.34%)</title><rect x="22.2452%" y="1061" width="0.3444%" height="15" fill="rgb(237,174,47)" fg:x="323" fg:w="5"/><text x="22.3452%" y="1071.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (5 samples, 0.34%)</title><rect x="22.2452%" y="1045" width="0.3444%" height="15" fill="rgb(206,201,31)" fg:x="323" fg:w="5"/><text x="22.3452%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.34%)</title><rect x="22.2452%" y="1029" width="0.3444%" height="15" fill="rgb(231,57,52)" fg:x="323" fg:w="5"/><text x="22.3452%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.34%)</title><rect x="22.2452%" y="1013" width="0.3444%" height="15" fill="rgb(248,177,22)" fg:x="323" fg:w="5"/><text x="22.3452%" y="1023.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.28%)</title><rect x="22.3140%" y="997" width="0.2755%" height="15" fill="rgb(215,211,37)" fg:x="324" fg:w="4"/><text x="22.4140%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (4 samples, 0.28%)</title><rect x="22.3140%" y="981" width="0.2755%" height="15" fill="rgb(241,128,51)" fg:x="324" fg:w="4"/><text x="22.4140%" y="991.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}}::{{closure}} (4 samples, 0.28%)</title><rect x="22.3140%" y="965" width="0.2755%" height="15" fill="rgb(227,165,31)" fg:x="324" fg:w="4"/><text x="22.4140%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.28%)</title><rect x="22.3140%" y="949" width="0.2755%" height="15" fill="rgb(228,167,24)" fg:x="324" fg:w="4"/><text x="22.4140%" y="959.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.28%)</title><rect x="22.3140%" y="933" width="0.2755%" height="15" fill="rgb(228,143,12)" fg:x="324" fg:w="4"/><text x="22.4140%" y="943.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEqIdent&lt;T&gt;&gt;::eq (4 samples, 0.28%)</title><rect x="22.3140%" y="917" width="0.2755%" height="15" fill="rgb(249,149,8)" fg:x="324" fg:w="4"/><text x="22.4140%" y="927.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="22.5207%" y="901" width="0.0689%" height="15" fill="rgb(243,35,44)" fg:x="327" fg:w="1"/><text x="22.6207%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.07%)</title><rect x="22.7273%" y="1173" width="0.0689%" height="15" fill="rgb(246,89,9)" fg:x="330" fg:w="1"/><text x="22.8273%" y="1183.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.07%)</title><rect x="22.7273%" y="1157" width="0.0689%" height="15" fill="rgb(233,213,13)" fg:x="330" fg:w="1"/><text x="22.8273%" y="1167.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.07%)</title><rect x="22.7273%" y="1141" width="0.0689%" height="15" fill="rgb(233,141,41)" fg:x="330" fg:w="1"/><text x="22.8273%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.07%)</title><rect x="22.7273%" y="1125" width="0.0689%" height="15" fill="rgb(239,167,4)" fg:x="330" fg:w="1"/><text x="22.8273%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.07%)</title><rect x="22.7961%" y="1093" width="0.0689%" height="15" fill="rgb(209,217,16)" fg:x="331" fg:w="1"/><text x="22.8961%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="22.7961%" y="1077" width="0.0689%" height="15" fill="rgb(219,88,35)" fg:x="331" fg:w="1"/><text x="22.8961%" y="1087.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.14%)</title><rect x="22.7961%" y="1109" width="0.1377%" height="15" fill="rgb(220,193,23)" fg:x="331" fg:w="2"/><text x="22.8961%" y="1119.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.07%)</title><rect x="22.8650%" y="1093" width="0.0689%" height="15" fill="rgb(230,90,52)" fg:x="332" fg:w="1"/><text x="22.9650%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="22.8650%" y="1077" width="0.0689%" height="15" fill="rgb(252,106,19)" fg:x="332" fg:w="1"/><text x="22.9650%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="22.8650%" y="1061" width="0.0689%" height="15" fill="rgb(206,74,20)" fg:x="332" fg:w="1"/><text x="22.9650%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="22.8650%" y="1045" width="0.0689%" height="15" fill="rgb(230,138,44)" fg:x="332" fg:w="1"/><text x="22.9650%" y="1055.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.07%)</title><rect x="22.8650%" y="1029" width="0.0689%" height="15" fill="rgb(235,182,43)" fg:x="332" fg:w="1"/><text x="22.9650%" y="1039.50"></text></g><g><title>core::hash::BuildHasher::hash_one (6 samples, 0.41%)</title><rect x="22.5895%" y="1189" width="0.4132%" height="15" fill="rgb(242,16,51)" fg:x="328" fg:w="6"/><text x="22.6895%" y="1199.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.21%)</title><rect x="22.7961%" y="1173" width="0.2066%" height="15" fill="rgb(248,9,4)" fg:x="331" fg:w="3"/><text x="22.8961%" y="1183.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.21%)</title><rect x="22.7961%" y="1157" width="0.2066%" height="15" fill="rgb(210,31,22)" fg:x="331" fg:w="3"/><text x="22.8961%" y="1167.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::hash::Hash&gt;::hash (3 samples, 0.21%)</title><rect x="22.7961%" y="1141" width="0.2066%" height="15" fill="rgb(239,54,39)" fg:x="331" fg:w="3"/><text x="22.8961%" y="1151.50"></text></g><g><title>&lt;day_12::node::Node as core::hash::Hash&gt;::hash (3 samples, 0.21%)</title><rect x="22.7961%" y="1125" width="0.2066%" height="15" fill="rgb(230,99,41)" fg:x="331" fg:w="3"/><text x="22.8961%" y="1135.50"></text></g><g><title>&lt;day_12::node::Size as core::hash::Hash&gt;::hash (1 samples, 0.07%)</title><rect x="22.9339%" y="1109" width="0.0689%" height="15" fill="rgb(253,106,12)" fg:x="333" fg:w="1"/><text x="23.0339%" y="1119.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.07%)</title><rect x="22.9339%" y="1093" width="0.0689%" height="15" fill="rgb(213,46,41)" fg:x="333" fg:w="1"/><text x="23.0339%" y="1103.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.07%)</title><rect x="22.9339%" y="1077" width="0.0689%" height="15" fill="rgb(215,133,35)" fg:x="333" fg:w="1"/><text x="23.0339%" y="1087.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.07%)</title><rect x="22.9339%" y="1061" width="0.0689%" height="15" fill="rgb(213,28,5)" fg:x="333" fg:w="1"/><text x="23.0339%" y="1071.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="22.9339%" y="1045" width="0.0689%" height="15" fill="rgb(215,77,49)" fg:x="333" fg:w="1"/><text x="23.0339%" y="1055.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.07%)</title><rect x="23.0028%" y="1157" width="0.0689%" height="15" fill="rgb(248,100,22)" fg:x="334" fg:w="1"/><text x="23.1028%" y="1167.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.07%)</title><rect x="23.0028%" y="1141" width="0.0689%" height="15" fill="rgb(208,67,9)" fg:x="334" fg:w="1"/><text x="23.1028%" y="1151.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.07%)</title><rect x="23.0028%" y="1125" width="0.0689%" height="15" fill="rgb(219,133,21)" fg:x="334" fg:w="1"/><text x="23.1028%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.07%)</title><rect x="23.0028%" y="1109" width="0.0689%" height="15" fill="rgb(246,46,29)" fg:x="334" fg:w="1"/><text x="23.1028%" y="1119.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="23.0028%" y="1093" width="0.0689%" height="15" fill="rgb(246,185,52)" fg:x="334" fg:w="1"/><text x="23.1028%" y="1103.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="23.0028%" y="1077" width="0.0689%" height="15" fill="rgb(252,136,11)" fg:x="334" fg:w="1"/><text x="23.1028%" y="1087.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="23.0028%" y="1061" width="0.0689%" height="15" fill="rgb(219,138,53)" fg:x="334" fg:w="1"/><text x="23.1028%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="23.0028%" y="1045" width="0.0689%" height="15" fill="rgb(211,51,23)" fg:x="334" fg:w="1"/><text x="23.1028%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="23.0028%" y="1029" width="0.0689%" height="15" fill="rgb(247,221,28)" fg:x="334" fg:w="1"/><text x="23.1028%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="23.0028%" y="1013" width="0.0689%" height="15" fill="rgb(251,222,45)" fg:x="334" fg:w="1"/><text x="23.1028%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="23.0028%" y="997" width="0.0689%" height="15" fill="rgb(217,162,53)" fg:x="334" fg:w="1"/><text x="23.1028%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="23.0028%" y="981" width="0.0689%" height="15" fill="rgb(229,93,14)" fg:x="334" fg:w="1"/><text x="23.1028%" y="991.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="23.0028%" y="965" width="0.0689%" height="15" fill="rgb(209,67,49)" fg:x="334" fg:w="1"/><text x="23.1028%" y="975.50"></text></g><g><title>day_12::dfs::path_to_string (3 samples, 0.21%)</title><rect x="23.0028%" y="1173" width="0.2066%" height="15" fill="rgb(213,87,29)" fg:x="334" fg:w="3"/><text x="23.1028%" y="1183.50"></text></g><g><title>itertools::Itertools::intersperse (2 samples, 0.14%)</title><rect x="23.0716%" y="1157" width="0.1377%" height="15" fill="rgb(205,151,52)" fg:x="335" fg:w="2"/><text x="23.1716%" y="1167.50"></text></g><g><title>itertools::intersperse::intersperse (2 samples, 0.14%)</title><rect x="23.0716%" y="1141" width="0.1377%" height="15" fill="rgb(253,215,39)" fg:x="335" fg:w="2"/><text x="23.1716%" y="1151.50"></text></g><g><title>itertools::intersperse::intersperse_with (2 samples, 0.14%)</title><rect x="23.0716%" y="1125" width="0.1377%" height="15" fill="rgb(221,220,41)" fg:x="335" fg:w="2"/><text x="23.1716%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="23.0716%" y="1109" width="0.1377%" height="15" fill="rgb(218,133,21)" fg:x="335" fg:w="2"/><text x="23.1716%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.14%)</title><rect x="23.0716%" y="1093" width="0.1377%" height="15" fill="rgb(221,193,43)" fg:x="335" fg:w="2"/><text x="23.1716%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="23.0716%" y="1077" width="0.1377%" height="15" fill="rgb(240,128,52)" fg:x="335" fg:w="2"/><text x="23.1716%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.14%)</title><rect x="23.0716%" y="1061" width="0.1377%" height="15" fill="rgb(253,114,12)" fg:x="335" fg:w="2"/><text x="23.1716%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.07%)</title><rect x="23.1405%" y="1045" width="0.0689%" height="15" fill="rgb(215,223,47)" fg:x="336" fg:w="1"/><text x="23.2405%" y="1055.50"></text></g><g><title>day_12::dfs::path_to_string::{{closure}} (1 samples, 0.07%)</title><rect x="23.1405%" y="1029" width="0.0689%" height="15" fill="rgb(248,225,23)" fg:x="336" fg:w="1"/><text x="23.2405%" y="1039.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.07%)</title><rect x="23.1405%" y="1013" width="0.0689%" height="15" fill="rgb(250,108,0)" fg:x="336" fg:w="1"/><text x="23.2405%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="23.2094%" y="1061" width="0.0689%" height="15" fill="rgb(228,208,7)" fg:x="337" fg:w="1"/><text x="23.3094%" y="1071.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.07%)</title><rect x="23.2094%" y="1045" width="0.0689%" height="15" fill="rgb(244,45,10)" fg:x="337" fg:w="1"/><text x="23.3094%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (1 samples, 0.07%)</title><rect x="23.2782%" y="1061" width="0.0689%" height="15" fill="rgb(207,125,25)" fg:x="338" fg:w="1"/><text x="23.3782%" y="1071.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.07%)</title><rect x="23.2782%" y="1045" width="0.0689%" height="15" fill="rgb(210,195,18)" fg:x="338" fg:w="1"/><text x="23.3782%" y="1055.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (1 samples, 0.07%)</title><rect x="23.2782%" y="1029" width="0.0689%" height="15" fill="rgb(249,80,12)" fg:x="338" fg:w="1"/><text x="23.3782%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.07%)</title><rect x="23.2782%" y="1013" width="0.0689%" height="15" fill="rgb(221,65,9)" fg:x="338" fg:w="1"/><text x="23.3782%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="23.2782%" y="997" width="0.0689%" height="15" fill="rgb(235,49,36)" fg:x="338" fg:w="1"/><text x="23.3782%" y="1007.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.07%)</title><rect x="23.2782%" y="981" width="0.0689%" height="15" fill="rgb(225,32,20)" fg:x="338" fg:w="1"/><text x="23.3782%" y="991.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.07%)</title><rect x="23.2782%" y="965" width="0.0689%" height="15" fill="rgb(215,141,46)" fg:x="338" fg:w="1"/><text x="23.3782%" y="975.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.07%)</title><rect x="23.2782%" y="949" width="0.0689%" height="15" fill="rgb(250,160,47)" fg:x="338" fg:w="1"/><text x="23.3782%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.07%)</title><rect x="23.3471%" y="1061" width="0.0689%" height="15" fill="rgb(216,222,40)" fg:x="339" fg:w="1"/><text x="23.4471%" y="1071.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.07%)</title><rect x="23.3471%" y="1045" width="0.0689%" height="15" fill="rgb(234,217,39)" fg:x="339" fg:w="1"/><text x="23.4471%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="23.3471%" y="1029" width="0.0689%" height="15" fill="rgb(207,178,40)" fg:x="339" fg:w="1"/><text x="23.4471%" y="1039.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.07%)</title><rect x="23.4160%" y="1061" width="0.0689%" height="15" fill="rgb(221,136,13)" fg:x="340" fg:w="1"/><text x="23.5160%" y="1071.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.07%)</title><rect x="23.4160%" y="1045" width="0.0689%" height="15" fill="rgb(249,199,10)" fg:x="340" fg:w="1"/><text x="23.5160%" y="1055.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_contains (8 samples, 0.55%)</title><rect x="23.0028%" y="1189" width="0.5510%" height="15" fill="rgb(249,222,13)" fg:x="334" fg:w="8"/><text x="23.1028%" y="1199.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (5 samples, 0.34%)</title><rect x="23.2094%" y="1173" width="0.3444%" height="15" fill="rgb(244,185,38)" fg:x="337" fg:w="5"/><text x="23.3094%" y="1183.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (5 samples, 0.34%)</title><rect x="23.2094%" y="1157" width="0.3444%" height="15" fill="rgb(236,202,9)" fg:x="337" fg:w="5"/><text x="23.3094%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (5 samples, 0.34%)</title><rect x="23.2094%" y="1141" width="0.3444%" height="15" fill="rgb(250,229,37)" fg:x="337" fg:w="5"/><text x="23.3094%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.34%)</title><rect x="23.2094%" y="1125" width="0.3444%" height="15" fill="rgb(206,174,23)" fg:x="337" fg:w="5"/><text x="23.3094%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.34%)</title><rect x="23.2094%" y="1109" width="0.3444%" height="15" fill="rgb(211,33,43)" fg:x="337" fg:w="5"/><text x="23.3094%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.34%)</title><rect x="23.2094%" y="1093" width="0.3444%" height="15" fill="rgb(245,58,50)" fg:x="337" fg:w="5"/><text x="23.3094%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (5 samples, 0.34%)</title><rect x="23.2094%" y="1077" width="0.3444%" height="15" fill="rgb(244,68,36)" fg:x="337" fg:w="5"/><text x="23.3094%" y="1087.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.07%)</title><rect x="23.4848%" y="1061" width="0.0689%" height="15" fill="rgb(232,229,15)" fg:x="341" fg:w="1"/><text x="23.5848%" y="1071.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.07%)</title><rect x="23.4848%" y="1045" width="0.0689%" height="15" fill="rgb(254,30,23)" fg:x="341" fg:w="1"/><text x="23.5848%" y="1055.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.07%)</title><rect x="23.4848%" y="1029" width="0.0689%" height="15" fill="rgb(235,160,14)" fg:x="341" fg:w="1"/><text x="23.5848%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="23.6226%" y="1173" width="0.0689%" height="15" fill="rgb(212,155,44)" fg:x="343" fg:w="1"/><text x="23.7226%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="23.6226%" y="1157" width="0.0689%" height="15" fill="rgb(226,2,50)" fg:x="343" fg:w="1"/><text x="23.7226%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="23.6226%" y="1141" width="0.0689%" height="15" fill="rgb(234,177,6)" fg:x="343" fg:w="1"/><text x="23.7226%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="23.6226%" y="1125" width="0.0689%" height="15" fill="rgb(217,24,9)" fg:x="343" fg:w="1"/><text x="23.7226%" y="1135.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::write (1 samples, 0.07%)</title><rect x="23.6226%" y="1109" width="0.0689%" height="15" fill="rgb(220,13,46)" fg:x="343" fg:w="1"/><text x="23.7226%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.07%)</title><rect x="23.6915%" y="1173" width="0.0689%" height="15" fill="rgb(239,221,27)" fg:x="344" fg:w="1"/><text x="23.7915%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.07%)</title><rect x="23.6915%" y="1157" width="0.0689%" height="15" fill="rgb(222,198,25)" fg:x="344" fg:w="1"/><text x="23.7915%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.07%)</title><rect x="23.6915%" y="1141" width="0.0689%" height="15" fill="rgb(211,99,13)" fg:x="344" fg:w="1"/><text x="23.7915%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.07%)</title><rect x="23.7603%" y="1173" width="0.0689%" height="15" fill="rgb(232,111,31)" fg:x="345" fg:w="1"/><text x="23.8603%" y="1183.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}} (1 samples, 0.07%)</title><rect x="23.7603%" y="1157" width="0.0689%" height="15" fill="rgb(245,82,37)" fg:x="345" fg:w="1"/><text x="23.8603%" y="1167.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="23.7603%" y="1141" width="0.0689%" height="15" fill="rgb(227,149,46)" fg:x="345" fg:w="1"/><text x="23.8603%" y="1151.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.07%)</title><rect x="23.7603%" y="1125" width="0.0689%" height="15" fill="rgb(218,36,50)" fg:x="345" fg:w="1"/><text x="23.8603%" y="1135.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.07%)</title><rect x="23.7603%" y="1109" width="0.0689%" height="15" fill="rgb(226,80,48)" fg:x="345" fg:w="1"/><text x="23.8603%" y="1119.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.07%)</title><rect x="23.7603%" y="1093" width="0.0689%" height="15" fill="rgb(238,224,15)" fg:x="345" fg:w="1"/><text x="23.8603%" y="1103.50"></text></g><g><title>core::mem::replace (1 samples, 0.07%)</title><rect x="23.7603%" y="1077" width="0.0689%" height="15" fill="rgb(241,136,10)" fg:x="345" fg:w="1"/><text x="23.8603%" y="1087.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="23.7603%" y="1061" width="0.0689%" height="15" fill="rgb(208,32,45)" fg:x="345" fg:w="1"/><text x="23.8603%" y="1071.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::first (1 samples, 0.07%)</title><rect x="23.8292%" y="1173" width="0.0689%" height="15" fill="rgb(207,135,9)" fg:x="346" fg:w="1"/><text x="23.9292%" y="1183.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (6 samples, 0.41%)</title><rect x="23.5537%" y="1189" width="0.4132%" height="15" fill="rgb(206,86,44)" fg:x="342" fg:w="6"/><text x="23.6537%" y="1199.50"></text></g><g><title>itertools::Itertools::collect_vec (1 samples, 0.07%)</title><rect x="23.8981%" y="1173" width="0.0689%" height="15" fill="rgb(245,177,15)" fg:x="347" fg:w="1"/><text x="23.9981%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="23.8981%" y="1157" width="0.0689%" height="15" fill="rgb(206,64,50)" fg:x="347" fg:w="1"/><text x="23.9981%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="23.8981%" y="1141" width="0.0689%" height="15" fill="rgb(234,36,40)" fg:x="347" fg:w="1"/><text x="23.9981%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="23.9669%" y="1189" width="0.0689%" height="15" fill="rgb(213,64,8)" fg:x="348" fg:w="1"/><text x="24.0669%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (1 samples, 0.07%)</title><rect x="24.0358%" y="1141" width="0.0689%" height="15" fill="rgb(210,75,36)" fg:x="349" fg:w="1"/><text x="24.1358%" y="1151.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.07%)</title><rect x="24.0358%" y="1125" width="0.0689%" height="15" fill="rgb(229,88,21)" fg:x="349" fg:w="1"/><text x="24.1358%" y="1135.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.07%)</title><rect x="24.0358%" y="1109" width="0.0689%" height="15" fill="rgb(252,204,47)" fg:x="349" fg:w="1"/><text x="24.1358%" y="1119.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.07%)</title><rect x="24.0358%" y="1093" width="0.0689%" height="15" fill="rgb(208,77,27)" fg:x="349" fg:w="1"/><text x="24.1358%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.07%)</title><rect x="24.0358%" y="1077" width="0.0689%" height="15" fill="rgb(221,76,26)" fg:x="349" fg:w="1"/><text x="24.1358%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.07%)</title><rect x="24.1047%" y="1141" width="0.0689%" height="15" fill="rgb(225,139,18)" fg:x="350" fg:w="1"/><text x="24.2047%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.07%)</title><rect x="24.1047%" y="1125" width="0.0689%" height="15" fill="rgb(230,137,11)" fg:x="350" fg:w="1"/><text x="24.2047%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (1 samples, 0.07%)</title><rect x="24.1047%" y="1109" width="0.0689%" height="15" fill="rgb(212,28,1)" fg:x="350" fg:w="1"/><text x="24.2047%" y="1119.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.07%)</title><rect x="24.1047%" y="1093" width="0.0689%" height="15" fill="rgb(248,164,17)" fg:x="350" fg:w="1"/><text x="24.2047%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.21%)</title><rect x="24.0358%" y="1189" width="0.2066%" height="15" fill="rgb(222,171,42)" fg:x="349" fg:w="3"/><text x="24.1358%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (3 samples, 0.21%)</title><rect x="24.0358%" y="1173" width="0.2066%" height="15" fill="rgb(243,84,45)" fg:x="349" fg:w="3"/><text x="24.1358%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (3 samples, 0.21%)</title><rect x="24.0358%" y="1157" width="0.2066%" height="15" fill="rgb(252,49,23)" fg:x="349" fg:w="3"/><text x="24.1358%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.07%)</title><rect x="24.1736%" y="1141" width="0.0689%" height="15" fill="rgb(215,19,7)" fg:x="351" fg:w="1"/><text x="24.2736%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.07%)</title><rect x="24.1736%" y="1125" width="0.0689%" height="15" fill="rgb(238,81,41)" fg:x="351" fg:w="1"/><text x="24.2736%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.07%)</title><rect x="24.1736%" y="1109" width="0.0689%" height="15" fill="rgb(210,199,37)" fg:x="351" fg:w="1"/><text x="24.2736%" y="1119.50"></text></g><g><title>hashbrown::raw::TableLayout::calculate_layout_for (1 samples, 0.07%)</title><rect x="24.1736%" y="1093" width="0.0689%" height="15" fill="rgb(244,192,49)" fg:x="351" fg:w="1"/><text x="24.2736%" y="1103.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.07%)</title><rect x="24.1736%" y="1077" width="0.0689%" height="15" fill="rgb(226,211,11)" fg:x="351" fg:w="1"/><text x="24.2736%" y="1087.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.07%)</title><rect x="24.1736%" y="1061" width="0.0689%" height="15" fill="rgb(236,162,54)" fg:x="351" fg:w="1"/><text x="24.2736%" y="1071.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.14%)</title><rect x="24.2424%" y="1189" width="0.1377%" height="15" fill="rgb(220,229,9)" fg:x="352" fg:w="2"/><text x="24.3424%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.07%)</title><rect x="24.3113%" y="1173" width="0.0689%" height="15" fill="rgb(250,87,22)" fg:x="353" fg:w="1"/><text x="24.4113%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="24.3113%" y="1157" width="0.0689%" height="15" fill="rgb(239,43,17)" fg:x="353" fg:w="1"/><text x="24.4113%" y="1167.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_default (3 samples, 0.21%)</title><rect x="24.4490%" y="1077" width="0.2066%" height="15" fill="rgb(231,177,25)" fg:x="355" fg:w="3"/><text x="24.5490%" y="1087.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (3 samples, 0.21%)</title><rect x="24.4490%" y="1061" width="0.2066%" height="15" fill="rgb(219,179,1)" fg:x="355" fg:w="3"/><text x="24.5490%" y="1071.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (3 samples, 0.21%)</title><rect x="24.4490%" y="1045" width="0.2066%" height="15" fill="rgb(238,219,53)" fg:x="355" fg:w="3"/><text x="24.5490%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (3 samples, 0.21%)</title><rect x="24.4490%" y="1029" width="0.2066%" height="15" fill="rgb(232,167,36)" fg:x="355" fg:w="3"/><text x="24.5490%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (3 samples, 0.21%)</title><rect x="24.4490%" y="1013" width="0.2066%" height="15" fill="rgb(244,19,51)" fg:x="355" fg:w="3"/><text x="24.5490%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (3 samples, 0.21%)</title><rect x="24.4490%" y="997" width="0.2066%" height="15" fill="rgb(224,6,22)" fg:x="355" fg:w="3"/><text x="24.5490%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (1 samples, 0.07%)</title><rect x="24.5868%" y="981" width="0.0689%" height="15" fill="rgb(224,145,5)" fg:x="357" fg:w="1"/><text x="24.6868%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.34%)</title><rect x="24.3802%" y="1141" width="0.3444%" height="15" fill="rgb(234,130,49)" fg:x="354" fg:w="5"/><text x="24.4802%" y="1151.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (5 samples, 0.34%)</title><rect x="24.3802%" y="1125" width="0.3444%" height="15" fill="rgb(254,6,2)" fg:x="354" fg:w="5"/><text x="24.4802%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.34%)</title><rect x="24.3802%" y="1109" width="0.3444%" height="15" fill="rgb(208,96,46)" fg:x="354" fg:w="5"/><text x="24.4802%" y="1119.50"></text></g><g><title>itertools::Itertools::counts::{{closure}} (5 samples, 0.34%)</title><rect x="24.3802%" y="1093" width="0.3444%" height="15" fill="rgb(239,3,39)" fg:x="354" fg:w="5"/><text x="24.4802%" y="1103.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.07%)</title><rect x="24.6556%" y="1077" width="0.0689%" height="15" fill="rgb(233,210,1)" fg:x="358" fg:w="1"/><text x="24.7556%" y="1087.50"></text></g><g><title>[[heap]] (324 samples, 22.31%)</title><rect x="2.4793%" y="1205" width="22.3140%" height="15" fill="rgb(244,137,37)" fg:x="36" fg:w="324"/><text x="2.5793%" y="1215.50">[[heap]]</text></g><g><title>itertools::Itertools::counts (6 samples, 0.41%)</title><rect x="24.3802%" y="1189" width="0.4132%" height="15" fill="rgb(240,136,2)" fg:x="354" fg:w="6"/><text x="24.4802%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (6 samples, 0.41%)</title><rect x="24.3802%" y="1173" width="0.4132%" height="15" fill="rgb(239,18,37)" fg:x="354" fg:w="6"/><text x="24.4802%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (6 samples, 0.41%)</title><rect x="24.3802%" y="1157" width="0.4132%" height="15" fill="rgb(218,185,22)" fg:x="354" fg:w="6"/><text x="24.4802%" y="1167.50"></text></g><g><title>itertools::Itertools::counts (1 samples, 0.07%)</title><rect x="24.7245%" y="1141" width="0.0689%" height="15" fill="rgb(225,218,4)" fg:x="359" fg:w="1"/><text x="24.8245%" y="1151.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.14%)</title><rect x="24.7934%" y="1189" width="0.1377%" height="15" fill="rgb(230,182,32)" fg:x="360" fg:w="2"/><text x="24.8934%" y="1199.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="25.9642%" y="1077" width="0.1377%" height="15" fill="rgb(242,56,43)" fg:x="377" fg:w="2"/><text x="26.0642%" y="1087.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (19 samples, 1.31%)</title><rect x="24.9311%" y="1189" width="1.3085%" height="15" fill="rgb(233,99,24)" fg:x="362" fg:w="19"/><text x="25.0311%" y="1199.50">&lt;al..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.28%)</title><rect x="25.9642%" y="1173" width="0.2755%" height="15" fill="rgb(234,209,42)" fg:x="377" fg:w="4"/><text x="26.0642%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.28%)</title><rect x="25.9642%" y="1157" width="0.2755%" height="15" fill="rgb(227,7,12)" fg:x="377" fg:w="4"/><text x="26.0642%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.28%)</title><rect x="25.9642%" y="1141" width="0.2755%" height="15" fill="rgb(245,203,43)" fg:x="377" fg:w="4"/><text x="26.0642%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.28%)</title><rect x="25.9642%" y="1125" width="0.2755%" height="15" fill="rgb(238,205,33)" fg:x="377" fg:w="4"/><text x="26.0642%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.28%)</title><rect x="25.9642%" y="1109" width="0.2755%" height="15" fill="rgb(231,56,7)" fg:x="377" fg:w="4"/><text x="26.0642%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.28%)</title><rect x="25.9642%" y="1093" width="0.2755%" height="15" fill="rgb(244,186,29)" fg:x="377" fg:w="4"/><text x="26.0642%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.14%)</title><rect x="26.1019%" y="1077" width="0.1377%" height="15" fill="rgb(234,111,31)" fg:x="379" fg:w="2"/><text x="26.2019%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="26.1708%" y="1061" width="0.0689%" height="15" fill="rgb(241,149,10)" fg:x="380" fg:w="1"/><text x="26.2708%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="26.1708%" y="1045" width="0.0689%" height="15" fill="rgb(249,206,44)" fg:x="380" fg:w="1"/><text x="26.2708%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="26.1708%" y="1029" width="0.0689%" height="15" fill="rgb(251,153,30)" fg:x="380" fg:w="1"/><text x="26.2708%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (4 samples, 0.28%)</title><rect x="26.2397%" y="1189" width="0.2755%" height="15" fill="rgb(239,152,38)" fg:x="381" fg:w="4"/><text x="26.3397%" y="1199.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (3 samples, 0.21%)</title><rect x="26.3085%" y="1173" width="0.2066%" height="15" fill="rgb(249,139,47)" fg:x="382" fg:w="3"/><text x="26.4085%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2 samples, 0.14%)</title><rect x="26.6529%" y="1157" width="0.1377%" height="15" fill="rgb(244,64,35)" fg:x="387" fg:w="2"/><text x="26.7529%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (2 samples, 0.14%)</title><rect x="26.6529%" y="1141" width="0.1377%" height="15" fill="rgb(216,46,15)" fg:x="387" fg:w="2"/><text x="26.7529%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="26.6529%" y="1125" width="0.1377%" height="15" fill="rgb(250,74,19)" fg:x="387" fg:w="2"/><text x="26.7529%" y="1135.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (2 samples, 0.14%)</title><rect x="26.6529%" y="1109" width="0.1377%" height="15" fill="rgb(249,42,33)" fg:x="387" fg:w="2"/><text x="26.7529%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="26.6529%" y="1093" width="0.1377%" height="15" fill="rgb(242,149,17)" fg:x="387" fg:w="2"/><text x="26.7529%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="26.7906%" y="1109" width="0.0689%" height="15" fill="rgb(244,29,21)" fg:x="389" fg:w="1"/><text x="26.8906%" y="1119.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="26.7906%" y="1093" width="0.0689%" height="15" fill="rgb(220,130,37)" fg:x="389" fg:w="1"/><text x="26.8906%" y="1103.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="26.7906%" y="1077" width="0.0689%" height="15" fill="rgb(211,67,2)" fg:x="389" fg:w="1"/><text x="26.8906%" y="1087.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="26.7906%" y="1061" width="0.0689%" height="15" fill="rgb(235,68,52)" fg:x="389" fg:w="1"/><text x="26.8906%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (6 samples, 0.41%)</title><rect x="26.5152%" y="1189" width="0.4132%" height="15" fill="rgb(246,142,3)" fg:x="385" fg:w="6"/><text x="26.6152%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (5 samples, 0.34%)</title><rect x="26.5840%" y="1173" width="0.3444%" height="15" fill="rgb(241,25,7)" fg:x="386" fg:w="5"/><text x="26.6840%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="26.7906%" y="1157" width="0.1377%" height="15" fill="rgb(242,119,39)" fg:x="389" fg:w="2"/><text x="26.8906%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (2 samples, 0.14%)</title><rect x="26.7906%" y="1141" width="0.1377%" height="15" fill="rgb(241,98,45)" fg:x="389" fg:w="2"/><text x="26.8906%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.14%)</title><rect x="26.7906%" y="1125" width="0.1377%" height="15" fill="rgb(254,28,30)" fg:x="389" fg:w="2"/><text x="26.8906%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.07%)</title><rect x="26.8595%" y="1109" width="0.0689%" height="15" fill="rgb(241,142,54)" fg:x="390" fg:w="1"/><text x="26.9595%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.07%)</title><rect x="26.8595%" y="1093" width="0.0689%" height="15" fill="rgb(222,85,15)" fg:x="390" fg:w="1"/><text x="26.9595%" y="1103.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}} (1 samples, 0.07%)</title><rect x="26.8595%" y="1077" width="0.0689%" height="15" fill="rgb(210,85,47)" fg:x="390" fg:w="1"/><text x="26.9595%" y="1087.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.14%)</title><rect x="26.9284%" y="1189" width="0.1377%" height="15" fill="rgb(224,206,25)" fg:x="391" fg:w="2"/><text x="27.0284%" y="1199.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.14%)</title><rect x="27.4105%" y="1173" width="0.1377%" height="15" fill="rgb(243,201,19)" fg:x="398" fg:w="2"/><text x="27.5105%" y="1183.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.14%)</title><rect x="27.4105%" y="1157" width="0.1377%" height="15" fill="rgb(236,59,4)" fg:x="398" fg:w="2"/><text x="27.5105%" y="1167.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.62%)</title><rect x="27.0661%" y="1189" width="0.6198%" height="15" fill="rgb(254,179,45)" fg:x="393" fg:w="9"/><text x="27.1661%" y="1199.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.14%)</title><rect x="27.5482%" y="1173" width="0.1377%" height="15" fill="rgb(226,14,10)" fg:x="400" fg:w="2"/><text x="27.6482%" y="1183.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="27.6171%" y="1157" width="0.0689%" height="15" fill="rgb(244,27,41)" fg:x="401" fg:w="1"/><text x="27.7171%" y="1167.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseElementSimple&lt;Item&gt; as itertools::intersperse::IntersperseElement&lt;Item&gt;&gt;::generate (3 samples, 0.21%)</title><rect x="28.7879%" y="1125" width="0.2066%" height="15" fill="rgb(235,35,32)" fg:x="418" fg:w="3"/><text x="28.8879%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (3 samples, 0.21%)</title><rect x="28.9945%" y="1093" width="0.2066%" height="15" fill="rgb(218,68,31)" fg:x="421" fg:w="3"/><text x="29.0945%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (3 samples, 0.21%)</title><rect x="28.9945%" y="1077" width="0.2066%" height="15" fill="rgb(207,120,37)" fg:x="421" fg:w="3"/><text x="29.0945%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (3 samples, 0.21%)</title><rect x="28.9945%" y="1061" width="0.2066%" height="15" fill="rgb(227,98,0)" fg:x="421" fg:w="3"/><text x="29.0945%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (3 samples, 0.21%)</title><rect x="28.9945%" y="1045" width="0.2066%" height="15" fill="rgb(207,7,3)" fg:x="421" fg:w="3"/><text x="29.0945%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.41%)</title><rect x="29.2011%" y="1029" width="0.4132%" height="15" fill="rgb(206,98,19)" fg:x="424" fg:w="6"/><text x="29.3011%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.41%)</title><rect x="29.2011%" y="1013" width="0.4132%" height="15" fill="rgb(217,5,26)" fg:x="424" fg:w="6"/><text x="29.3011%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.14%)</title><rect x="29.4766%" y="997" width="0.1377%" height="15" fill="rgb(235,190,38)" fg:x="428" fg:w="2"/><text x="29.5766%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (2 samples, 0.14%)</title><rect x="29.4766%" y="981" width="0.1377%" height="15" fill="rgb(247,86,24)" fg:x="428" fg:w="2"/><text x="29.5766%" y="991.50"></text></g><g><title>alloc::string::String::push_str (10 samples, 0.69%)</title><rect x="29.2011%" y="1093" width="0.6887%" height="15" fill="rgb(205,101,16)" fg:x="424" fg:w="10"/><text x="29.3011%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (10 samples, 0.69%)</title><rect x="29.2011%" y="1077" width="0.6887%" height="15" fill="rgb(246,168,33)" fg:x="424" fg:w="10"/><text x="29.3011%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.69%)</title><rect x="29.2011%" y="1061" width="0.6887%" height="15" fill="rgb(231,114,1)" fg:x="424" fg:w="10"/><text x="29.3011%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10 samples, 0.69%)</title><rect x="29.2011%" y="1045" width="0.6887%" height="15" fill="rgb(207,184,53)" fg:x="424" fg:w="10"/><text x="29.3011%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.28%)</title><rect x="29.6143%" y="1029" width="0.2755%" height="15" fill="rgb(224,95,51)" fg:x="430" fg:w="4"/><text x="29.7143%" y="1039.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (38 samples, 2.62%)</title><rect x="27.6860%" y="1141" width="2.6171%" height="15" fill="rgb(212,188,45)" fg:x="402" fg:w="38"/><text x="27.7860%" y="1151.50">&lt;itertool..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (19 samples, 1.31%)</title><rect x="28.9945%" y="1125" width="1.3085%" height="15" fill="rgb(223,154,38)" fg:x="421" fg:w="19"/><text x="29.0945%" y="1135.50">cor..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (19 samples, 1.31%)</title><rect x="28.9945%" y="1109" width="1.3085%" height="15" fill="rgb(251,22,52)" fg:x="421" fg:w="19"/><text x="29.0945%" y="1119.50">&lt;al..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6 samples, 0.41%)</title><rect x="29.8898%" y="1093" width="0.4132%" height="15" fill="rgb(229,209,22)" fg:x="434" fg:w="6"/><text x="29.9898%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.41%)</title><rect x="29.8898%" y="1077" width="0.4132%" height="15" fill="rgb(234,138,34)" fg:x="434" fg:w="6"/><text x="29.9898%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.41%)</title><rect x="29.8898%" y="1061" width="0.4132%" height="15" fill="rgb(212,95,11)" fg:x="434" fg:w="6"/><text x="29.9898%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.41%)</title><rect x="29.8898%" y="1045" width="0.4132%" height="15" fill="rgb(240,179,47)" fg:x="434" fg:w="6"/><text x="29.9898%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.14%)</title><rect x="30.1653%" y="1029" width="0.1377%" height="15" fill="rgb(240,163,11)" fg:x="438" fg:w="2"/><text x="30.2653%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.14%)</title><rect x="30.1653%" y="1013" width="0.1377%" height="15" fill="rgb(236,37,12)" fg:x="438" fg:w="2"/><text x="30.2653%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (40 samples, 2.75%)</title><rect x="27.6860%" y="1189" width="2.7548%" height="15" fill="rgb(232,164,16)" fg:x="402" fg:w="40"/><text x="27.7860%" y="1199.50">&lt;core::it..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (40 samples, 2.75%)</title><rect x="27.6860%" y="1173" width="2.7548%" height="15" fill="rgb(244,205,15)" fg:x="402" fg:w="40"/><text x="27.7860%" y="1183.50">core::ite..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (40 samples, 2.75%)</title><rect x="27.6860%" y="1157" width="2.7548%" height="15" fill="rgb(223,117,47)" fg:x="402" fg:w="40"/><text x="27.7860%" y="1167.50">core::ite..</text></g><g><title>day_12::dfs::path_to_string::{{closure}} (2 samples, 0.14%)</title><rect x="30.3030%" y="1141" width="0.1377%" height="15" fill="rgb(244,107,35)" fg:x="440" fg:w="2"/><text x="30.4030%" y="1151.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="30.4408%" y="1189" width="0.0689%" height="15" fill="rgb(205,140,8)" fg:x="442" fg:w="1"/><text x="30.5408%" y="1199.50"></text></g><g><title>__GI___libc_free (9 samples, 0.62%)</title><rect x="30.5096%" y="1189" width="0.6198%" height="15" fill="rgb(228,84,46)" fg:x="443" fg:w="9"/><text x="30.6096%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="31.0606%" y="1173" width="0.0689%" height="15" fill="rgb(254,188,9)" fg:x="451" fg:w="1"/><text x="31.1606%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="31.0606%" y="1157" width="0.0689%" height="15" fill="rgb(206,112,54)" fg:x="451" fg:w="1"/><text x="31.1606%" y="1167.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="31.0606%" y="1141" width="0.0689%" height="15" fill="rgb(216,84,49)" fg:x="451" fg:w="1"/><text x="31.1606%" y="1151.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (1 samples, 0.07%)</title><rect x="31.0606%" y="1125" width="0.0689%" height="15" fill="rgb(214,194,35)" fg:x="451" fg:w="1"/><text x="31.1606%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.07%)</title><rect x="31.0606%" y="1109" width="0.0689%" height="15" fill="rgb(249,28,3)" fg:x="451" fg:w="1"/><text x="31.1606%" y="1119.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (1 samples, 0.07%)</title><rect x="31.0606%" y="1093" width="0.0689%" height="15" fill="rgb(222,56,52)" fg:x="451" fg:w="1"/><text x="31.1606%" y="1103.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.07%)</title><rect x="31.0606%" y="1077" width="0.0689%" height="15" fill="rgb(245,217,50)" fg:x="451" fg:w="1"/><text x="31.1606%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.07%)</title><rect x="31.0606%" y="1061" width="0.0689%" height="15" fill="rgb(213,201,24)" fg:x="451" fg:w="1"/><text x="31.1606%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="31.0606%" y="1045" width="0.0689%" height="15" fill="rgb(248,116,28)" fg:x="451" fg:w="1"/><text x="31.1606%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="31.0606%" y="1029" width="0.0689%" height="15" fill="rgb(219,72,43)" fg:x="451" fg:w="1"/><text x="31.1606%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="31.0606%" y="1013" width="0.0689%" height="15" fill="rgb(209,138,14)" fg:x="451" fg:w="1"/><text x="31.1606%" y="1023.50"></text></g><g><title>checked_request2size (2 samples, 0.14%)</title><rect x="31.8182%" y="1173" width="0.1377%" height="15" fill="rgb(222,18,33)" fg:x="462" fg:w="2"/><text x="31.9182%" y="1183.50"></text></g><g><title>__GI___libc_malloc (21 samples, 1.45%)</title><rect x="31.1295%" y="1189" width="1.4463%" height="15" fill="rgb(213,199,7)" fg:x="452" fg:w="21"/><text x="31.2295%" y="1199.50">__GI..</text></g><g><title>tcache_get (9 samples, 0.62%)</title><rect x="31.9559%" y="1173" width="0.6198%" height="15" fill="rgb(250,110,10)" fg:x="464" fg:w="9"/><text x="32.0559%" y="1183.50"></text></g><g><title>arena_for_chunk (2 samples, 0.14%)</title><rect x="32.9201%" y="1173" width="0.1377%" height="15" fill="rgb(248,123,6)" fg:x="478" fg:w="2"/><text x="33.0201%" y="1183.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.55%)</title><rect x="32.5758%" y="1189" width="0.5510%" height="15" fill="rgb(206,91,31)" fg:x="473" fg:w="8"/><text x="32.6758%" y="1199.50"></text></g><g><title>checked_request2size (1 samples, 0.07%)</title><rect x="33.0579%" y="1173" width="0.0689%" height="15" fill="rgb(211,154,13)" fg:x="480" fg:w="1"/><text x="33.1579%" y="1183.50"></text></g><g><title>__memcmp_evex_movbe (6 samples, 0.41%)</title><rect x="33.1267%" y="1189" width="0.4132%" height="15" fill="rgb(225,148,7)" fg:x="481" fg:w="6"/><text x="33.2267%" y="1199.50"></text></g><g><title>__memcpy_evex_unaligned_erms (13 samples, 0.90%)</title><rect x="33.5399%" y="1189" width="0.8953%" height="15" fill="rgb(220,160,43)" fg:x="487" fg:w="13"/><text x="33.6399%" y="1199.50">_..</text></g><g><title>__rdl_alloc (2 samples, 0.14%)</title><rect x="34.4353%" y="1189" width="0.1377%" height="15" fill="rgb(213,52,39)" fg:x="500" fg:w="2"/><text x="34.5353%" y="1199.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.14%)</title><rect x="34.4353%" y="1173" width="0.1377%" height="15" fill="rgb(243,137,7)" fg:x="500" fg:w="2"/><text x="34.5353%" y="1183.50"></text></g><g><title>__rdl_dealloc (5 samples, 0.34%)</title><rect x="34.5730%" y="1189" width="0.3444%" height="15" fill="rgb(230,79,13)" fg:x="502" fg:w="5"/><text x="34.6730%" y="1199.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (5 samples, 0.34%)</title><rect x="34.5730%" y="1173" width="0.3444%" height="15" fill="rgb(247,105,23)" fg:x="502" fg:w="5"/><text x="34.6730%" y="1183.50"></text></g><g><title>__rdl_realloc (1 samples, 0.07%)</title><rect x="34.9174%" y="1189" width="0.0689%" height="15" fill="rgb(223,179,41)" fg:x="507" fg:w="1"/><text x="35.0174%" y="1199.50"></text></g><g><title>__rust_alloc (1 samples, 0.07%)</title><rect x="34.9862%" y="1189" width="0.0689%" height="15" fill="rgb(218,9,34)" fg:x="508" fg:w="1"/><text x="35.0862%" y="1199.50"></text></g><g><title>__rust_dealloc (1 samples, 0.07%)</title><rect x="35.0551%" y="1189" width="0.0689%" height="15" fill="rgb(222,106,8)" fg:x="509" fg:w="1"/><text x="35.1551%" y="1199.50"></text></g><g><title>_int_free (36 samples, 2.48%)</title><rect x="35.1240%" y="1189" width="2.4793%" height="15" fill="rgb(211,220,0)" fg:x="510" fg:w="36"/><text x="35.2240%" y="1199.50">_int_free</text></g><g><title>tcache_put (5 samples, 0.34%)</title><rect x="37.2590%" y="1173" width="0.3444%" height="15" fill="rgb(229,52,16)" fg:x="541" fg:w="5"/><text x="37.3590%" y="1183.50"></text></g><g><title>_int_malloc (2 samples, 0.14%)</title><rect x="37.6033%" y="1189" width="0.1377%" height="15" fill="rgb(212,155,18)" fg:x="546" fg:w="2"/><text x="37.7033%" y="1199.50"></text></g><g><title>checked_request2size (1 samples, 0.07%)</title><rect x="37.6722%" y="1173" width="0.0689%" height="15" fill="rgb(242,21,14)" fg:x="547" fg:w="1"/><text x="37.7722%" y="1183.50"></text></g><g><title>_int_realloc (2 samples, 0.14%)</title><rect x="37.7410%" y="1189" width="0.1377%" height="15" fill="rgb(222,19,48)" fg:x="548" fg:w="2"/><text x="37.8410%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.07%)</title><rect x="38.0165%" y="1157" width="0.0689%" height="15" fill="rgb(232,45,27)" fg:x="552" fg:w="1"/><text x="38.1165%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.28%)</title><rect x="37.8788%" y="1189" width="0.2755%" height="15" fill="rgb(249,103,42)" fg:x="550" fg:w="4"/><text x="37.9788%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.21%)</title><rect x="37.9477%" y="1173" width="0.2066%" height="15" fill="rgb(246,81,33)" fg:x="551" fg:w="3"/><text x="38.0477%" y="1183.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.07%)</title><rect x="38.0854%" y="1157" width="0.0689%" height="15" fill="rgb(252,33,42)" fg:x="553" fg:w="1"/><text x="38.1854%" y="1167.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.07%)</title><rect x="38.0854%" y="1141" width="0.0689%" height="15" fill="rgb(209,212,41)" fg:x="553" fg:w="1"/><text x="38.1854%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.28%)</title><rect x="38.2231%" y="1173" width="0.2755%" height="15" fill="rgb(207,154,6)" fg:x="555" fg:w="4"/><text x="38.3231%" y="1183.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.28%)</title><rect x="38.2231%" y="1157" width="0.2755%" height="15" fill="rgb(223,64,47)" fg:x="555" fg:w="4"/><text x="38.3231%" y="1167.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.28%)</title><rect x="38.2231%" y="1141" width="0.2755%" height="15" fill="rgb(211,161,38)" fg:x="555" fg:w="4"/><text x="38.3231%" y="1151.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.41%)</title><rect x="38.1543%" y="1189" width="0.4132%" height="15" fill="rgb(219,138,40)" fg:x="554" fg:w="6"/><text x="38.2543%" y="1199.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.07%)</title><rect x="38.4986%" y="1173" width="0.0689%" height="15" fill="rgb(241,228,46)" fg:x="559" fg:w="1"/><text x="38.5986%" y="1183.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="38.7741%" y="997" width="0.0689%" height="15" fill="rgb(223,209,38)" fg:x="563" fg:w="1"/><text x="38.8741%" y="1007.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (12 samples, 0.83%)</title><rect x="38.5675%" y="1173" width="0.8264%" height="15" fill="rgb(236,164,45)" fg:x="560" fg:w="12"/><text x="38.6675%" y="1183.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.83%)</title><rect x="38.5675%" y="1157" width="0.8264%" height="15" fill="rgb(231,15,5)" fg:x="560" fg:w="12"/><text x="38.6675%" y="1167.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.83%)</title><rect x="38.5675%" y="1141" width="0.8264%" height="15" fill="rgb(252,35,15)" fg:x="560" fg:w="12"/><text x="38.6675%" y="1151.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.83%)</title><rect x="38.5675%" y="1125" width="0.8264%" height="15" fill="rgb(248,181,18)" fg:x="560" fg:w="12"/><text x="38.6675%" y="1135.50">c..</text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (12 samples, 0.83%)</title><rect x="38.5675%" y="1109" width="0.8264%" height="15" fill="rgb(233,39,42)" fg:x="560" fg:w="12"/><text x="38.6675%" y="1119.50">c..</text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}} (12 samples, 0.83%)</title><rect x="38.5675%" y="1093" width="0.8264%" height="15" fill="rgb(238,110,33)" fg:x="560" fg:w="12"/><text x="38.6675%" y="1103.50">d..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (10 samples, 0.69%)</title><rect x="38.7052%" y="1077" width="0.6887%" height="15" fill="rgb(233,195,10)" fg:x="562" fg:w="10"/><text x="38.8052%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (10 samples, 0.69%)</title><rect x="38.7052%" y="1061" width="0.6887%" height="15" fill="rgb(254,105,3)" fg:x="562" fg:w="10"/><text x="38.8052%" y="1071.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (10 samples, 0.69%)</title><rect x="38.7052%" y="1045" width="0.6887%" height="15" fill="rgb(221,225,9)" fg:x="562" fg:w="10"/><text x="38.8052%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.69%)</title><rect x="38.7052%" y="1029" width="0.6887%" height="15" fill="rgb(224,227,45)" fg:x="562" fg:w="10"/><text x="38.8052%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.69%)</title><rect x="38.7052%" y="1013" width="0.6887%" height="15" fill="rgb(229,198,43)" fg:x="562" fg:w="10"/><text x="38.8052%" y="1023.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8 samples, 0.55%)</title><rect x="38.8430%" y="997" width="0.5510%" height="15" fill="rgb(206,209,35)" fg:x="564" fg:w="8"/><text x="38.9430%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (8 samples, 0.55%)</title><rect x="38.8430%" y="981" width="0.5510%" height="15" fill="rgb(245,195,53)" fg:x="564" fg:w="8"/><text x="38.9430%" y="991.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}}::{{closure}} (7 samples, 0.48%)</title><rect x="38.9118%" y="965" width="0.4821%" height="15" fill="rgb(240,92,26)" fg:x="565" fg:w="7"/><text x="39.0118%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 0.48%)</title><rect x="38.9118%" y="949" width="0.4821%" height="15" fill="rgb(207,40,23)" fg:x="565" fg:w="7"/><text x="39.0118%" y="959.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.48%)</title><rect x="38.9118%" y="933" width="0.4821%" height="15" fill="rgb(223,111,35)" fg:x="565" fg:w="7"/><text x="39.0118%" y="943.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEqIdent&lt;T&gt;&gt;::eq (7 samples, 0.48%)</title><rect x="38.9118%" y="917" width="0.4821%" height="15" fill="rgb(229,147,28)" fg:x="565" fg:w="7"/><text x="39.0118%" y="927.50"></text></g><g><title>&lt;day_12::node::Node as core::cmp::PartialEq&gt;::eq (7 samples, 0.48%)</title><rect x="38.9118%" y="901" width="0.4821%" height="15" fill="rgb(211,29,28)" fg:x="565" fg:w="7"/><text x="39.0118%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (7 samples, 0.48%)</title><rect x="38.9118%" y="885" width="0.4821%" height="15" fill="rgb(228,72,33)" fg:x="565" fg:w="7"/><text x="39.0118%" y="895.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (7 samples, 0.48%)</title><rect x="38.9118%" y="869" width="0.4821%" height="15" fill="rgb(205,214,31)" fg:x="565" fg:w="7"/><text x="39.0118%" y="879.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (7 samples, 0.48%)</title><rect x="38.9118%" y="853" width="0.4821%" height="15" fill="rgb(224,111,15)" fg:x="565" fg:w="7"/><text x="39.0118%" y="863.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (7 samples, 0.48%)</title><rect x="38.9118%" y="837" width="0.4821%" height="15" fill="rgb(253,21,26)" fg:x="565" fg:w="7"/><text x="39.0118%" y="847.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (13 samples, 0.90%)</title><rect x="38.5675%" y="1189" width="0.8953%" height="15" fill="rgb(245,139,43)" fg:x="560" fg:w="13"/><text x="38.6675%" y="1199.50">a..</text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::forget_allocation_drop_remaining (1 samples, 0.07%)</title><rect x="39.3939%" y="1173" width="0.0689%" height="15" fill="rgb(252,170,7)" fg:x="572" fg:w="1"/><text x="39.4939%" y="1183.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.28%)</title><rect x="39.8072%" y="1125" width="0.2755%" height="15" fill="rgb(231,118,14)" fg:x="578" fg:w="4"/><text x="39.9072%" y="1135.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.14%)</title><rect x="39.9449%" y="1109" width="0.1377%" height="15" fill="rgb(238,83,0)" fg:x="580" fg:w="2"/><text x="40.0449%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.90%)</title><rect x="39.5317%" y="1173" width="0.8953%" height="15" fill="rgb(221,39,39)" fg:x="574" fg:w="13"/><text x="39.6317%" y="1183.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.90%)</title><rect x="39.5317%" y="1157" width="0.8953%" height="15" fill="rgb(222,119,46)" fg:x="574" fg:w="13"/><text x="39.6317%" y="1167.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.90%)</title><rect x="39.5317%" y="1141" width="0.8953%" height="15" fill="rgb(222,165,49)" fg:x="574" fg:w="13"/><text x="39.6317%" y="1151.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.34%)</title><rect x="40.0826%" y="1125" width="0.3444%" height="15" fill="rgb(219,113,52)" fg:x="582" fg:w="5"/><text x="40.1826%" y="1135.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.21%)</title><rect x="40.2204%" y="1109" width="0.2066%" height="15" fill="rgb(214,7,15)" fg:x="584" fg:w="3"/><text x="40.3204%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.14%)</title><rect x="40.4270%" y="1173" width="0.1377%" height="15" fill="rgb(235,32,4)" fg:x="587" fg:w="2"/><text x="40.5270%" y="1183.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.07%)</title><rect x="40.4959%" y="1157" width="0.0689%" height="15" fill="rgb(238,90,54)" fg:x="588" fg:w="1"/><text x="40.5959%" y="1167.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.07%)</title><rect x="40.4959%" y="1141" width="0.0689%" height="15" fill="rgb(213,208,19)" fg:x="588" fg:w="1"/><text x="40.5959%" y="1151.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.07%)</title><rect x="40.4959%" y="1125" width="0.0689%" height="15" fill="rgb(233,156,4)" fg:x="588" fg:w="1"/><text x="40.5959%" y="1135.50"></text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 1.17%)</title><rect x="39.4628%" y="1189" width="1.1708%" height="15" fill="rgb(207,194,5)" fg:x="573" fg:w="17"/><text x="39.5628%" y="1199.50">co..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.07%)</title><rect x="40.5647%" y="1173" width="0.0689%" height="15" fill="rgb(206,111,30)" fg:x="589" fg:w="1"/><text x="40.6647%" y="1183.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.07%)</title><rect x="40.5647%" y="1157" width="0.0689%" height="15" fill="rgb(243,70,54)" fg:x="589" fg:w="1"/><text x="40.6647%" y="1167.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 0.07%)</title><rect x="40.5647%" y="1141" width="0.0689%" height="15" fill="rgb(242,28,8)" fg:x="589" fg:w="1"/><text x="40.6647%" y="1151.50"></text></g><g><title>&lt;day_12::node::Node as core::hash::Hash&gt;::hash (1 samples, 0.07%)</title><rect x="40.5647%" y="1125" width="0.0689%" height="15" fill="rgb(219,106,18)" fg:x="589" fg:w="1"/><text x="40.6647%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.07%)</title><rect x="40.5647%" y="1109" width="0.0689%" height="15" fill="rgb(244,222,10)" fg:x="589" fg:w="1"/><text x="40.6647%" y="1119.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.07%)</title><rect x="40.5647%" y="1093" width="0.0689%" height="15" fill="rgb(236,179,52)" fg:x="589" fg:w="1"/><text x="40.6647%" y="1103.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="40.5647%" y="1077" width="0.0689%" height="15" fill="rgb(213,23,39)" fg:x="589" fg:w="1"/><text x="40.6647%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="40.6336%" y="1157" width="0.0689%" height="15" fill="rgb(238,48,10)" fg:x="590" fg:w="1"/><text x="40.7336%" y="1167.50"></text></g><g><title>day_12::dfs::path_to_string (3 samples, 0.21%)</title><rect x="40.6336%" y="1173" width="0.2066%" height="15" fill="rgb(251,196,23)" fg:x="590" fg:w="3"/><text x="40.7336%" y="1183.50"></text></g><g><title>itertools::Itertools::intersperse (2 samples, 0.14%)</title><rect x="40.7025%" y="1157" width="0.1377%" height="15" fill="rgb(250,152,24)" fg:x="591" fg:w="2"/><text x="40.8025%" y="1167.50"></text></g><g><title>itertools::intersperse::intersperse (2 samples, 0.14%)</title><rect x="40.7025%" y="1141" width="0.1377%" height="15" fill="rgb(209,150,17)" fg:x="591" fg:w="2"/><text x="40.8025%" y="1151.50"></text></g><g><title>itertools::intersperse::intersperse_with (2 samples, 0.14%)</title><rect x="40.7025%" y="1125" width="0.1377%" height="15" fill="rgb(234,202,34)" fg:x="591" fg:w="2"/><text x="40.8025%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="40.7025%" y="1109" width="0.1377%" height="15" fill="rgb(253,148,53)" fg:x="591" fg:w="2"/><text x="40.8025%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.14%)</title><rect x="40.7025%" y="1093" width="0.1377%" height="15" fill="rgb(218,129,16)" fg:x="591" fg:w="2"/><text x="40.8025%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="40.7025%" y="1077" width="0.1377%" height="15" fill="rgb(216,85,19)" fg:x="591" fg:w="2"/><text x="40.8025%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.14%)</title><rect x="40.7025%" y="1061" width="0.1377%" height="15" fill="rgb(235,228,7)" fg:x="591" fg:w="2"/><text x="40.8025%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (2 samples, 0.14%)</title><rect x="40.8402%" y="1061" width="0.1377%" height="15" fill="rgb(245,175,0)" fg:x="593" fg:w="2"/><text x="40.9402%" y="1071.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.14%)</title><rect x="40.8402%" y="1045" width="0.1377%" height="15" fill="rgb(208,168,36)" fg:x="593" fg:w="2"/><text x="40.9402%" y="1055.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (2 samples, 0.14%)</title><rect x="40.8402%" y="1029" width="0.1377%" height="15" fill="rgb(246,171,24)" fg:x="593" fg:w="2"/><text x="40.9402%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.14%)</title><rect x="40.8402%" y="1013" width="0.1377%" height="15" fill="rgb(215,142,24)" fg:x="593" fg:w="2"/><text x="40.9402%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2 samples, 0.14%)</title><rect x="40.8402%" y="997" width="0.1377%" height="15" fill="rgb(250,187,7)" fg:x="593" fg:w="2"/><text x="40.9402%" y="1007.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (2 samples, 0.14%)</title><rect x="40.8402%" y="981" width="0.1377%" height="15" fill="rgb(228,66,33)" fg:x="593" fg:w="2"/><text x="40.9402%" y="991.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.14%)</title><rect x="40.8402%" y="965" width="0.1377%" height="15" fill="rgb(234,215,21)" fg:x="593" fg:w="2"/><text x="40.9402%" y="975.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.14%)</title><rect x="40.8402%" y="949" width="0.1377%" height="15" fill="rgb(222,191,20)" fg:x="593" fg:w="2"/><text x="40.9402%" y="959.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_contains (9 samples, 0.62%)</title><rect x="40.6336%" y="1189" width="0.6198%" height="15" fill="rgb(245,79,54)" fg:x="590" fg:w="9"/><text x="40.7336%" y="1199.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (6 samples, 0.41%)</title><rect x="40.8402%" y="1173" width="0.4132%" height="15" fill="rgb(240,10,37)" fg:x="593" fg:w="6"/><text x="40.9402%" y="1183.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (6 samples, 0.41%)</title><rect x="40.8402%" y="1157" width="0.4132%" height="15" fill="rgb(214,192,32)" fg:x="593" fg:w="6"/><text x="40.9402%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (6 samples, 0.41%)</title><rect x="40.8402%" y="1141" width="0.4132%" height="15" fill="rgb(209,36,54)" fg:x="593" fg:w="6"/><text x="40.9402%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.41%)</title><rect x="40.8402%" y="1125" width="0.4132%" height="15" fill="rgb(220,10,11)" fg:x="593" fg:w="6"/><text x="40.9402%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.41%)</title><rect x="40.8402%" y="1109" width="0.4132%" height="15" fill="rgb(221,106,17)" fg:x="593" fg:w="6"/><text x="40.9402%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.41%)</title><rect x="40.8402%" y="1093" width="0.4132%" height="15" fill="rgb(251,142,44)" fg:x="593" fg:w="6"/><text x="40.9402%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.41%)</title><rect x="40.8402%" y="1077" width="0.4132%" height="15" fill="rgb(238,13,15)" fg:x="593" fg:w="6"/><text x="40.9402%" y="1087.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (4 samples, 0.28%)</title><rect x="40.9780%" y="1061" width="0.2755%" height="15" fill="rgb(208,107,27)" fg:x="595" fg:w="4"/><text x="41.0780%" y="1071.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (4 samples, 0.28%)</title><rect x="40.9780%" y="1045" width="0.2755%" height="15" fill="rgb(205,136,37)" fg:x="595" fg:w="4"/><text x="41.0780%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.28%)</title><rect x="40.9780%" y="1029" width="0.2755%" height="15" fill="rgb(250,205,27)" fg:x="595" fg:w="4"/><text x="41.0780%" y="1039.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="41.2534%" y="1109" width="0.0689%" height="15" fill="rgb(210,80,43)" fg:x="599" fg:w="1"/><text x="41.3534%" y="1119.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.07%)</title><rect x="41.2534%" y="1093" width="0.0689%" height="15" fill="rgb(247,160,36)" fg:x="599" fg:w="1"/><text x="41.3534%" y="1103.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.07%)</title><rect x="41.2534%" y="1077" width="0.0689%" height="15" fill="rgb(234,13,49)" fg:x="599" fg:w="1"/><text x="41.3534%" y="1087.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.07%)</title><rect x="41.2534%" y="1061" width="0.0689%" height="15" fill="rgb(234,122,0)" fg:x="599" fg:w="1"/><text x="41.3534%" y="1071.50"></text></g><g><title>core::mem::replace (1 samples, 0.07%)</title><rect x="41.2534%" y="1045" width="0.0689%" height="15" fill="rgb(207,146,38)" fg:x="599" fg:w="1"/><text x="41.3534%" y="1055.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="41.2534%" y="1029" width="0.0689%" height="15" fill="rgb(207,177,25)" fg:x="599" fg:w="1"/><text x="41.3534%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.21%)</title><rect x="41.2534%" y="1173" width="0.2066%" height="15" fill="rgb(211,178,42)" fg:x="599" fg:w="3"/><text x="41.3534%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.21%)</title><rect x="41.2534%" y="1157" width="0.2066%" height="15" fill="rgb(230,69,54)" fg:x="599" fg:w="3"/><text x="41.3534%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.21%)</title><rect x="41.2534%" y="1141" width="0.2066%" height="15" fill="rgb(214,135,41)" fg:x="599" fg:w="3"/><text x="41.3534%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.21%)</title><rect x="41.2534%" y="1125" width="0.2066%" height="15" fill="rgb(237,67,25)" fg:x="599" fg:w="3"/><text x="41.3534%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="41.3223%" y="1109" width="0.1377%" height="15" fill="rgb(222,189,50)" fg:x="600" fg:w="2"/><text x="41.4223%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="41.3223%" y="1093" width="0.1377%" height="15" fill="rgb(245,148,34)" fg:x="600" fg:w="2"/><text x="41.4223%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.14%)</title><rect x="41.3223%" y="1077" width="0.1377%" height="15" fill="rgb(222,29,6)" fg:x="600" fg:w="2"/><text x="41.4223%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.14%)</title><rect x="41.3223%" y="1061" width="0.1377%" height="15" fill="rgb(221,189,43)" fg:x="600" fg:w="2"/><text x="41.4223%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.14%)</title><rect x="41.3223%" y="1045" width="0.1377%" height="15" fill="rgb(207,36,27)" fg:x="600" fg:w="2"/><text x="41.4223%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.14%)</title><rect x="41.3223%" y="1029" width="0.1377%" height="15" fill="rgb(217,90,24)" fg:x="600" fg:w="2"/><text x="41.4223%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="41.4601%" y="1173" width="0.0689%" height="15" fill="rgb(224,66,35)" fg:x="602" fg:w="1"/><text x="41.5601%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="41.4601%" y="1157" width="0.0689%" height="15" fill="rgb(221,13,50)" fg:x="602" fg:w="1"/><text x="41.5601%" y="1167.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.07%)</title><rect x="41.4601%" y="1141" width="0.0689%" height="15" fill="rgb(236,68,49)" fg:x="602" fg:w="1"/><text x="41.5601%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.07%)</title><rect x="41.5289%" y="1173" width="0.0689%" height="15" fill="rgb(229,146,28)" fg:x="603" fg:w="1"/><text x="41.6289%" y="1183.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}} (1 samples, 0.07%)</title><rect x="41.5289%" y="1157" width="0.0689%" height="15" fill="rgb(225,31,38)" fg:x="603" fg:w="1"/><text x="41.6289%" y="1167.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="41.5289%" y="1141" width="0.0689%" height="15" fill="rgb(250,208,3)" fg:x="603" fg:w="1"/><text x="41.6289%" y="1151.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::inner (1 samples, 0.07%)</title><rect x="41.5289%" y="1125" width="0.0689%" height="15" fill="rgb(246,54,23)" fg:x="603" fg:w="1"/><text x="41.6289%" y="1135.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.07%)</title><rect x="41.5289%" y="1109" width="0.0689%" height="15" fill="rgb(243,76,11)" fg:x="603" fg:w="1"/><text x="41.6289%" y="1119.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (6 samples, 0.41%)</title><rect x="41.2534%" y="1189" width="0.4132%" height="15" fill="rgb(245,21,50)" fg:x="599" fg:w="6"/><text x="41.3534%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;day_12::node::Node&gt;&gt;&gt; (1 samples, 0.07%)</title><rect x="41.5978%" y="1173" width="0.0689%" height="15" fill="rgb(228,9,43)" fg:x="604" fg:w="1"/><text x="41.6978%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;day_12::node::Node&gt;&gt; (1 samples, 0.07%)</title><rect x="41.5978%" y="1157" width="0.0689%" height="15" fill="rgb(208,100,47)" fg:x="604" fg:w="1"/><text x="41.6978%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="41.6667%" y="1189" width="0.0689%" height="15" fill="rgb(232,26,8)" fg:x="605" fg:w="1"/><text x="41.7667%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.07%)</title><rect x="41.6667%" y="1173" width="0.0689%" height="15" fill="rgb(216,166,38)" fg:x="605" fg:w="1"/><text x="41.7667%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.07%)</title><rect x="41.6667%" y="1157" width="0.0689%" height="15" fill="rgb(251,202,51)" fg:x="605" fg:w="1"/><text x="41.7667%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="41.6667%" y="1141" width="0.0689%" height="15" fill="rgb(254,216,34)" fg:x="605" fg:w="1"/><text x="41.7667%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.21%)</title><rect x="41.7355%" y="1189" width="0.2066%" height="15" fill="rgb(251,32,27)" fg:x="606" fg:w="3"/><text x="41.8355%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (3 samples, 0.21%)</title><rect x="41.7355%" y="1173" width="0.2066%" height="15" fill="rgb(208,127,28)" fg:x="606" fg:w="3"/><text x="41.8355%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.07%)</title><rect x="41.8733%" y="1157" width="0.0689%" height="15" fill="rgb(224,137,22)" fg:x="608" fg:w="1"/><text x="41.9733%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.07%)</title><rect x="41.8733%" y="1141" width="0.0689%" height="15" fill="rgb(254,70,32)" fg:x="608" fg:w="1"/><text x="41.9733%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.07%)</title><rect x="41.8733%" y="1125" width="0.0689%" height="15" fill="rgb(229,75,37)" fg:x="608" fg:w="1"/><text x="41.9733%" y="1135.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.07%)</title><rect x="42.1488%" y="1173" width="0.0689%" height="15" fill="rgb(252,64,23)" fg:x="612" fg:w="1"/><text x="42.2488%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (3 samples, 0.21%)</title><rect x="42.2176%" y="1141" width="0.2066%" height="15" fill="rgb(232,162,48)" fg:x="613" fg:w="3"/><text x="42.3176%" y="1151.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (2 samples, 0.14%)</title><rect x="42.2865%" y="1125" width="0.1377%" height="15" fill="rgb(246,160,12)" fg:x="614" fg:w="2"/><text x="42.3865%" y="1135.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.14%)</title><rect x="42.2865%" y="1109" width="0.1377%" height="15" fill="rgb(247,166,0)" fg:x="614" fg:w="2"/><text x="42.3865%" y="1119.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (2 samples, 0.14%)</title><rect x="42.4242%" y="1141" width="0.1377%" height="15" fill="rgb(249,219,21)" fg:x="616" fg:w="2"/><text x="42.5242%" y="1151.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.14%)</title><rect x="42.4242%" y="1125" width="0.1377%" height="15" fill="rgb(205,209,3)" fg:x="616" fg:w="2"/><text x="42.5242%" y="1135.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.14%)</title><rect x="42.4242%" y="1109" width="0.1377%" height="15" fill="rgb(243,44,1)" fg:x="616" fg:w="2"/><text x="42.5242%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (6 samples, 0.41%)</title><rect x="42.2176%" y="1157" width="0.4132%" height="15" fill="rgb(206,159,16)" fg:x="613" fg:w="6"/><text x="42.3176%" y="1167.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.07%)</title><rect x="42.5620%" y="1141" width="0.0689%" height="15" fill="rgb(244,77,30)" fg:x="618" fg:w="1"/><text x="42.6620%" y="1151.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (11 samples, 0.76%)</title><rect x="41.9421%" y="1189" width="0.7576%" height="15" fill="rgb(218,69,12)" fg:x="609" fg:w="11"/><text x="42.0421%" y="1199.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.48%)</title><rect x="42.2176%" y="1173" width="0.4821%" height="15" fill="rgb(212,87,7)" fg:x="613" fg:w="7"/><text x="42.3176%" y="1183.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.07%)</title><rect x="42.6309%" y="1157" width="0.0689%" height="15" fill="rgb(245,114,25)" fg:x="619" fg:w="1"/><text x="42.7309%" y="1167.50"></text></g><g><title>[[stack]] (264 samples, 18.18%)</title><rect x="24.7934%" y="1205" width="18.1818%" height="15" fill="rgb(210,61,42)" fg:x="360" fg:w="264"/><text x="24.8934%" y="1215.50">[[stack]]</text></g><g><title>itertools::Itertools::counts (4 samples, 0.28%)</title><rect x="42.6997%" y="1189" width="0.2755%" height="15" fill="rgb(211,52,33)" fg:x="620" fg:w="4"/><text x="42.7997%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.28%)</title><rect x="42.6997%" y="1173" width="0.2755%" height="15" fill="rgb(234,58,33)" fg:x="620" fg:w="4"/><text x="42.7997%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.28%)</title><rect x="42.6997%" y="1157" width="0.2755%" height="15" fill="rgb(220,115,36)" fg:x="620" fg:w="4"/><text x="42.7997%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.28%)</title><rect x="42.6997%" y="1141" width="0.2755%" height="15" fill="rgb(243,153,54)" fg:x="620" fg:w="4"/><text x="42.7997%" y="1151.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (4 samples, 0.28%)</title><rect x="42.6997%" y="1125" width="0.2755%" height="15" fill="rgb(251,47,18)" fg:x="620" fg:w="4"/><text x="42.7997%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.14%)</title><rect x="42.8375%" y="1109" width="0.1377%" height="15" fill="rgb(242,102,42)" fg:x="622" fg:w="2"/><text x="42.9375%" y="1119.50"></text></g><g><title>itertools::Itertools::counts::{{closure}} (2 samples, 0.14%)</title><rect x="42.8375%" y="1093" width="0.1377%" height="15" fill="rgb(234,31,38)" fg:x="622" fg:w="2"/><text x="42.9375%" y="1103.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.07%)</title><rect x="42.9063%" y="1077" width="0.0689%" height="15" fill="rgb(221,117,51)" fg:x="623" fg:w="1"/><text x="43.0063%" y="1087.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="42.9752%" y="1189" width="0.0689%" height="15" fill="rgb(212,20,18)" fg:x="624" fg:w="1"/><text x="43.0752%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="42.9752%" y="1173" width="0.0689%" height="15" fill="rgb(245,133,36)" fg:x="624" fg:w="1"/><text x="43.0752%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="42.9752%" y="1157" width="0.0689%" height="15" fill="rgb(212,6,19)" fg:x="624" fg:w="1"/><text x="43.0752%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="42.9752%" y="1141" width="0.0689%" height="15" fill="rgb(218,1,36)" fg:x="624" fg:w="1"/><text x="43.0752%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="42.9752%" y="1125" width="0.0689%" height="15" fill="rgb(246,84,54)" fg:x="624" fg:w="1"/><text x="43.0752%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="42.9752%" y="1109" width="0.0689%" height="15" fill="rgb(242,110,6)" fg:x="624" fg:w="1"/><text x="43.0752%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="42.9752%" y="1093" width="0.0689%" height="15" fill="rgb(214,47,5)" fg:x="624" fg:w="1"/><text x="43.0752%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="42.9752%" y="1077" width="0.0689%" height="15" fill="rgb(218,159,25)" fg:x="624" fg:w="1"/><text x="43.0752%" y="1087.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="43.0441%" y="1189" width="0.0689%" height="15" fill="rgb(215,211,28)" fg:x="625" fg:w="1"/><text x="43.1441%" y="1199.50"></text></g><g><title>tcache_get (1 samples, 0.07%)</title><rect x="43.0441%" y="1173" width="0.0689%" height="15" fill="rgb(238,59,32)" fg:x="625" fg:w="1"/><text x="43.1441%" y="1183.50"></text></g><g><title>[anon] (3 samples, 0.21%)</title><rect x="42.9752%" y="1205" width="0.2066%" height="15" fill="rgb(226,82,3)" fg:x="624" fg:w="3"/><text x="43.0752%" y="1215.50"></text></g><g><title>__rust_alloc (1 samples, 0.07%)</title><rect x="43.1129%" y="1189" width="0.0689%" height="15" fill="rgb(240,164,32)" fg:x="626" fg:w="1"/><text x="43.2129%" y="1199.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="43.1818%" y="1189" width="0.1377%" height="15" fill="rgb(232,46,7)" fg:x="627" fg:w="2"/><text x="43.2818%" y="1199.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.21%)</title><rect x="43.5950%" y="1173" width="0.2066%" height="15" fill="rgb(229,129,53)" fg:x="633" fg:w="3"/><text x="43.6950%" y="1183.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.07%)</title><rect x="43.7328%" y="1157" width="0.0689%" height="15" fill="rgb(234,188,29)" fg:x="635" fg:w="1"/><text x="43.8328%" y="1167.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.55%)</title><rect x="43.3196%" y="1189" width="0.5510%" height="15" fill="rgb(246,141,4)" fg:x="629" fg:w="8"/><text x="43.4196%" y="1199.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.07%)</title><rect x="43.8017%" y="1173" width="0.0689%" height="15" fill="rgb(229,23,39)" fg:x="636" fg:w="1"/><text x="43.9017%" y="1183.50"></text></g><g><title>__GI___libc_free (1 samples, 0.07%)</title><rect x="43.8705%" y="1189" width="0.0689%" height="15" fill="rgb(206,12,3)" fg:x="637" fg:w="1"/><text x="43.9705%" y="1199.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.34%)</title><rect x="43.9394%" y="1189" width="0.3444%" height="15" fill="rgb(252,226,20)" fg:x="638" fg:w="5"/><text x="44.0394%" y="1199.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.07%)</title><rect x="44.2837%" y="1189" width="0.0689%" height="15" fill="rgb(216,123,35)" fg:x="643" fg:w="1"/><text x="44.3837%" y="1199.50"></text></g><g><title>__memcpy_evex_unaligned_erms (8 samples, 0.55%)</title><rect x="44.3526%" y="1189" width="0.5510%" height="15" fill="rgb(212,68,40)" fg:x="644" fg:w="8"/><text x="44.4526%" y="1199.50"></text></g><g><title>__rdl_alloc (2 samples, 0.14%)</title><rect x="44.9036%" y="1189" width="0.1377%" height="15" fill="rgb(254,125,32)" fg:x="652" fg:w="2"/><text x="45.0036%" y="1199.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.14%)</title><rect x="44.9036%" y="1173" width="0.1377%" height="15" fill="rgb(253,97,22)" fg:x="652" fg:w="2"/><text x="45.0036%" y="1183.50"></text></g><g><title>__rust_dealloc (2 samples, 0.14%)</title><rect x="45.0413%" y="1189" width="0.1377%" height="15" fill="rgb(241,101,14)" fg:x="654" fg:w="2"/><text x="45.1413%" y="1199.50"></text></g><g><title>_int_malloc (1 samples, 0.07%)</title><rect x="45.1791%" y="1189" width="0.0689%" height="15" fill="rgb(238,103,29)" fg:x="656" fg:w="1"/><text x="45.2791%" y="1199.50"></text></g><g><title>[day-12] (31 samples, 2.13%)</title><rect x="43.1818%" y="1205" width="2.1350%" height="15" fill="rgb(233,195,47)" fg:x="627" fg:w="31"/><text x="43.2818%" y="1215.50">[day-12]</text></g><g><title>day_12::dfs::DfsVisitor::all_paths_contains (1 samples, 0.07%)</title><rect x="45.2479%" y="1189" width="0.0689%" height="15" fill="rgb(246,218,30)" fg:x="657" fg:w="1"/><text x="45.3479%" y="1199.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="45.3168%" y="1189" width="0.0689%" height="15" fill="rgb(219,145,47)" fg:x="658" fg:w="1"/><text x="45.4168%" y="1199.50"></text></g><g><title>__GI___libc_free (1 samples, 0.07%)</title><rect x="45.3857%" y="1189" width="0.0689%" height="15" fill="rgb(243,12,26)" fg:x="659" fg:w="1"/><text x="45.4857%" y="1199.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2 samples, 0.14%)</title><rect x="45.4545%" y="1189" width="0.1377%" height="15" fill="rgb(214,87,16)" fg:x="660" fg:w="2"/><text x="45.5545%" y="1199.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="45.5923%" y="1189" width="0.0689%" height="15" fill="rgb(208,99,42)" fg:x="662" fg:w="1"/><text x="45.6923%" y="1199.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.07%)</title><rect x="45.5923%" y="1173" width="0.0689%" height="15" fill="rgb(253,99,2)" fg:x="662" fg:w="1"/><text x="45.6923%" y="1183.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.07%)</title><rect x="45.5923%" y="1157" width="0.0689%" height="15" fill="rgb(220,168,23)" fg:x="662" fg:w="1"/><text x="45.6923%" y="1167.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.07%)</title><rect x="45.5923%" y="1141" width="0.0689%" height="15" fill="rgb(242,38,24)" fg:x="662" fg:w="1"/><text x="45.6923%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.07%)</title><rect x="45.5923%" y="1125" width="0.0689%" height="15" fill="rgb(225,182,9)" fg:x="662" fg:w="1"/><text x="45.6923%" y="1135.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.07%)</title><rect x="45.5923%" y="1109" width="0.0689%" height="15" fill="rgb(243,178,37)" fg:x="662" fg:w="1"/><text x="45.6923%" y="1119.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_contains (1 samples, 0.07%)</title><rect x="45.6612%" y="1189" width="0.0689%" height="15" fill="rgb(232,139,19)" fg:x="663" fg:w="1"/><text x="45.7612%" y="1199.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.07%)</title><rect x="45.6612%" y="1173" width="0.0689%" height="15" fill="rgb(225,201,24)" fg:x="663" fg:w="1"/><text x="45.7612%" y="1183.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.07%)</title><rect x="45.6612%" y="1157" width="0.0689%" height="15" fill="rgb(221,47,46)" fg:x="663" fg:w="1"/><text x="45.7612%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.07%)</title><rect x="45.6612%" y="1141" width="0.0689%" height="15" fill="rgb(249,23,13)" fg:x="663" fg:w="1"/><text x="45.7612%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.07%)</title><rect x="45.6612%" y="1125" width="0.0689%" height="15" fill="rgb(219,9,5)" fg:x="663" fg:w="1"/><text x="45.7612%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.07%)</title><rect x="45.6612%" y="1109" width="0.0689%" height="15" fill="rgb(254,171,16)" fg:x="663" fg:w="1"/><text x="45.7612%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.07%)</title><rect x="45.6612%" y="1093" width="0.0689%" height="15" fill="rgb(230,171,20)" fg:x="663" fg:w="1"/><text x="45.7612%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.07%)</title><rect x="45.6612%" y="1077" width="0.0689%" height="15" fill="rgb(210,71,41)" fg:x="663" fg:w="1"/><text x="45.7612%" y="1087.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.07%)</title><rect x="45.6612%" y="1061" width="0.0689%" height="15" fill="rgb(206,173,20)" fg:x="663" fg:w="1"/><text x="45.7612%" y="1071.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.07%)</title><rect x="45.6612%" y="1045" width="0.0689%" height="15" fill="rgb(233,88,34)" fg:x="663" fg:w="1"/><text x="45.7612%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="45.6612%" y="1029" width="0.0689%" height="15" fill="rgb(223,209,46)" fg:x="663" fg:w="1"/><text x="45.7612%" y="1039.50"></text></g><g><title>[libc.so.6] (7 samples, 0.48%)</title><rect x="45.3168%" y="1205" width="0.4821%" height="15" fill="rgb(250,43,18)" fg:x="658" fg:w="7"/><text x="45.4168%" y="1215.50"></text></g><g><title>itertools::Itertools::counts (1 samples, 0.07%)</title><rect x="45.7300%" y="1189" width="0.0689%" height="15" fill="rgb(208,13,10)" fg:x="664" fg:w="1"/><text x="45.8300%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.07%)</title><rect x="45.7300%" y="1173" width="0.0689%" height="15" fill="rgb(212,200,36)" fg:x="664" fg:w="1"/><text x="45.8300%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="45.7300%" y="1157" width="0.0689%" height="15" fill="rgb(225,90,30)" fg:x="664" fg:w="1"/><text x="45.8300%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="45.7300%" y="1141" width="0.0689%" height="15" fill="rgb(236,182,39)" fg:x="664" fg:w="1"/><text x="45.8300%" y="1151.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (1 samples, 0.07%)</title><rect x="45.7300%" y="1125" width="0.0689%" height="15" fill="rgb(212,144,35)" fg:x="664" fg:w="1"/><text x="45.8300%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.07%)</title><rect x="45.7300%" y="1109" width="0.0689%" height="15" fill="rgb(228,63,44)" fg:x="664" fg:w="1"/><text x="45.8300%" y="1119.50"></text></g><g><title>itertools::Itertools::counts::{{closure}} (1 samples, 0.07%)</title><rect x="45.7300%" y="1093" width="0.0689%" height="15" fill="rgb(228,109,6)" fg:x="664" fg:w="1"/><text x="45.8300%" y="1103.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_default (1 samples, 0.07%)</title><rect x="45.7300%" y="1077" width="0.0689%" height="15" fill="rgb(238,117,24)" fg:x="664" fg:w="1"/><text x="45.8300%" y="1087.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (1 samples, 0.07%)</title><rect x="45.7300%" y="1061" width="0.0689%" height="15" fill="rgb(242,26,26)" fg:x="664" fg:w="1"/><text x="45.8300%" y="1071.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="45.7300%" y="1045" width="0.0689%" height="15" fill="rgb(221,92,48)" fg:x="664" fg:w="1"/><text x="45.8300%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (1 samples, 0.07%)</title><rect x="45.7300%" y="1029" width="0.0689%" height="15" fill="rgb(209,209,32)" fg:x="664" fg:w="1"/><text x="45.8300%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.07%)</title><rect x="45.7300%" y="1013" width="0.0689%" height="15" fill="rgb(221,70,22)" fg:x="664" fg:w="1"/><text x="45.8300%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.07%)</title><rect x="45.7300%" y="997" width="0.0689%" height="15" fill="rgb(248,145,5)" fg:x="664" fg:w="1"/><text x="45.8300%" y="1007.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.07%)</title><rect x="45.7300%" y="981" width="0.0689%" height="15" fill="rgb(226,116,26)" fg:x="664" fg:w="1"/><text x="45.8300%" y="991.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.07%)</title><rect x="45.7300%" y="965" width="0.0689%" height="15" fill="rgb(244,5,17)" fg:x="664" fg:w="1"/><text x="45.8300%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="45.7300%" y="949" width="0.0689%" height="15" fill="rgb(252,159,33)" fg:x="664" fg:w="1"/><text x="45.8300%" y="959.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.14%)</title><rect x="46.0055%" y="1189" width="0.1377%" height="15" fill="rgb(206,71,0)" fg:x="668" fg:w="2"/><text x="46.1055%" y="1199.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.21%)</title><rect x="47.5207%" y="1077" width="0.2066%" height="15" fill="rgb(233,118,54)" fg:x="690" fg:w="3"/><text x="47.6207%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (15 samples, 1.03%)</title><rect x="47.5207%" y="1109" width="1.0331%" height="15" fill="rgb(234,83,48)" fg:x="690" fg:w="15"/><text x="47.6207%" y="1119.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (15 samples, 1.03%)</title><rect x="47.5207%" y="1093" width="1.0331%" height="15" fill="rgb(228,3,54)" fg:x="690" fg:w="15"/><text x="47.6207%" y="1103.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.83%)</title><rect x="47.7273%" y="1077" width="0.8264%" height="15" fill="rgb(226,155,13)" fg:x="693" fg:w="12"/><text x="47.8273%" y="1087.50">a..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.48%)</title><rect x="48.0716%" y="1061" width="0.4821%" height="15" fill="rgb(241,28,37)" fg:x="698" fg:w="7"/><text x="48.1716%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.48%)</title><rect x="48.0716%" y="1045" width="0.4821%" height="15" fill="rgb(233,93,10)" fg:x="698" fg:w="7"/><text x="48.1716%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.48%)</title><rect x="48.0716%" y="1029" width="0.4821%" height="15" fill="rgb(225,113,19)" fg:x="698" fg:w="7"/><text x="48.1716%" y="1039.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (44 samples, 3.03%)</title><rect x="46.1433%" y="1189" width="3.0303%" height="15" fill="rgb(241,2,18)" fg:x="670" fg:w="44"/><text x="46.2433%" y="1199.50">&lt;alloc::st..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (24 samples, 1.65%)</title><rect x="47.5207%" y="1173" width="1.6529%" height="15" fill="rgb(228,207,21)" fg:x="690" fg:w="24"/><text x="47.6207%" y="1183.50">&lt;allo..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (24 samples, 1.65%)</title><rect x="47.5207%" y="1157" width="1.6529%" height="15" fill="rgb(213,211,35)" fg:x="690" fg:w="24"/><text x="47.6207%" y="1167.50">alloc..</text></g><g><title>alloc::slice::hack::to_vec (24 samples, 1.65%)</title><rect x="47.5207%" y="1141" width="1.6529%" height="15" fill="rgb(209,83,10)" fg:x="690" fg:w="24"/><text x="47.6207%" y="1151.50">alloc..</text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (24 samples, 1.65%)</title><rect x="47.5207%" y="1125" width="1.6529%" height="15" fill="rgb(209,164,1)" fg:x="690" fg:w="24"/><text x="47.6207%" y="1135.50">&lt;T as..</text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (9 samples, 0.62%)</title><rect x="48.5537%" y="1109" width="0.6198%" height="15" fill="rgb(213,184,43)" fg:x="705" fg:w="9"/><text x="48.6537%" y="1119.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.62%)</title><rect x="48.5537%" y="1093" width="0.6198%" height="15" fill="rgb(231,61,34)" fg:x="705" fg:w="9"/><text x="48.6537%" y="1103.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="49.1736%" y="1189" width="0.1377%" height="15" fill="rgb(235,75,3)" fg:x="714" fg:w="2"/><text x="49.2736%" y="1199.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.14%)</title><rect x="49.1736%" y="1173" width="0.1377%" height="15" fill="rgb(220,106,47)" fg:x="714" fg:w="2"/><text x="49.2736%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.21%)</title><rect x="49.3113%" y="1173" width="0.2066%" height="15" fill="rgb(210,196,33)" fg:x="716" fg:w="3"/><text x="49.4113%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="49.5868%" y="1141" width="0.0689%" height="15" fill="rgb(229,154,42)" fg:x="720" fg:w="1"/><text x="49.6868%" y="1151.50"></text></g><g><title>&lt;std::collections::hash::map::IntoIter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="49.6556%" y="1077" width="0.1377%" height="15" fill="rgb(228,114,26)" fg:x="721" fg:w="2"/><text x="49.7556%" y="1087.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="49.6556%" y="1061" width="0.1377%" height="15" fill="rgb(208,144,1)" fg:x="721" fg:w="2"/><text x="49.7556%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="49.6556%" y="1045" width="0.1377%" height="15" fill="rgb(239,112,37)" fg:x="721" fg:w="2"/><text x="49.7556%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="49.6556%" y="1029" width="0.1377%" height="15" fill="rgb(210,96,50)" fg:x="721" fg:w="2"/><text x="49.7556%" y="1039.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::next_impl (1 samples, 0.07%)</title><rect x="49.7245%" y="1013" width="0.0689%" height="15" fill="rgb(222,178,2)" fg:x="722" fg:w="1"/><text x="49.8245%" y="1023.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::next_n (1 samples, 0.07%)</title><rect x="49.7245%" y="997" width="0.0689%" height="15" fill="rgb(226,74,18)" fg:x="722" fg:w="1"/><text x="49.8245%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.07%)</title><rect x="49.7245%" y="981" width="0.0689%" height="15" fill="rgb(225,67,54)" fg:x="722" fg:w="1"/><text x="49.8245%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.07%)</title><rect x="49.7245%" y="965" width="0.0689%" height="15" fill="rgb(251,92,32)" fg:x="722" fg:w="1"/><text x="49.8245%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.28%)</title><rect x="49.5868%" y="1157" width="0.2755%" height="15" fill="rgb(228,149,22)" fg:x="720" fg:w="4"/><text x="49.6868%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.21%)</title><rect x="49.6556%" y="1141" width="0.2066%" height="15" fill="rgb(243,54,13)" fg:x="721" fg:w="3"/><text x="49.7556%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.21%)</title><rect x="49.6556%" y="1125" width="0.2066%" height="15" fill="rgb(243,180,28)" fg:x="721" fg:w="3"/><text x="49.7556%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (3 samples, 0.21%)</title><rect x="49.6556%" y="1109" width="0.2066%" height="15" fill="rgb(208,167,24)" fg:x="721" fg:w="3"/><text x="49.7556%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.21%)</title><rect x="49.6556%" y="1093" width="0.2066%" height="15" fill="rgb(245,73,45)" fg:x="721" fg:w="3"/><text x="49.7556%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.07%)</title><rect x="49.7934%" y="1077" width="0.0689%" height="15" fill="rgb(237,203,48)" fg:x="723" fg:w="1"/><text x="49.8934%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.07%)</title><rect x="49.7934%" y="1061" width="0.0689%" height="15" fill="rgb(211,197,16)" fg:x="723" fg:w="1"/><text x="49.8934%" y="1071.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}} (1 samples, 0.07%)</title><rect x="49.7934%" y="1045" width="0.0689%" height="15" fill="rgb(243,99,51)" fg:x="723" fg:w="1"/><text x="49.8934%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (9 samples, 0.62%)</title><rect x="49.3113%" y="1189" width="0.6198%" height="15" fill="rgb(215,123,29)" fg:x="716" fg:w="9"/><text x="49.4113%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (6 samples, 0.41%)</title><rect x="49.5179%" y="1173" width="0.4132%" height="15" fill="rgb(239,186,37)" fg:x="719" fg:w="6"/><text x="49.6179%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="49.8623%" y="1157" width="0.0689%" height="15" fill="rgb(252,136,39)" fg:x="724" fg:w="1"/><text x="49.9623%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.07%)</title><rect x="49.8623%" y="1141" width="0.0689%" height="15" fill="rgb(223,213,32)" fg:x="724" fg:w="1"/><text x="49.9623%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="49.8623%" y="1125" width="0.0689%" height="15" fill="rgb(233,115,5)" fg:x="724" fg:w="1"/><text x="49.9623%" y="1135.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.07%)</title><rect x="49.8623%" y="1109" width="0.0689%" height="15" fill="rgb(207,226,44)" fg:x="724" fg:w="1"/><text x="49.9623%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.07%)</title><rect x="49.8623%" y="1093" width="0.0689%" height="15" fill="rgb(208,126,0)" fg:x="724" fg:w="1"/><text x="49.9623%" y="1103.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}} (1 samples, 0.07%)</title><rect x="49.8623%" y="1077" width="0.0689%" height="15" fill="rgb(244,66,21)" fg:x="724" fg:w="1"/><text x="49.9623%" y="1087.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.14%)</title><rect x="51.5152%" y="1157" width="0.1377%" height="15" fill="rgb(222,97,12)" fg:x="748" fg:w="2"/><text x="51.6152%" y="1167.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.76%)</title><rect x="51.2397%" y="1173" width="0.7576%" height="15" fill="rgb(219,213,19)" fg:x="744" fg:w="11"/><text x="51.3397%" y="1183.50">&lt;..</text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.34%)</title><rect x="51.6529%" y="1157" width="0.3444%" height="15" fill="rgb(252,169,30)" fg:x="750" fg:w="5"/><text x="51.7529%" y="1167.50"></text></g><g><title>core::cmp::min (3 samples, 0.21%)</title><rect x="51.9972%" y="1173" width="0.2066%" height="15" fill="rgb(206,32,51)" fg:x="755" fg:w="3"/><text x="52.0972%" y="1183.50"></text></g><g><title>core::cmp::Ord::min (3 samples, 0.21%)</title><rect x="51.9972%" y="1157" width="0.2066%" height="15" fill="rgb(250,172,42)" fg:x="755" fg:w="3"/><text x="52.0972%" y="1167.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (3 samples, 0.21%)</title><rect x="51.9972%" y="1141" width="0.2066%" height="15" fill="rgb(209,34,43)" fg:x="755" fg:w="3"/><text x="52.0972%" y="1151.50"></text></g><g><title>core::hash::sip::u8to64_le (16 samples, 1.10%)</title><rect x="52.2039%" y="1173" width="1.1019%" height="15" fill="rgb(223,11,35)" fg:x="758" fg:w="16"/><text x="52.3039%" y="1183.50">co..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (51 samples, 3.51%)</title><rect x="49.9311%" y="1189" width="3.5124%" height="15" fill="rgb(251,219,26)" fg:x="725" fg:w="51"/><text x="50.0311%" y="1199.50">&lt;core::hash:..</text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.14%)</title><rect x="53.3058%" y="1173" width="0.1377%" height="15" fill="rgb(231,119,3)" fg:x="774" fg:w="2"/><text x="53.4058%" y="1183.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (7 samples, 0.48%)</title><rect x="55.1653%" y="1093" width="0.4821%" height="15" fill="rgb(216,97,11)" fg:x="801" fg:w="7"/><text x="55.2653%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (7 samples, 0.48%)</title><rect x="55.1653%" y="1077" width="0.4821%" height="15" fill="rgb(223,59,9)" fg:x="801" fg:w="7"/><text x="55.2653%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (7 samples, 0.48%)</title><rect x="55.1653%" y="1061" width="0.4821%" height="15" fill="rgb(233,93,31)" fg:x="801" fg:w="7"/><text x="55.2653%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (7 samples, 0.48%)</title><rect x="55.1653%" y="1045" width="0.4821%" height="15" fill="rgb(239,81,33)" fg:x="801" fg:w="7"/><text x="55.2653%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.41%)</title><rect x="55.6474%" y="1029" width="0.4132%" height="15" fill="rgb(213,120,34)" fg:x="808" fg:w="6"/><text x="55.7474%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.41%)</title><rect x="55.6474%" y="1013" width="0.4132%" height="15" fill="rgb(243,49,53)" fg:x="808" fg:w="6"/><text x="55.7474%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.14%)</title><rect x="55.9229%" y="997" width="0.1377%" height="15" fill="rgb(247,216,33)" fg:x="812" fg:w="2"/><text x="56.0229%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (2 samples, 0.14%)</title><rect x="55.9229%" y="981" width="0.1377%" height="15" fill="rgb(226,26,14)" fg:x="812" fg:w="2"/><text x="56.0229%" y="991.50"></text></g><g><title>alloc::string::String::push_str (10 samples, 0.69%)</title><rect x="55.6474%" y="1093" width="0.6887%" height="15" fill="rgb(215,49,53)" fg:x="808" fg:w="10"/><text x="55.7474%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (10 samples, 0.69%)</title><rect x="55.6474%" y="1077" width="0.6887%" height="15" fill="rgb(245,162,40)" fg:x="808" fg:w="10"/><text x="55.7474%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.69%)</title><rect x="55.6474%" y="1061" width="0.6887%" height="15" fill="rgb(229,68,17)" fg:x="808" fg:w="10"/><text x="55.7474%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10 samples, 0.69%)</title><rect x="55.6474%" y="1045" width="0.6887%" height="15" fill="rgb(213,182,10)" fg:x="808" fg:w="10"/><text x="55.7474%" y="1055.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.28%)</title><rect x="56.0606%" y="1029" width="0.2755%" height="15" fill="rgb(245,125,30)" fg:x="814" fg:w="4"/><text x="56.1606%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="56.4738%" y="1013" width="0.0689%" height="15" fill="rgb(232,202,2)" fg:x="820" fg:w="1"/><text x="56.5738%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (50 samples, 3.44%)</title><rect x="53.4435%" y="1189" width="3.4435%" height="15" fill="rgb(237,140,51)" fg:x="776" fg:w="50"/><text x="53.5435%" y="1199.50">&lt;core::iter:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (50 samples, 3.44%)</title><rect x="53.4435%" y="1173" width="3.4435%" height="15" fill="rgb(236,157,25)" fg:x="776" fg:w="50"/><text x="53.5435%" y="1183.50">core::iter::..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (50 samples, 3.44%)</title><rect x="53.4435%" y="1157" width="3.4435%" height="15" fill="rgb(219,209,0)" fg:x="776" fg:w="50"/><text x="53.5435%" y="1167.50">core::iter::..</text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (50 samples, 3.44%)</title><rect x="53.4435%" y="1141" width="3.4435%" height="15" fill="rgb(240,116,54)" fg:x="776" fg:w="50"/><text x="53.5435%" y="1151.50">&lt;itertools::..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (25 samples, 1.72%)</title><rect x="55.1653%" y="1125" width="1.7218%" height="15" fill="rgb(216,10,36)" fg:x="801" fg:w="25"/><text x="55.2653%" y="1135.50">core:..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (25 samples, 1.72%)</title><rect x="55.1653%" y="1109" width="1.7218%" height="15" fill="rgb(222,72,44)" fg:x="801" fg:w="25"/><text x="55.2653%" y="1119.50">&lt;allo..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (8 samples, 0.55%)</title><rect x="56.3361%" y="1093" width="0.5510%" height="15" fill="rgb(232,159,9)" fg:x="818" fg:w="8"/><text x="56.4361%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (8 samples, 0.55%)</title><rect x="56.3361%" y="1077" width="0.5510%" height="15" fill="rgb(210,39,32)" fg:x="818" fg:w="8"/><text x="56.4361%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (8 samples, 0.55%)</title><rect x="56.3361%" y="1061" width="0.5510%" height="15" fill="rgb(216,194,45)" fg:x="818" fg:w="8"/><text x="56.4361%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.55%)</title><rect x="56.3361%" y="1045" width="0.5510%" height="15" fill="rgb(218,18,35)" fg:x="818" fg:w="8"/><text x="56.4361%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.41%)</title><rect x="56.4738%" y="1029" width="0.4132%" height="15" fill="rgb(207,83,51)" fg:x="820" fg:w="6"/><text x="56.5738%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.34%)</title><rect x="56.5427%" y="1013" width="0.3444%" height="15" fill="rgb(225,63,43)" fg:x="821" fg:w="5"/><text x="56.6427%" y="1023.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.14%)</title><rect x="56.7493%" y="997" width="0.1377%" height="15" fill="rgb(207,57,36)" fg:x="824" fg:w="2"/><text x="56.8493%" y="1007.50"></text></g><g><title>checked_request2size (1 samples, 0.07%)</title><rect x="56.8182%" y="981" width="0.0689%" height="15" fill="rgb(216,99,33)" fg:x="825" fg:w="1"/><text x="56.9182%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (2 samples, 0.14%)</title><rect x="56.8871%" y="965" width="0.1377%" height="15" fill="rgb(225,42,16)" fg:x="826" fg:w="2"/><text x="56.9871%" y="975.50"></text></g><g><title>hashbrown::raw::is_full (2 samples, 0.14%)</title><rect x="56.8871%" y="949" width="0.1377%" height="15" fill="rgb(220,201,45)" fg:x="826" fg:w="2"/><text x="56.9871%" y="959.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.07%)</title><rect x="57.0248%" y="965" width="0.0689%" height="15" fill="rgb(225,33,4)" fg:x="828" fg:w="1"/><text x="57.1248%" y="975.50"></text></g><g><title>__GI___libc_free (4 samples, 0.28%)</title><rect x="56.8871%" y="1061" width="0.2755%" height="15" fill="rgb(224,33,50)" fg:x="826" fg:w="4"/><text x="56.9871%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.28%)</title><rect x="56.8871%" y="1045" width="0.2755%" height="15" fill="rgb(246,198,51)" fg:x="826" fg:w="4"/><text x="56.9871%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (4 samples, 0.28%)</title><rect x="56.8871%" y="1029" width="0.2755%" height="15" fill="rgb(205,22,4)" fg:x="826" fg:w="4"/><text x="56.9871%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (4 samples, 0.28%)</title><rect x="56.8871%" y="1013" width="0.2755%" height="15" fill="rgb(206,3,8)" fg:x="826" fg:w="4"/><text x="56.9871%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (4 samples, 0.28%)</title><rect x="56.8871%" y="997" width="0.2755%" height="15" fill="rgb(251,23,15)" fg:x="826" fg:w="4"/><text x="56.9871%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (4 samples, 0.28%)</title><rect x="56.8871%" y="981" width="0.2755%" height="15" fill="rgb(252,88,28)" fg:x="826" fg:w="4"/><text x="56.9871%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.07%)</title><rect x="57.0937%" y="965" width="0.0689%" height="15" fill="rgb(212,127,14)" fg:x="829" fg:w="1"/><text x="57.1937%" y="975.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.07%)</title><rect x="57.0937%" y="949" width="0.0689%" height="15" fill="rgb(247,145,37)" fg:x="829" fg:w="1"/><text x="57.1937%" y="959.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.34%)</title><rect x="56.8871%" y="1189" width="0.3444%" height="15" fill="rgb(209,117,53)" fg:x="826" fg:w="5"/><text x="56.9871%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;itertools::intersperse::IntersperseElementSimple&lt;alloc::string::String&gt;&gt; (5 samples, 0.34%)</title><rect x="56.8871%" y="1173" width="0.3444%" height="15" fill="rgb(212,90,42)" fg:x="826" fg:w="5"/><text x="56.9871%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.34%)</title><rect x="56.8871%" y="1157" width="0.3444%" height="15" fill="rgb(218,164,37)" fg:x="826" fg:w="5"/><text x="56.9871%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.34%)</title><rect x="56.8871%" y="1141" width="0.3444%" height="15" fill="rgb(246,65,34)" fg:x="826" fg:w="5"/><text x="56.9871%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.34%)</title><rect x="56.8871%" y="1125" width="0.3444%" height="15" fill="rgb(231,100,33)" fg:x="826" fg:w="5"/><text x="56.9871%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.34%)</title><rect x="56.8871%" y="1109" width="0.3444%" height="15" fill="rgb(228,126,14)" fg:x="826" fg:w="5"/><text x="56.9871%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.34%)</title><rect x="56.8871%" y="1093" width="0.3444%" height="15" fill="rgb(215,173,21)" fg:x="826" fg:w="5"/><text x="56.9871%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.34%)</title><rect x="56.8871%" y="1077" width="0.3444%" height="15" fill="rgb(210,6,40)" fg:x="826" fg:w="5"/><text x="56.9871%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.07%)</title><rect x="57.1625%" y="1061" width="0.0689%" height="15" fill="rgb(212,48,18)" fg:x="830" fg:w="1"/><text x="57.2625%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.07%)</title><rect x="57.1625%" y="1045" width="0.0689%" height="15" fill="rgb(230,214,11)" fg:x="830" fg:w="1"/><text x="57.2625%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.07%)</title><rect x="57.1625%" y="1029" width="0.0689%" height="15" fill="rgb(254,105,39)" fg:x="830" fg:w="1"/><text x="57.2625%" y="1039.50"></text></g><g><title>core::mem::swap (1 samples, 0.07%)</title><rect x="57.1625%" y="1013" width="0.0689%" height="15" fill="rgb(245,158,5)" fg:x="830" fg:w="1"/><text x="57.2625%" y="1023.50"></text></g><g><title>core::mem::swap_simple (1 samples, 0.07%)</title><rect x="57.1625%" y="997" width="0.0689%" height="15" fill="rgb(249,208,11)" fg:x="830" fg:w="1"/><text x="57.2625%" y="1007.50"></text></g><g><title>core::ptr::read (1 samples, 0.07%)</title><rect x="57.1625%" y="981" width="0.0689%" height="15" fill="rgb(210,39,28)" fg:x="830" fg:w="1"/><text x="57.2625%" y="991.50"></text></g><g><title>[unknown] (18 samples, 1.24%)</title><rect x="57.2314%" y="1189" width="1.2397%" height="15" fill="rgb(211,56,53)" fg:x="831" fg:w="18"/><text x="57.3314%" y="1199.50">[un..</text></g><g><title>[unknown] (18 samples, 1.24%)</title><rect x="57.2314%" y="1173" width="1.2397%" height="15" fill="rgb(226,201,30)" fg:x="831" fg:w="18"/><text x="57.3314%" y="1183.50">[un..</text></g><g><title>[unknown] (17 samples, 1.17%)</title><rect x="57.3003%" y="1157" width="1.1708%" height="15" fill="rgb(239,101,34)" fg:x="832" fg:w="17"/><text x="57.4003%" y="1167.50">[u..</text></g><g><title>[unknown] (17 samples, 1.17%)</title><rect x="57.3003%" y="1141" width="1.1708%" height="15" fill="rgb(226,209,5)" fg:x="832" fg:w="17"/><text x="57.4003%" y="1151.50">[u..</text></g><g><title>[unknown] (17 samples, 1.17%)</title><rect x="57.3003%" y="1125" width="1.1708%" height="15" fill="rgb(250,105,47)" fg:x="832" fg:w="17"/><text x="57.4003%" y="1135.50">[u..</text></g><g><title>[unknown] (17 samples, 1.17%)</title><rect x="57.3003%" y="1109" width="1.1708%" height="15" fill="rgb(230,72,3)" fg:x="832" fg:w="17"/><text x="57.4003%" y="1119.50">[u..</text></g><g><title>[unknown] (17 samples, 1.17%)</title><rect x="57.3003%" y="1093" width="1.1708%" height="15" fill="rgb(232,218,39)" fg:x="832" fg:w="17"/><text x="57.4003%" y="1103.50">[u..</text></g><g><title>[unknown] (14 samples, 0.96%)</title><rect x="57.5069%" y="1077" width="0.9642%" height="15" fill="rgb(248,166,6)" fg:x="835" fg:w="14"/><text x="57.6069%" y="1087.50">[u..</text></g><g><title>[unknown] (8 samples, 0.55%)</title><rect x="57.9201%" y="1061" width="0.5510%" height="15" fill="rgb(247,89,20)" fg:x="841" fg:w="8"/><text x="58.0201%" y="1071.50"></text></g><g><title>[unknown] (7 samples, 0.48%)</title><rect x="57.9890%" y="1045" width="0.4821%" height="15" fill="rgb(248,130,54)" fg:x="842" fg:w="7"/><text x="58.0890%" y="1055.50"></text></g><g><title>[unknown] (5 samples, 0.34%)</title><rect x="58.1267%" y="1029" width="0.3444%" height="15" fill="rgb(234,196,4)" fg:x="844" fg:w="5"/><text x="58.2267%" y="1039.50"></text></g><g><title>[unknown] (3 samples, 0.21%)</title><rect x="58.2645%" y="1013" width="0.2066%" height="15" fill="rgb(250,143,31)" fg:x="846" fg:w="3"/><text x="58.3645%" y="1023.50"></text></g><g><title>[unknown] (2 samples, 0.14%)</title><rect x="58.3333%" y="997" width="0.1377%" height="15" fill="rgb(211,110,34)" fg:x="847" fg:w="2"/><text x="58.4333%" y="1007.50"></text></g><g><title>__GI___libc_free (26 samples, 1.79%)</title><rect x="58.4711%" y="1189" width="1.7906%" height="15" fill="rgb(215,124,48)" fg:x="849" fg:w="26"/><text x="58.5711%" y="1199.50">__GI_..</text></g><g><title>arena_for_chunk (1 samples, 0.07%)</title><rect x="60.1928%" y="1173" width="0.0689%" height="15" fill="rgb(216,46,13)" fg:x="874" fg:w="1"/><text x="60.2928%" y="1183.50"></text></g><g><title>checked_request2size (6 samples, 0.41%)</title><rect x="61.8457%" y="1173" width="0.4132%" height="15" fill="rgb(205,184,25)" fg:x="898" fg:w="6"/><text x="61.9457%" y="1183.50"></text></g><g><title>__GI___libc_malloc (39 samples, 2.69%)</title><rect x="60.2617%" y="1189" width="2.6860%" height="15" fill="rgb(228,1,10)" fg:x="875" fg:w="39"/><text x="60.3617%" y="1199.50">__GI___li..</text></g><g><title>tcache_get (10 samples, 0.69%)</title><rect x="62.2590%" y="1173" width="0.6887%" height="15" fill="rgb(213,116,27)" fg:x="904" fg:w="10"/><text x="62.3590%" y="1183.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.28%)</title><rect x="62.9477%" y="1189" width="0.2755%" height="15" fill="rgb(241,95,50)" fg:x="914" fg:w="4"/><text x="63.0477%" y="1199.50"></text></g><g><title>__memcmp_evex_movbe (8 samples, 0.55%)</title><rect x="63.2231%" y="1189" width="0.5510%" height="15" fill="rgb(238,48,32)" fg:x="918" fg:w="8"/><text x="63.3231%" y="1199.50"></text></g><g><title>__memcpy_evex_unaligned_erms (21 samples, 1.45%)</title><rect x="63.7741%" y="1189" width="1.4463%" height="15" fill="rgb(235,113,49)" fg:x="926" fg:w="21"/><text x="63.8741%" y="1199.50">__me..</text></g><g><title>__rdl_alloc (7 samples, 0.48%)</title><rect x="65.2204%" y="1189" width="0.4821%" height="15" fill="rgb(205,127,43)" fg:x="947" fg:w="7"/><text x="65.3204%" y="1199.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (7 samples, 0.48%)</title><rect x="65.2204%" y="1173" width="0.4821%" height="15" fill="rgb(250,162,2)" fg:x="947" fg:w="7"/><text x="65.3204%" y="1183.50"></text></g><g><title>__rdl_dealloc (6 samples, 0.41%)</title><rect x="65.7025%" y="1189" width="0.4132%" height="15" fill="rgb(220,13,41)" fg:x="954" fg:w="6"/><text x="65.8025%" y="1199.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (6 samples, 0.41%)</title><rect x="65.7025%" y="1173" width="0.4132%" height="15" fill="rgb(249,221,25)" fg:x="954" fg:w="6"/><text x="65.8025%" y="1183.50"></text></g><g><title>__rdl_realloc (4 samples, 0.28%)</title><rect x="66.1157%" y="1189" width="0.2755%" height="15" fill="rgb(215,208,19)" fg:x="960" fg:w="4"/><text x="66.2157%" y="1199.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.07%)</title><rect x="66.3223%" y="1173" width="0.0689%" height="15" fill="rgb(236,175,2)" fg:x="963" fg:w="1"/><text x="66.4223%" y="1183.50"></text></g><g><title>__rust_alloc (4 samples, 0.28%)</title><rect x="66.3912%" y="1189" width="0.2755%" height="15" fill="rgb(241,52,2)" fg:x="964" fg:w="4"/><text x="66.4912%" y="1199.50"></text></g><g><title>__rust_dealloc (4 samples, 0.28%)</title><rect x="66.6667%" y="1189" width="0.2755%" height="15" fill="rgb(248,140,14)" fg:x="968" fg:w="4"/><text x="66.7667%" y="1199.50"></text></g><g><title>__rust_realloc (1 samples, 0.07%)</title><rect x="66.9421%" y="1189" width="0.0689%" height="15" fill="rgb(253,22,42)" fg:x="972" fg:w="1"/><text x="67.0421%" y="1199.50"></text></g><g><title>_int_free (86 samples, 5.92%)</title><rect x="67.0110%" y="1189" width="5.9229%" height="15" fill="rgb(234,61,47)" fg:x="973" fg:w="86"/><text x="67.1110%" y="1199.50">_int_free</text></g><g><title>tcache_put (20 samples, 1.38%)</title><rect x="71.5565%" y="1173" width="1.3774%" height="15" fill="rgb(208,226,15)" fg:x="1039" fg:w="20"/><text x="71.6565%" y="1183.50">tca..</text></g><g><title>_int_malloc (8 samples, 0.55%)</title><rect x="72.9339%" y="1189" width="0.5510%" height="15" fill="rgb(217,221,4)" fg:x="1059" fg:w="8"/><text x="73.0339%" y="1199.50"></text></g><g><title>tcache_put (1 samples, 0.07%)</title><rect x="73.4160%" y="1173" width="0.0689%" height="15" fill="rgb(212,174,34)" fg:x="1066" fg:w="1"/><text x="73.5160%" y="1183.50"></text></g><g><title>_int_realloc (14 samples, 0.96%)</title><rect x="73.4848%" y="1189" width="0.9642%" height="15" fill="rgb(253,83,4)" fg:x="1067" fg:w="14"/><text x="73.5848%" y="1199.50">_i..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.07%)</title><rect x="74.5179%" y="1157" width="0.0689%" height="15" fill="rgb(250,195,49)" fg:x="1082" fg:w="1"/><text x="74.6179%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.28%)</title><rect x="74.4490%" y="1189" width="0.2755%" height="15" fill="rgb(241,192,25)" fg:x="1081" fg:w="4"/><text x="74.5490%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.21%)</title><rect x="74.5179%" y="1173" width="0.2066%" height="15" fill="rgb(208,124,10)" fg:x="1082" fg:w="3"/><text x="74.6179%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (2 samples, 0.14%)</title><rect x="74.5868%" y="1157" width="0.1377%" height="15" fill="rgb(222,33,0)" fg:x="1083" fg:w="2"/><text x="74.6868%" y="1167.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.14%)</title><rect x="74.7245%" y="1189" width="0.1377%" height="15" fill="rgb(234,209,28)" fg:x="1085" fg:w="2"/><text x="74.8245%" y="1199.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="74.8623%" y="1109" width="0.0689%" height="15" fill="rgb(224,11,23)" fg:x="1087" fg:w="1"/><text x="74.9623%" y="1119.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.28%)</title><rect x="75.0689%" y="997" width="0.2755%" height="15" fill="rgb(232,99,1)" fg:x="1090" fg:w="4"/><text x="75.1689%" y="1007.50"></text></g><g><title>&lt;day_12::node::Node as core::cmp::PartialEq&gt;::eq (2 samples, 0.14%)</title><rect x="75.3444%" y="901" width="0.1377%" height="15" fill="rgb(237,95,45)" fg:x="1094" fg:w="2"/><text x="75.4444%" y="911.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2 samples, 0.14%)</title><rect x="75.3444%" y="885" width="0.1377%" height="15" fill="rgb(208,109,11)" fg:x="1094" fg:w="2"/><text x="75.4444%" y="895.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (2 samples, 0.14%)</title><rect x="75.3444%" y="869" width="0.1377%" height="15" fill="rgb(216,190,48)" fg:x="1094" fg:w="2"/><text x="75.4444%" y="879.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.14%)</title><rect x="75.3444%" y="853" width="0.1377%" height="15" fill="rgb(251,171,36)" fg:x="1094" fg:w="2"/><text x="75.4444%" y="863.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.14%)</title><rect x="75.3444%" y="837" width="0.1377%" height="15" fill="rgb(230,62,22)" fg:x="1094" fg:w="2"/><text x="75.4444%" y="847.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (10 samples, 0.69%)</title><rect x="74.8623%" y="1173" width="0.6887%" height="15" fill="rgb(225,114,35)" fg:x="1087" fg:w="10"/><text x="74.9623%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.69%)</title><rect x="74.8623%" y="1157" width="0.6887%" height="15" fill="rgb(215,118,42)" fg:x="1087" fg:w="10"/><text x="74.9623%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (10 samples, 0.69%)</title><rect x="74.8623%" y="1141" width="0.6887%" height="15" fill="rgb(243,119,21)" fg:x="1087" fg:w="10"/><text x="74.9623%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.69%)</title><rect x="74.8623%" y="1125" width="0.6887%" height="15" fill="rgb(252,177,53)" fg:x="1087" fg:w="10"/><text x="74.9623%" y="1135.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (9 samples, 0.62%)</title><rect x="74.9311%" y="1109" width="0.6198%" height="15" fill="rgb(237,209,29)" fg:x="1088" fg:w="9"/><text x="75.0311%" y="1119.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}} (9 samples, 0.62%)</title><rect x="74.9311%" y="1093" width="0.6198%" height="15" fill="rgb(212,65,23)" fg:x="1088" fg:w="9"/><text x="75.0311%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (7 samples, 0.48%)</title><rect x="75.0689%" y="1077" width="0.4821%" height="15" fill="rgb(230,222,46)" fg:x="1090" fg:w="7"/><text x="75.1689%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (7 samples, 0.48%)</title><rect x="75.0689%" y="1061" width="0.4821%" height="15" fill="rgb(215,135,32)" fg:x="1090" fg:w="7"/><text x="75.1689%" y="1071.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (7 samples, 0.48%)</title><rect x="75.0689%" y="1045" width="0.4821%" height="15" fill="rgb(246,101,22)" fg:x="1090" fg:w="7"/><text x="75.1689%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.48%)</title><rect x="75.0689%" y="1029" width="0.4821%" height="15" fill="rgb(206,107,13)" fg:x="1090" fg:w="7"/><text x="75.1689%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.48%)</title><rect x="75.0689%" y="1013" width="0.4821%" height="15" fill="rgb(250,100,44)" fg:x="1090" fg:w="7"/><text x="75.1689%" y="1023.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.21%)</title><rect x="75.3444%" y="997" width="0.2066%" height="15" fill="rgb(231,147,38)" fg:x="1094" fg:w="3"/><text x="75.4444%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (3 samples, 0.21%)</title><rect x="75.3444%" y="981" width="0.2066%" height="15" fill="rgb(229,8,40)" fg:x="1094" fg:w="3"/><text x="75.4444%" y="991.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}}::{{closure}} (3 samples, 0.21%)</title><rect x="75.3444%" y="965" width="0.2066%" height="15" fill="rgb(221,135,30)" fg:x="1094" fg:w="3"/><text x="75.4444%" y="975.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.21%)</title><rect x="75.3444%" y="949" width="0.2066%" height="15" fill="rgb(249,193,18)" fg:x="1094" fg:w="3"/><text x="75.4444%" y="959.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.21%)</title><rect x="75.3444%" y="933" width="0.2066%" height="15" fill="rgb(209,133,39)" fg:x="1094" fg:w="3"/><text x="75.4444%" y="943.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEqIdent&lt;T&gt;&gt;::eq (3 samples, 0.21%)</title><rect x="75.3444%" y="917" width="0.2066%" height="15" fill="rgb(232,100,14)" fg:x="1094" fg:w="3"/><text x="75.4444%" y="927.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="75.4821%" y="901" width="0.0689%" height="15" fill="rgb(224,185,1)" fg:x="1096" fg:w="1"/><text x="75.5821%" y="911.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (11 samples, 0.76%)</title><rect x="74.8623%" y="1189" width="0.7576%" height="15" fill="rgb(223,139,8)" fg:x="1087" fg:w="11"/><text x="74.9623%" y="1199.50">a..</text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::forget_allocation_drop_remaining (1 samples, 0.07%)</title><rect x="75.5510%" y="1173" width="0.0689%" height="15" fill="rgb(232,213,38)" fg:x="1097" fg:w="1"/><text x="75.6510%" y="1183.50"></text></g><g><title>alloc::vec::into_iter::IntoIter&lt;T,A&gt;::as_raw_mut_slice (1 samples, 0.07%)</title><rect x="75.5510%" y="1157" width="0.0689%" height="15" fill="rgb(207,94,22)" fg:x="1097" fg:w="1"/><text x="75.6510%" y="1167.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::exact_size::ExactSizeIterator&gt;::len (1 samples, 0.07%)</title><rect x="75.5510%" y="1141" width="0.0689%" height="15" fill="rgb(219,183,54)" fg:x="1097" fg:w="1"/><text x="75.6510%" y="1151.50"></text></g><g><title>core::iter::traits::exact_size::ExactSizeIterator::len (1 samples, 0.07%)</title><rect x="75.5510%" y="1125" width="0.0689%" height="15" fill="rgb(216,185,54)" fg:x="1097" fg:w="1"/><text x="75.6510%" y="1135.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.07%)</title><rect x="75.5510%" y="1109" width="0.0689%" height="15" fill="rgb(254,217,39)" fg:x="1097" fg:w="1"/><text x="75.6510%" y="1119.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::sub_ptr (1 samples, 0.07%)</title><rect x="75.5510%" y="1093" width="0.0689%" height="15" fill="rgb(240,178,23)" fg:x="1097" fg:w="1"/><text x="75.6510%" y="1103.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.07%)</title><rect x="76.1019%" y="1109" width="0.0689%" height="15" fill="rgb(218,11,47)" fg:x="1105" fg:w="1"/><text x="76.2019%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.41%)</title><rect x="76.0331%" y="1125" width="0.4132%" height="15" fill="rgb(218,51,51)" fg:x="1104" fg:w="6"/><text x="76.1331%" y="1135.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.28%)</title><rect x="76.1708%" y="1109" width="0.2755%" height="15" fill="rgb(238,126,27)" fg:x="1106" fg:w="4"/><text x="76.2708%" y="1119.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.34%)</title><rect x="76.4463%" y="1109" width="0.3444%" height="15" fill="rgb(249,202,22)" fg:x="1110" fg:w="5"/><text x="76.5463%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (18 samples, 1.24%)</title><rect x="75.8264%" y="1173" width="1.2397%" height="15" fill="rgb(254,195,49)" fg:x="1101" fg:w="18"/><text x="75.9264%" y="1183.50">&lt;st..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (18 samples, 1.24%)</title><rect x="75.8264%" y="1157" width="1.2397%" height="15" fill="rgb(208,123,14)" fg:x="1101" fg:w="18"/><text x="75.9264%" y="1167.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (18 samples, 1.24%)</title><rect x="75.8264%" y="1141" width="1.2397%" height="15" fill="rgb(224,200,8)" fg:x="1101" fg:w="18"/><text x="75.9264%" y="1151.50">&lt;co..</text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.62%)</title><rect x="76.4463%" y="1125" width="0.6198%" height="15" fill="rgb(217,61,36)" fg:x="1110" fg:w="9"/><text x="76.5463%" y="1135.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (4 samples, 0.28%)</title><rect x="76.7906%" y="1109" width="0.2755%" height="15" fill="rgb(206,35,45)" fg:x="1115" fg:w="4"/><text x="76.8906%" y="1119.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (4 samples, 0.28%)</title><rect x="77.0661%" y="1173" width="0.2755%" height="15" fill="rgb(217,65,33)" fg:x="1119" fg:w="4"/><text x="77.1661%" y="1183.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.07%)</title><rect x="77.2727%" y="1157" width="0.0689%" height="15" fill="rgb(222,158,48)" fg:x="1122" fg:w="1"/><text x="77.3727%" y="1167.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.07%)</title><rect x="77.2727%" y="1141" width="0.0689%" height="15" fill="rgb(254,2,54)" fg:x="1122" fg:w="1"/><text x="77.3727%" y="1151.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.07%)</title><rect x="77.2727%" y="1125" width="0.0689%" height="15" fill="rgb(250,143,38)" fg:x="1122" fg:w="1"/><text x="77.3727%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.07%)</title><rect x="77.4793%" y="1157" width="0.0689%" height="15" fill="rgb(248,25,0)" fg:x="1125" fg:w="1"/><text x="77.5793%" y="1167.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.07%)</title><rect x="77.4793%" y="1141" width="0.0689%" height="15" fill="rgb(206,152,27)" fg:x="1125" fg:w="1"/><text x="77.5793%" y="1151.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="77.4793%" y="1125" width="0.0689%" height="15" fill="rgb(240,77,30)" fg:x="1125" fg:w="1"/><text x="77.5793%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="77.4793%" y="1109" width="0.0689%" height="15" fill="rgb(231,5,3)" fg:x="1125" fg:w="1"/><text x="77.5793%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="77.4793%" y="1093" width="0.0689%" height="15" fill="rgb(207,226,32)" fg:x="1125" fg:w="1"/><text x="77.5793%" y="1103.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.07%)</title><rect x="77.4793%" y="1077" width="0.0689%" height="15" fill="rgb(222,207,47)" fg:x="1125" fg:w="1"/><text x="77.5793%" y="1087.50"></text></g><g><title>core::hash::BuildHasher::hash_one (32 samples, 2.20%)</title><rect x="75.6198%" y="1189" width="2.2039%" height="15" fill="rgb(229,115,45)" fg:x="1098" fg:w="32"/><text x="75.7198%" y="1199.50">core::h..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (7 samples, 0.48%)</title><rect x="77.3416%" y="1173" width="0.4821%" height="15" fill="rgb(224,191,6)" fg:x="1123" fg:w="7"/><text x="77.4416%" y="1183.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.28%)</title><rect x="77.5482%" y="1157" width="0.2755%" height="15" fill="rgb(230,227,24)" fg:x="1126" fg:w="4"/><text x="77.6482%" y="1167.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::hash::Hash&gt;::hash (4 samples, 0.28%)</title><rect x="77.5482%" y="1141" width="0.2755%" height="15" fill="rgb(228,80,19)" fg:x="1126" fg:w="4"/><text x="77.6482%" y="1151.50"></text></g><g><title>&lt;day_12::node::Node as core::hash::Hash&gt;::hash (4 samples, 0.28%)</title><rect x="77.5482%" y="1125" width="0.2755%" height="15" fill="rgb(247,229,0)" fg:x="1126" fg:w="4"/><text x="77.6482%" y="1135.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (4 samples, 0.28%)</title><rect x="77.5482%" y="1109" width="0.2755%" height="15" fill="rgb(237,194,15)" fg:x="1126" fg:w="4"/><text x="77.6482%" y="1119.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.28%)</title><rect x="77.5482%" y="1093" width="0.2755%" height="15" fill="rgb(219,203,20)" fg:x="1126" fg:w="4"/><text x="77.6482%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (4 samples, 0.28%)</title><rect x="77.5482%" y="1077" width="0.2755%" height="15" fill="rgb(234,128,8)" fg:x="1126" fg:w="4"/><text x="77.6482%" y="1087.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (4 samples, 0.28%)</title><rect x="77.5482%" y="1061" width="0.2755%" height="15" fill="rgb(248,202,8)" fg:x="1126" fg:w="4"/><text x="77.6482%" y="1071.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (4 samples, 0.28%)</title><rect x="77.5482%" y="1045" width="0.2755%" height="15" fill="rgb(206,104,37)" fg:x="1126" fg:w="4"/><text x="77.6482%" y="1055.50"></text></g><g><title>core::hash::Hasher::write_u8 (3 samples, 0.21%)</title><rect x="77.6171%" y="1029" width="0.2066%" height="15" fill="rgb(223,8,27)" fg:x="1127" fg:w="3"/><text x="77.7171%" y="1039.50"></text></g><g><title>day_12::dfs::path_to_string (2 samples, 0.14%)</title><rect x="77.8237%" y="1173" width="0.1377%" height="15" fill="rgb(216,217,28)" fg:x="1130" fg:w="2"/><text x="77.9237%" y="1183.50"></text></g><g><title>itertools::Itertools::intersperse (2 samples, 0.14%)</title><rect x="77.8237%" y="1157" width="0.1377%" height="15" fill="rgb(249,199,1)" fg:x="1130" fg:w="2"/><text x="77.9237%" y="1167.50"></text></g><g><title>itertools::intersperse::intersperse (2 samples, 0.14%)</title><rect x="77.8237%" y="1141" width="0.1377%" height="15" fill="rgb(240,85,17)" fg:x="1130" fg:w="2"/><text x="77.9237%" y="1151.50"></text></g><g><title>itertools::intersperse::intersperse_with (2 samples, 0.14%)</title><rect x="77.8237%" y="1125" width="0.1377%" height="15" fill="rgb(206,108,45)" fg:x="1130" fg:w="2"/><text x="77.9237%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="77.8237%" y="1109" width="0.1377%" height="15" fill="rgb(245,210,41)" fg:x="1130" fg:w="2"/><text x="77.9237%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (2 samples, 0.14%)</title><rect x="77.8237%" y="1093" width="0.1377%" height="15" fill="rgb(206,13,37)" fg:x="1130" fg:w="2"/><text x="77.9237%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.14%)</title><rect x="77.8237%" y="1077" width="0.1377%" height="15" fill="rgb(250,61,18)" fg:x="1130" fg:w="2"/><text x="77.9237%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.14%)</title><rect x="77.8237%" y="1061" width="0.1377%" height="15" fill="rgb(235,172,48)" fg:x="1130" fg:w="2"/><text x="77.9237%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find::{{closure}} (3 samples, 0.21%)</title><rect x="77.9614%" y="1061" width="0.2066%" height="15" fill="rgb(249,201,17)" fg:x="1132" fg:w="3"/><text x="78.0614%" y="1071.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.21%)</title><rect x="77.9614%" y="1045" width="0.2066%" height="15" fill="rgb(219,208,6)" fg:x="1132" fg:w="3"/><text x="78.0614%" y="1055.50"></text></g><g><title>&lt;Q as hashbrown::Equivalent&lt;K&gt;&gt;::equivalent (3 samples, 0.21%)</title><rect x="77.9614%" y="1029" width="0.2066%" height="15" fill="rgb(248,31,23)" fg:x="1132" fg:w="3"/><text x="78.0614%" y="1039.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.21%)</title><rect x="77.9614%" y="1013" width="0.2066%" height="15" fill="rgb(245,15,42)" fg:x="1132" fg:w="3"/><text x="78.0614%" y="1023.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (3 samples, 0.21%)</title><rect x="77.9614%" y="997" width="0.2066%" height="15" fill="rgb(222,217,39)" fg:x="1132" fg:w="3"/><text x="78.0614%" y="1007.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (3 samples, 0.21%)</title><rect x="77.9614%" y="981" width="0.2066%" height="15" fill="rgb(210,219,27)" fg:x="1132" fg:w="3"/><text x="78.0614%" y="991.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.21%)</title><rect x="77.9614%" y="965" width="0.2066%" height="15" fill="rgb(252,166,36)" fg:x="1132" fg:w="3"/><text x="78.0614%" y="975.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.21%)</title><rect x="77.9614%" y="949" width="0.2066%" height="15" fill="rgb(245,132,34)" fg:x="1132" fg:w="3"/><text x="78.0614%" y="959.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.07%)</title><rect x="78.1680%" y="1061" width="0.0689%" height="15" fill="rgb(236,54,3)" fg:x="1135" fg:w="1"/><text x="78.2680%" y="1071.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (12 samples, 0.83%)</title><rect x="78.2369%" y="1061" width="0.8264%" height="15" fill="rgb(241,173,43)" fg:x="1136" fg:w="12"/><text x="78.3369%" y="1071.50">h..</text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (12 samples, 0.83%)</title><rect x="78.2369%" y="1045" width="0.8264%" height="15" fill="rgb(215,190,9)" fg:x="1136" fg:w="12"/><text x="78.3369%" y="1055.50">c..</text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.83%)</title><rect x="78.2369%" y="1029" width="0.8264%" height="15" fill="rgb(242,101,16)" fg:x="1136" fg:w="12"/><text x="78.3369%" y="1039.50">c..</text></g><g><title>day_12::dfs::DfsVisitor::all_paths_contains (19 samples, 1.31%)</title><rect x="77.8237%" y="1189" width="1.3085%" height="15" fill="rgb(223,190,21)" fg:x="1130" fg:w="19"/><text x="77.9237%" y="1199.50">day..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (17 samples, 1.17%)</title><rect x="77.9614%" y="1173" width="1.1708%" height="15" fill="rgb(215,228,25)" fg:x="1132" fg:w="17"/><text x="78.0614%" y="1183.50">st..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (17 samples, 1.17%)</title><rect x="77.9614%" y="1157" width="1.1708%" height="15" fill="rgb(225,36,22)" fg:x="1132" fg:w="17"/><text x="78.0614%" y="1167.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (17 samples, 1.17%)</title><rect x="77.9614%" y="1141" width="1.1708%" height="15" fill="rgb(251,106,46)" fg:x="1132" fg:w="17"/><text x="78.0614%" y="1151.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (17 samples, 1.17%)</title><rect x="77.9614%" y="1125" width="1.1708%" height="15" fill="rgb(208,90,1)" fg:x="1132" fg:w="17"/><text x="78.0614%" y="1135.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (17 samples, 1.17%)</title><rect x="77.9614%" y="1109" width="1.1708%" height="15" fill="rgb(243,10,4)" fg:x="1132" fg:w="17"/><text x="78.0614%" y="1119.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17 samples, 1.17%)</title><rect x="77.9614%" y="1093" width="1.1708%" height="15" fill="rgb(212,137,27)" fg:x="1132" fg:w="17"/><text x="78.0614%" y="1103.50">ha..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (17 samples, 1.17%)</title><rect x="77.9614%" y="1077" width="1.1708%" height="15" fill="rgb(231,220,49)" fg:x="1132" fg:w="17"/><text x="78.0614%" y="1087.50">ha..</text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.07%)</title><rect x="79.0634%" y="1061" width="0.0689%" height="15" fill="rgb(237,96,20)" fg:x="1148" fg:w="1"/><text x="79.1634%" y="1071.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.07%)</title><rect x="79.0634%" y="1045" width="0.0689%" height="15" fill="rgb(239,229,30)" fg:x="1148" fg:w="1"/><text x="79.1634%" y="1055.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&lt;&amp;str&gt;&gt;::eq (1 samples, 0.07%)</title><rect x="79.1322%" y="1173" width="0.0689%" height="15" fill="rgb(219,65,33)" fg:x="1149" fg:w="1"/><text x="79.2322%" y="1183.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.07%)</title><rect x="79.1322%" y="1157" width="0.0689%" height="15" fill="rgb(243,134,7)" fg:x="1149" fg:w="1"/><text x="79.2322%" y="1167.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.07%)</title><rect x="79.1322%" y="1141" width="0.0689%" height="15" fill="rgb(216,177,54)" fg:x="1149" fg:w="1"/><text x="79.2322%" y="1151.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.07%)</title><rect x="79.1322%" y="1125" width="0.0689%" height="15" fill="rgb(211,160,20)" fg:x="1149" fg:w="1"/><text x="79.2322%" y="1135.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.07%)</title><rect x="79.1322%" y="1109" width="0.0689%" height="15" fill="rgb(239,85,39)" fg:x="1149" fg:w="1"/><text x="79.2322%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="79.2011%" y="1173" width="0.0689%" height="15" fill="rgb(232,125,22)" fg:x="1150" fg:w="1"/><text x="79.3011%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="79.2011%" y="1157" width="0.0689%" height="15" fill="rgb(244,57,34)" fg:x="1150" fg:w="1"/><text x="79.3011%" y="1167.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="79.2011%" y="1141" width="0.0689%" height="15" fill="rgb(214,203,32)" fg:x="1150" fg:w="1"/><text x="79.3011%" y="1151.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="79.2011%" y="1125" width="0.0689%" height="15" fill="rgb(207,58,43)" fg:x="1150" fg:w="1"/><text x="79.3011%" y="1135.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="79.2011%" y="1109" width="0.0689%" height="15" fill="rgb(215,193,15)" fg:x="1150" fg:w="1"/><text x="79.3011%" y="1119.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.07%)</title><rect x="79.2011%" y="1093" width="0.0689%" height="15" fill="rgb(232,15,44)" fg:x="1150" fg:w="1"/><text x="79.3011%" y="1103.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.07%)</title><rect x="79.2011%" y="1077" width="0.0689%" height="15" fill="rgb(212,3,48)" fg:x="1150" fg:w="1"/><text x="79.3011%" y="1087.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.07%)</title><rect x="79.2011%" y="1061" width="0.0689%" height="15" fill="rgb(218,128,7)" fg:x="1150" fg:w="1"/><text x="79.3011%" y="1071.50"></text></g><g><title>core::mem::replace (1 samples, 0.07%)</title><rect x="79.2011%" y="1045" width="0.0689%" height="15" fill="rgb(226,216,39)" fg:x="1150" fg:w="1"/><text x="79.3011%" y="1055.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="79.2011%" y="1029" width="0.0689%" height="15" fill="rgb(243,47,51)" fg:x="1150" fg:w="1"/><text x="79.3011%" y="1039.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (3 samples, 0.21%)</title><rect x="79.1322%" y="1189" width="0.2066%" height="15" fill="rgb(241,183,40)" fg:x="1149" fg:w="3"/><text x="79.2322%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;day_12::node::Node&gt;&gt;&gt; (1 samples, 0.07%)</title><rect x="79.2700%" y="1173" width="0.0689%" height="15" fill="rgb(231,217,32)" fg:x="1151" fg:w="1"/><text x="79.3700%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;day_12::node::Node&gt;&gt; (1 samples, 0.07%)</title><rect x="79.2700%" y="1157" width="0.0689%" height="15" fill="rgb(229,61,38)" fg:x="1151" fg:w="1"/><text x="79.3700%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (1 samples, 0.07%)</title><rect x="79.3388%" y="1141" width="0.0689%" height="15" fill="rgb(225,210,5)" fg:x="1152" fg:w="1"/><text x="79.4388%" y="1151.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.07%)</title><rect x="79.3388%" y="1125" width="0.0689%" height="15" fill="rgb(231,79,45)" fg:x="1152" fg:w="1"/><text x="79.4388%" y="1135.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.07%)</title><rect x="79.3388%" y="1109" width="0.0689%" height="15" fill="rgb(224,100,7)" fg:x="1152" fg:w="1"/><text x="79.4388%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (3 samples, 0.21%)</title><rect x="79.4077%" y="1141" width="0.2066%" height="15" fill="rgb(241,198,18)" fg:x="1153" fg:w="3"/><text x="79.5077%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (3 samples, 0.21%)</title><rect x="79.4077%" y="1125" width="0.2066%" height="15" fill="rgb(252,97,53)" fg:x="1153" fg:w="3"/><text x="79.5077%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (3 samples, 0.21%)</title><rect x="79.4077%" y="1109" width="0.2066%" height="15" fill="rgb(220,88,7)" fg:x="1153" fg:w="3"/><text x="79.5077%" y="1119.50"></text></g><g><title>hashbrown::raw::is_full (3 samples, 0.21%)</title><rect x="79.4077%" y="1093" width="0.2066%" height="15" fill="rgb(213,176,14)" fg:x="1153" fg:w="3"/><text x="79.5077%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.34%)</title><rect x="79.3388%" y="1189" width="0.3444%" height="15" fill="rgb(246,73,7)" fg:x="1152" fg:w="5"/><text x="79.4388%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (5 samples, 0.34%)</title><rect x="79.3388%" y="1173" width="0.3444%" height="15" fill="rgb(245,64,36)" fg:x="1152" fg:w="5"/><text x="79.4388%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (5 samples, 0.34%)</title><rect x="79.3388%" y="1157" width="0.3444%" height="15" fill="rgb(245,80,10)" fg:x="1152" fg:w="5"/><text x="79.4388%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.07%)</title><rect x="79.6143%" y="1141" width="0.0689%" height="15" fill="rgb(232,107,50)" fg:x="1156" fg:w="1"/><text x="79.7143%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.07%)</title><rect x="79.6143%" y="1125" width="0.0689%" height="15" fill="rgb(253,3,0)" fg:x="1156" fg:w="1"/><text x="79.7143%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.07%)</title><rect x="79.6143%" y="1109" width="0.0689%" height="15" fill="rgb(212,99,53)" fg:x="1156" fg:w="1"/><text x="79.7143%" y="1119.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.07%)</title><rect x="79.6143%" y="1093" width="0.0689%" height="15" fill="rgb(249,111,54)" fg:x="1156" fg:w="1"/><text x="79.7143%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="79.6143%" y="1077" width="0.0689%" height="15" fill="rgb(249,55,30)" fg:x="1156" fg:w="1"/><text x="79.7143%" y="1087.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="79.6143%" y="1061" width="0.0689%" height="15" fill="rgb(237,47,42)" fg:x="1156" fg:w="1"/><text x="79.7143%" y="1071.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="79.6143%" y="1045" width="0.0689%" height="15" fill="rgb(211,20,18)" fg:x="1156" fg:w="1"/><text x="79.7143%" y="1055.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.07%)</title><rect x="79.8209%" y="1173" width="0.0689%" height="15" fill="rgb(231,203,46)" fg:x="1159" fg:w="1"/><text x="79.9209%" y="1183.50"></text></g><g><title>hashbrown::raw::h2 (3 samples, 0.21%)</title><rect x="80.0275%" y="1141" width="0.2066%" height="15" fill="rgb(237,142,3)" fg:x="1162" fg:w="3"/><text x="80.1275%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (4 samples, 0.28%)</title><rect x="80.0275%" y="1157" width="0.2755%" height="15" fill="rgb(241,107,1)" fg:x="1162" fg:w="4"/><text x="80.1275%" y="1167.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.07%)</title><rect x="80.2342%" y="1141" width="0.0689%" height="15" fill="rgb(229,83,13)" fg:x="1165" fg:w="1"/><text x="80.3342%" y="1151.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.07%)</title><rect x="80.2342%" y="1125" width="0.0689%" height="15" fill="rgb(241,91,40)" fg:x="1165" fg:w="1"/><text x="80.3342%" y="1135.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.07%)</title><rect x="80.2342%" y="1109" width="0.0689%" height="15" fill="rgb(225,3,45)" fg:x="1165" fg:w="1"/><text x="80.3342%" y="1119.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (10 samples, 0.69%)</title><rect x="79.6832%" y="1189" width="0.6887%" height="15" fill="rgb(244,223,14)" fg:x="1157" fg:w="10"/><text x="79.7832%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.48%)</title><rect x="79.8898%" y="1173" width="0.4821%" height="15" fill="rgb(224,124,37)" fg:x="1160" fg:w="7"/><text x="79.9898%" y="1183.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.07%)</title><rect x="80.3030%" y="1157" width="0.0689%" height="15" fill="rgb(251,171,30)" fg:x="1166" fg:w="1"/><text x="80.4030%" y="1167.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.07%)</title><rect x="80.7163%" y="1013" width="0.0689%" height="15" fill="rgb(236,46,54)" fg:x="1172" fg:w="1"/><text x="80.8163%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.07%)</title><rect x="80.7163%" y="997" width="0.0689%" height="15" fill="rgb(245,213,5)" fg:x="1172" fg:w="1"/><text x="80.8163%" y="1007.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="80.7163%" y="981" width="0.0689%" height="15" fill="rgb(230,144,27)" fg:x="1172" fg:w="1"/><text x="80.8163%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.07%)</title><rect x="80.7851%" y="1013" width="0.0689%" height="15" fill="rgb(220,86,6)" fg:x="1173" fg:w="1"/><text x="80.8851%" y="1023.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.07%)</title><rect x="80.7851%" y="997" width="0.0689%" height="15" fill="rgb(240,20,13)" fg:x="1173" fg:w="1"/><text x="80.8851%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.07%)</title><rect x="80.7851%" y="981" width="0.0689%" height="15" fill="rgb(217,89,34)" fg:x="1173" fg:w="1"/><text x="80.8851%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.07%)</title><rect x="80.7851%" y="965" width="0.0689%" height="15" fill="rgb(229,13,5)" fg:x="1173" fg:w="1"/><text x="80.8851%" y="975.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_default (7 samples, 0.48%)</title><rect x="80.5785%" y="1077" width="0.4821%" height="15" fill="rgb(244,67,35)" fg:x="1170" fg:w="7"/><text x="80.6785%" y="1087.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (7 samples, 0.48%)</title><rect x="80.5785%" y="1061" width="0.4821%" height="15" fill="rgb(221,40,2)" fg:x="1170" fg:w="7"/><text x="80.6785%" y="1071.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (7 samples, 0.48%)</title><rect x="80.5785%" y="1045" width="0.4821%" height="15" fill="rgb(237,157,21)" fg:x="1170" fg:w="7"/><text x="80.6785%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (7 samples, 0.48%)</title><rect x="80.5785%" y="1029" width="0.4821%" height="15" fill="rgb(222,94,11)" fg:x="1170" fg:w="7"/><text x="80.6785%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (3 samples, 0.21%)</title><rect x="80.8540%" y="1013" width="0.2066%" height="15" fill="rgb(249,113,6)" fg:x="1174" fg:w="3"/><text x="80.9540%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (3 samples, 0.21%)</title><rect x="80.8540%" y="997" width="0.2066%" height="15" fill="rgb(238,137,36)" fg:x="1174" fg:w="3"/><text x="80.9540%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (1 samples, 0.07%)</title><rect x="80.9917%" y="981" width="0.0689%" height="15" fill="rgb(210,102,26)" fg:x="1176" fg:w="1"/><text x="81.0917%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (11 samples, 0.76%)</title><rect x="80.4408%" y="1141" width="0.7576%" height="15" fill="rgb(218,30,30)" fg:x="1168" fg:w="11"/><text x="80.5408%" y="1151.50">c..</text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (11 samples, 0.76%)</title><rect x="80.4408%" y="1125" width="0.7576%" height="15" fill="rgb(214,67,26)" fg:x="1168" fg:w="11"/><text x="80.5408%" y="1135.50">c..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (11 samples, 0.76%)</title><rect x="80.4408%" y="1109" width="0.7576%" height="15" fill="rgb(251,9,53)" fg:x="1168" fg:w="11"/><text x="80.5408%" y="1119.50">c..</text></g><g><title>itertools::Itertools::counts::{{closure}} (11 samples, 0.76%)</title><rect x="80.4408%" y="1093" width="0.7576%" height="15" fill="rgb(228,204,25)" fg:x="1168" fg:w="11"/><text x="80.5408%" y="1103.50">i..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.14%)</title><rect x="81.0606%" y="1077" width="0.1377%" height="15" fill="rgb(207,153,8)" fg:x="1177" fg:w="2"/><text x="81.1606%" y="1087.50"></text></g><g><title>std::collections::hash::map::map_entry (1 samples, 0.07%)</title><rect x="81.1295%" y="1061" width="0.0689%" height="15" fill="rgb(242,9,16)" fg:x="1178" fg:w="1"/><text x="81.2295%" y="1071.50"></text></g><g><title>[unknown] (515 samples, 35.47%)</title><rect x="45.7989%" y="1205" width="35.4683%" height="15" fill="rgb(217,211,10)" fg:x="665" fg:w="515"/><text x="45.8989%" y="1215.50">[unknown]</text></g><g><title>itertools::Itertools::counts (13 samples, 0.90%)</title><rect x="80.3719%" y="1189" width="0.8953%" height="15" fill="rgb(219,228,52)" fg:x="1167" fg:w="13"/><text x="80.4719%" y="1199.50">i..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (12 samples, 0.83%)</title><rect x="80.4408%" y="1173" width="0.8264%" height="15" fill="rgb(231,92,29)" fg:x="1168" fg:w="12"/><text x="80.5408%" y="1183.50">c..</text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (12 samples, 0.83%)</title><rect x="80.4408%" y="1157" width="0.8264%" height="15" fill="rgb(232,8,23)" fg:x="1168" fg:w="12"/><text x="80.5408%" y="1167.50">&lt;..</text></g><g><title>itertools::Itertools::counts (1 samples, 0.07%)</title><rect x="81.1983%" y="1141" width="0.0689%" height="15" fill="rgb(216,211,34)" fg:x="1179" fg:w="1"/><text x="81.2983%" y="1151.50"></text></g><g><title>__GI___libc_free (7 samples, 0.48%)</title><rect x="81.2672%" y="1205" width="0.4821%" height="15" fill="rgb(236,151,0)" fg:x="1180" fg:w="7"/><text x="81.3672%" y="1215.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.21%)</title><rect x="81.7493%" y="1205" width="0.2066%" height="15" fill="rgb(209,168,3)" fg:x="1187" fg:w="3"/><text x="81.8493%" y="1215.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.14%)</title><rect x="81.9559%" y="1205" width="0.1377%" height="15" fill="rgb(208,129,28)" fg:x="1190" fg:w="2"/><text x="82.0559%" y="1215.50"></text></g><g><title>arena_for_chunk (1 samples, 0.07%)</title><rect x="82.0248%" y="1189" width="0.0689%" height="15" fill="rgb(229,78,22)" fg:x="1191" fg:w="1"/><text x="82.1248%" y="1199.50"></text></g><g><title>__memcmp_evex_movbe (2 samples, 0.14%)</title><rect x="82.0937%" y="1205" width="0.1377%" height="15" fill="rgb(228,187,13)" fg:x="1192" fg:w="2"/><text x="82.1937%" y="1215.50"></text></g><g><title>__rdl_alloc (3 samples, 0.21%)</title><rect x="82.2314%" y="1205" width="0.2066%" height="15" fill="rgb(240,119,24)" fg:x="1194" fg:w="3"/><text x="82.3314%" y="1215.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.21%)</title><rect x="82.2314%" y="1189" width="0.2066%" height="15" fill="rgb(209,194,42)" fg:x="1194" fg:w="3"/><text x="82.3314%" y="1199.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.07%)</title><rect x="82.4380%" y="1205" width="0.0689%" height="15" fill="rgb(247,200,46)" fg:x="1197" fg:w="1"/><text x="82.5380%" y="1215.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.07%)</title><rect x="82.4380%" y="1189" width="0.0689%" height="15" fill="rgb(218,76,16)" fg:x="1197" fg:w="1"/><text x="82.5380%" y="1199.50"></text></g><g><title>__rust_dealloc (1 samples, 0.07%)</title><rect x="82.5069%" y="1205" width="0.0689%" height="15" fill="rgb(225,21,48)" fg:x="1198" fg:w="1"/><text x="82.6069%" y="1215.50"></text></g><g><title>_int_free (4 samples, 0.28%)</title><rect x="82.5758%" y="1205" width="0.2755%" height="15" fill="rgb(239,223,50)" fg:x="1199" fg:w="4"/><text x="82.6758%" y="1215.50"></text></g><g><title>_int_realloc (1 samples, 0.07%)</title><rect x="82.8512%" y="1205" width="0.0689%" height="15" fill="rgb(244,45,21)" fg:x="1203" fg:w="1"/><text x="82.9512%" y="1215.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_contains (1 samples, 0.07%)</title><rect x="82.9201%" y="709" width="0.0689%" height="15" fill="rgb(232,33,43)" fg:x="1204" fg:w="1"/><text x="83.0201%" y="719.50"></text></g><g><title>day_12::dfs::path_to_string (1 samples, 0.07%)</title><rect x="82.9201%" y="693" width="0.0689%" height="15" fill="rgb(209,8,3)" fg:x="1204" fg:w="1"/><text x="83.0201%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="82.9201%" y="677" width="0.0689%" height="15" fill="rgb(214,25,53)" fg:x="1204" fg:w="1"/><text x="83.0201%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="82.9201%" y="661" width="0.0689%" height="15" fill="rgb(254,186,54)" fg:x="1204" fg:w="1"/><text x="83.0201%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (1 samples, 0.07%)</title><rect x="82.9201%" y="645" width="0.0689%" height="15" fill="rgb(208,174,49)" fg:x="1204" fg:w="1"/><text x="83.0201%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.07%)</title><rect x="82.9201%" y="629" width="0.0689%" height="15" fill="rgb(233,191,51)" fg:x="1204" fg:w="1"/><text x="83.0201%" y="639.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="82.9201%" y="613" width="0.0689%" height="15" fill="rgb(222,134,10)" fg:x="1204" fg:w="1"/><text x="83.0201%" y="623.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="82.9201%" y="597" width="0.0689%" height="15" fill="rgb(230,226,20)" fg:x="1204" fg:w="1"/><text x="83.0201%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="82.9201%" y="581" width="0.0689%" height="15" fill="rgb(251,111,25)" fg:x="1204" fg:w="1"/><text x="83.0201%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="82.9201%" y="565" width="0.0689%" height="15" fill="rgb(224,40,46)" fg:x="1204" fg:w="1"/><text x="83.0201%" y="575.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="82.9201%" y="549" width="0.0689%" height="15" fill="rgb(236,108,47)" fg:x="1204" fg:w="1"/><text x="83.0201%" y="559.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (1 samples, 0.07%)</title><rect x="82.9201%" y="533" width="0.0689%" height="15" fill="rgb(234,93,0)" fg:x="1204" fg:w="1"/><text x="83.0201%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.07%)</title><rect x="82.9201%" y="517" width="0.0689%" height="15" fill="rgb(224,213,32)" fg:x="1204" fg:w="1"/><text x="83.0201%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (1 samples, 0.07%)</title><rect x="82.9201%" y="501" width="0.0689%" height="15" fill="rgb(251,11,48)" fg:x="1204" fg:w="1"/><text x="83.0201%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.07%)</title><rect x="82.9201%" y="485" width="0.0689%" height="15" fill="rgb(236,173,5)" fg:x="1204" fg:w="1"/><text x="83.0201%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="82.9201%" y="469" width="0.0689%" height="15" fill="rgb(230,95,12)" fg:x="1204" fg:w="1"/><text x="83.0201%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="82.9201%" y="453" width="0.0689%" height="15" fill="rgb(232,209,1)" fg:x="1204" fg:w="1"/><text x="83.0201%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="82.9201%" y="437" width="0.0689%" height="15" fill="rgb(232,6,1)" fg:x="1204" fg:w="1"/><text x="83.0201%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="82.9201%" y="421" width="0.0689%" height="15" fill="rgb(210,224,50)" fg:x="1204" fg:w="1"/><text x="83.0201%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="82.9201%" y="405" width="0.0689%" height="15" fill="rgb(228,127,35)" fg:x="1204" fg:w="1"/><text x="83.0201%" y="415.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_contains (1 samples, 0.07%)</title><rect x="82.9890%" y="693" width="0.0689%" height="15" fill="rgb(245,102,45)" fg:x="1205" fg:w="1"/><text x="83.0890%" y="703.50"></text></g><g><title>day_12::dfs::path_to_string (1 samples, 0.07%)</title><rect x="82.9890%" y="677" width="0.0689%" height="15" fill="rgb(214,1,49)" fg:x="1205" fg:w="1"/><text x="83.0890%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="82.9890%" y="661" width="0.0689%" height="15" fill="rgb(226,163,40)" fg:x="1205" fg:w="1"/><text x="83.0890%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="82.9890%" y="645" width="0.0689%" height="15" fill="rgb(239,212,28)" fg:x="1205" fg:w="1"/><text x="83.0890%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (1 samples, 0.07%)</title><rect x="82.9890%" y="629" width="0.0689%" height="15" fill="rgb(220,20,13)" fg:x="1205" fg:w="1"/><text x="83.0890%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.07%)</title><rect x="82.9890%" y="613" width="0.0689%" height="15" fill="rgb(210,164,35)" fg:x="1205" fg:w="1"/><text x="83.0890%" y="623.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="82.9890%" y="597" width="0.0689%" height="15" fill="rgb(248,109,41)" fg:x="1205" fg:w="1"/><text x="83.0890%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="82.9890%" y="581" width="0.0689%" height="15" fill="rgb(238,23,50)" fg:x="1205" fg:w="1"/><text x="83.0890%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="82.9890%" y="565" width="0.0689%" height="15" fill="rgb(211,48,49)" fg:x="1205" fg:w="1"/><text x="83.0890%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="82.9890%" y="549" width="0.0689%" height="15" fill="rgb(223,36,21)" fg:x="1205" fg:w="1"/><text x="83.0890%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="82.9890%" y="533" width="0.0689%" height="15" fill="rgb(207,123,46)" fg:x="1205" fg:w="1"/><text x="83.0890%" y="543.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (1 samples, 0.07%)</title><rect x="82.9890%" y="517" width="0.0689%" height="15" fill="rgb(240,218,32)" fg:x="1205" fg:w="1"/><text x="83.0890%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.07%)</title><rect x="82.9890%" y="501" width="0.0689%" height="15" fill="rgb(252,5,43)" fg:x="1205" fg:w="1"/><text x="83.0890%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (1 samples, 0.07%)</title><rect x="82.9890%" y="485" width="0.0689%" height="15" fill="rgb(252,84,19)" fg:x="1205" fg:w="1"/><text x="83.0890%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.07%)</title><rect x="82.9890%" y="469" width="0.0689%" height="15" fill="rgb(243,152,39)" fg:x="1205" fg:w="1"/><text x="83.0890%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="82.9890%" y="453" width="0.0689%" height="15" fill="rgb(234,160,15)" fg:x="1205" fg:w="1"/><text x="83.0890%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="82.9890%" y="437" width="0.0689%" height="15" fill="rgb(237,34,20)" fg:x="1205" fg:w="1"/><text x="83.0890%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="82.9890%" y="421" width="0.0689%" height="15" fill="rgb(229,97,13)" fg:x="1205" fg:w="1"/><text x="83.0890%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="82.9890%" y="405" width="0.0689%" height="15" fill="rgb(234,71,50)" fg:x="1205" fg:w="1"/><text x="83.0890%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="82.9890%" y="389" width="0.0689%" height="15" fill="rgb(253,155,4)" fg:x="1205" fg:w="1"/><text x="83.0890%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="82.9890%" y="373" width="0.0689%" height="15" fill="rgb(222,185,37)" fg:x="1205" fg:w="1"/><text x="83.0890%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="82.9890%" y="357" width="0.0689%" height="15" fill="rgb(251,177,13)" fg:x="1205" fg:w="1"/><text x="83.0890%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="83.0579%" y="389" width="0.0689%" height="15" fill="rgb(250,179,40)" fg:x="1206" fg:w="1"/><text x="83.1579%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="83.0579%" y="373" width="0.0689%" height="15" fill="rgb(242,44,2)" fg:x="1206" fg:w="1"/><text x="83.1579%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="83.0579%" y="357" width="0.0689%" height="15" fill="rgb(216,177,13)" fg:x="1206" fg:w="1"/><text x="83.1579%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="83.0579%" y="341" width="0.0689%" height="15" fill="rgb(216,106,43)" fg:x="1206" fg:w="1"/><text x="83.1579%" y="351.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.07%)</title><rect x="83.0579%" y="325" width="0.0689%" height="15" fill="rgb(216,183,2)" fg:x="1206" fg:w="1"/><text x="83.1579%" y="335.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.14%)</title><rect x="83.0579%" y="453" width="0.1377%" height="15" fill="rgb(249,75,3)" fg:x="1206" fg:w="2"/><text x="83.1579%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.14%)</title><rect x="83.0579%" y="437" width="0.1377%" height="15" fill="rgb(219,67,39)" fg:x="1206" fg:w="2"/><text x="83.1579%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.14%)</title><rect x="83.0579%" y="421" width="0.1377%" height="15" fill="rgb(253,228,2)" fg:x="1206" fg:w="2"/><text x="83.1579%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.14%)</title><rect x="83.0579%" y="405" width="0.1377%" height="15" fill="rgb(235,138,27)" fg:x="1206" fg:w="2"/><text x="83.1579%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="83.1267%" y="389" width="0.0689%" height="15" fill="rgb(236,97,51)" fg:x="1207" fg:w="1"/><text x="83.2267%" y="399.50"></text></g><g><title>__rust_alloc (1 samples, 0.07%)</title><rect x="83.1267%" y="373" width="0.0689%" height="15" fill="rgb(240,80,30)" fg:x="1207" fg:w="1"/><text x="83.2267%" y="383.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (3 samples, 0.21%)</title><rect x="83.0579%" y="501" width="0.2066%" height="15" fill="rgb(230,178,19)" fg:x="1206" fg:w="3"/><text x="83.1579%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.21%)</title><rect x="83.0579%" y="485" width="0.2066%" height="15" fill="rgb(210,190,27)" fg:x="1206" fg:w="3"/><text x="83.1579%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (3 samples, 0.21%)</title><rect x="83.0579%" y="469" width="0.2066%" height="15" fill="rgb(222,107,31)" fg:x="1206" fg:w="3"/><text x="83.1579%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.07%)</title><rect x="83.1956%" y="453" width="0.0689%" height="15" fill="rgb(216,127,34)" fg:x="1208" fg:w="1"/><text x="83.2956%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="83.1956%" y="437" width="0.0689%" height="15" fill="rgb(234,116,52)" fg:x="1208" fg:w="1"/><text x="83.2956%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="83.1956%" y="421" width="0.0689%" height="15" fill="rgb(222,124,15)" fg:x="1208" fg:w="1"/><text x="83.2956%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="83.1956%" y="405" width="0.0689%" height="15" fill="rgb(231,179,28)" fg:x="1208" fg:w="1"/><text x="83.2956%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="83.1956%" y="389" width="0.0689%" height="15" fill="rgb(226,93,45)" fg:x="1208" fg:w="1"/><text x="83.2956%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="83.1956%" y="373" width="0.0689%" height="15" fill="rgb(215,8,51)" fg:x="1208" fg:w="1"/><text x="83.2956%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="83.1956%" y="357" width="0.0689%" height="15" fill="rgb(223,106,5)" fg:x="1208" fg:w="1"/><text x="83.2956%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="83.1956%" y="341" width="0.0689%" height="15" fill="rgb(250,191,5)" fg:x="1208" fg:w="1"/><text x="83.2956%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="83.1956%" y="325" width="0.0689%" height="15" fill="rgb(242,132,44)" fg:x="1208" fg:w="1"/><text x="83.2956%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="83.1956%" y="309" width="0.0689%" height="15" fill="rgb(251,152,29)" fg:x="1208" fg:w="1"/><text x="83.2956%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="83.1956%" y="293" width="0.0689%" height="15" fill="rgb(218,179,5)" fg:x="1208" fg:w="1"/><text x="83.2956%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="83.1956%" y="277" width="0.0689%" height="15" fill="rgb(227,67,19)" fg:x="1208" fg:w="1"/><text x="83.2956%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="83.1956%" y="261" width="0.0689%" height="15" fill="rgb(233,119,31)" fg:x="1208" fg:w="1"/><text x="83.2956%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="83.1956%" y="245" width="0.0689%" height="15" fill="rgb(241,120,22)" fg:x="1208" fg:w="1"/><text x="83.2956%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="83.1956%" y="229" width="0.0689%" height="15" fill="rgb(224,102,30)" fg:x="1208" fg:w="1"/><text x="83.2956%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="83.1956%" y="213" width="0.0689%" height="15" fill="rgb(210,164,37)" fg:x="1208" fg:w="1"/><text x="83.2956%" y="223.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="83.1956%" y="197" width="0.0689%" height="15" fill="rgb(226,191,16)" fg:x="1208" fg:w="1"/><text x="83.2956%" y="207.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_contains (4 samples, 0.28%)</title><rect x="83.0579%" y="677" width="0.2755%" height="15" fill="rgb(214,40,45)" fg:x="1206" fg:w="4"/><text x="83.1579%" y="687.50"></text></g><g><title>day_12::dfs::path_to_string (4 samples, 0.28%)</title><rect x="83.0579%" y="661" width="0.2755%" height="15" fill="rgb(244,29,26)" fg:x="1206" fg:w="4"/><text x="83.1579%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.28%)</title><rect x="83.0579%" y="645" width="0.2755%" height="15" fill="rgb(216,16,5)" fg:x="1206" fg:w="4"/><text x="83.1579%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (4 samples, 0.28%)</title><rect x="83.0579%" y="629" width="0.2755%" height="15" fill="rgb(249,76,35)" fg:x="1206" fg:w="4"/><text x="83.1579%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (4 samples, 0.28%)</title><rect x="83.0579%" y="613" width="0.2755%" height="15" fill="rgb(207,11,44)" fg:x="1206" fg:w="4"/><text x="83.1579%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.28%)</title><rect x="83.0579%" y="597" width="0.2755%" height="15" fill="rgb(228,190,49)" fg:x="1206" fg:w="4"/><text x="83.1579%" y="607.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.28%)</title><rect x="83.0579%" y="581" width="0.2755%" height="15" fill="rgb(214,173,12)" fg:x="1206" fg:w="4"/><text x="83.1579%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.28%)</title><rect x="83.0579%" y="565" width="0.2755%" height="15" fill="rgb(218,26,35)" fg:x="1206" fg:w="4"/><text x="83.1579%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.28%)</title><rect x="83.0579%" y="549" width="0.2755%" height="15" fill="rgb(220,200,19)" fg:x="1206" fg:w="4"/><text x="83.1579%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.28%)</title><rect x="83.0579%" y="533" width="0.2755%" height="15" fill="rgb(239,95,49)" fg:x="1206" fg:w="4"/><text x="83.1579%" y="543.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.28%)</title><rect x="83.0579%" y="517" width="0.2755%" height="15" fill="rgb(235,85,53)" fg:x="1206" fg:w="4"/><text x="83.1579%" y="527.50"></text></g><g><title>day_12::dfs::path_to_string::{{closure}} (1 samples, 0.07%)</title><rect x="83.2645%" y="501" width="0.0689%" height="15" fill="rgb(233,133,31)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="83.2645%" y="485" width="0.0689%" height="15" fill="rgb(218,25,20)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="83.2645%" y="469" width="0.0689%" height="15" fill="rgb(252,210,38)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="83.2645%" y="453" width="0.0689%" height="15" fill="rgb(242,134,21)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="83.2645%" y="437" width="0.0689%" height="15" fill="rgb(213,28,48)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="83.2645%" y="421" width="0.0689%" height="15" fill="rgb(250,196,2)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="83.2645%" y="405" width="0.0689%" height="15" fill="rgb(227,5,17)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="83.2645%" y="389" width="0.0689%" height="15" fill="rgb(221,226,24)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="83.2645%" y="373" width="0.0689%" height="15" fill="rgb(211,5,48)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="83.2645%" y="357" width="0.0689%" height="15" fill="rgb(219,150,6)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="83.2645%" y="341" width="0.0689%" height="15" fill="rgb(251,46,16)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="83.2645%" y="325" width="0.0689%" height="15" fill="rgb(220,204,40)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="83.2645%" y="309" width="0.0689%" height="15" fill="rgb(211,85,2)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="83.2645%" y="293" width="0.0689%" height="15" fill="rgb(229,17,7)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="303.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="83.2645%" y="277" width="0.0689%" height="15" fill="rgb(239,72,28)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="287.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="83.2645%" y="261" width="0.0689%" height="15" fill="rgb(230,47,54)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="271.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="83.2645%" y="245" width="0.0689%" height="15" fill="rgb(214,50,8)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="83.2645%" y="229" width="0.0689%" height="15" fill="rgb(216,198,43)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="83.2645%" y="213" width="0.0689%" height="15" fill="rgb(234,20,35)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="83.2645%" y="197" width="0.0689%" height="15" fill="rgb(254,45,19)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="83.2645%" y="181" width="0.0689%" height="15" fill="rgb(219,14,44)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="191.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="83.2645%" y="165" width="0.0689%" height="15" fill="rgb(217,220,26)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="175.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="83.2645%" y="149" width="0.0689%" height="15" fill="rgb(213,158,28)" fg:x="1209" fg:w="1"/><text x="83.3645%" y="159.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="83.3333%" y="661" width="0.0689%" height="15" fill="rgb(252,51,52)" fg:x="1210" fg:w="1"/><text x="83.4333%" y="671.50"></text></g><g><title>tcache_get (1 samples, 0.07%)</title><rect x="83.3333%" y="645" width="0.0689%" height="15" fill="rgb(246,89,16)" fg:x="1210" fg:w="1"/><text x="83.4333%" y="655.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_contains (1 samples, 0.07%)</title><rect x="83.4022%" y="661" width="0.0689%" height="15" fill="rgb(216,158,49)" fg:x="1211" fg:w="1"/><text x="83.5022%" y="671.50"></text></g><g><title>day_12::dfs::path_to_string (1 samples, 0.07%)</title><rect x="83.4022%" y="645" width="0.0689%" height="15" fill="rgb(236,107,19)" fg:x="1211" fg:w="1"/><text x="83.5022%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="83.4022%" y="629" width="0.0689%" height="15" fill="rgb(228,185,30)" fg:x="1211" fg:w="1"/><text x="83.5022%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="83.4022%" y="613" width="0.0689%" height="15" fill="rgb(246,134,8)" fg:x="1211" fg:w="1"/><text x="83.5022%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (1 samples, 0.07%)</title><rect x="83.4022%" y="597" width="0.0689%" height="15" fill="rgb(214,143,50)" fg:x="1211" fg:w="1"/><text x="83.5022%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.07%)</title><rect x="83.4022%" y="581" width="0.0689%" height="15" fill="rgb(228,75,8)" fg:x="1211" fg:w="1"/><text x="83.5022%" y="591.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="83.4022%" y="565" width="0.0689%" height="15" fill="rgb(207,175,4)" fg:x="1211" fg:w="1"/><text x="83.5022%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="83.4022%" y="549" width="0.0689%" height="15" fill="rgb(205,108,24)" fg:x="1211" fg:w="1"/><text x="83.5022%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="83.4022%" y="533" width="0.0689%" height="15" fill="rgb(244,120,49)" fg:x="1211" fg:w="1"/><text x="83.5022%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="83.4022%" y="517" width="0.0689%" height="15" fill="rgb(223,47,38)" fg:x="1211" fg:w="1"/><text x="83.5022%" y="527.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="83.4022%" y="501" width="0.0689%" height="15" fill="rgb(229,179,11)" fg:x="1211" fg:w="1"/><text x="83.5022%" y="511.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (1 samples, 0.07%)</title><rect x="83.4022%" y="485" width="0.0689%" height="15" fill="rgb(231,122,1)" fg:x="1211" fg:w="1"/><text x="83.5022%" y="495.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseElementSimple&lt;Item&gt; as itertools::intersperse::IntersperseElement&lt;Item&gt;&gt;::generate (1 samples, 0.07%)</title><rect x="83.4022%" y="469" width="0.0689%" height="15" fill="rgb(245,119,9)" fg:x="1211" fg:w="1"/><text x="83.5022%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="83.4711%" y="645" width="0.0689%" height="15" fill="rgb(241,163,25)" fg:x="1212" fg:w="1"/><text x="83.5711%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="83.4711%" y="629" width="0.0689%" height="15" fill="rgb(217,214,3)" fg:x="1212" fg:w="1"/><text x="83.5711%" y="639.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="83.4711%" y="613" width="0.0689%" height="15" fill="rgb(240,86,28)" fg:x="1212" fg:w="1"/><text x="83.5711%" y="623.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (1 samples, 0.07%)</title><rect x="83.4711%" y="597" width="0.0689%" height="15" fill="rgb(215,47,9)" fg:x="1212" fg:w="1"/><text x="83.5711%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="83.4711%" y="581" width="0.0689%" height="15" fill="rgb(252,25,45)" fg:x="1212" fg:w="1"/><text x="83.5711%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="83.4711%" y="565" width="0.0689%" height="15" fill="rgb(251,164,9)" fg:x="1212" fg:w="1"/><text x="83.5711%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="83.4711%" y="549" width="0.0689%" height="15" fill="rgb(233,194,0)" fg:x="1212" fg:w="1"/><text x="83.5711%" y="559.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.07%)</title><rect x="83.4711%" y="533" width="0.0689%" height="15" fill="rgb(249,111,24)" fg:x="1212" fg:w="1"/><text x="83.5711%" y="543.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}} (1 samples, 0.07%)</title><rect x="83.4711%" y="517" width="0.0689%" height="15" fill="rgb(250,223,3)" fg:x="1212" fg:w="1"/><text x="83.5711%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.07%)</title><rect x="83.4711%" y="501" width="0.0689%" height="15" fill="rgb(236,178,37)" fg:x="1212" fg:w="1"/><text x="83.5711%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.07%)</title><rect x="83.4711%" y="485" width="0.0689%" height="15" fill="rgb(241,158,50)" fg:x="1212" fg:w="1"/><text x="83.5711%" y="495.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.07%)</title><rect x="83.4711%" y="469" width="0.0689%" height="15" fill="rgb(213,121,41)" fg:x="1212" fg:w="1"/><text x="83.5711%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="83.4711%" y="453" width="0.0689%" height="15" fill="rgb(240,92,3)" fg:x="1212" fg:w="1"/><text x="83.5711%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="83.4711%" y="437" width="0.0689%" height="15" fill="rgb(205,123,3)" fg:x="1212" fg:w="1"/><text x="83.5711%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="83.6088%" y="437" width="0.0689%" height="15" fill="rgb(205,97,47)" fg:x="1214" fg:w="1"/><text x="83.7088%" y="447.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseElementSimple&lt;Item&gt; as itertools::intersperse::IntersperseElement&lt;Item&gt;&gt;::generate (3 samples, 0.21%)</title><rect x="83.5399%" y="453" width="0.2066%" height="15" fill="rgb(247,152,14)" fg:x="1213" fg:w="3"/><text x="83.6399%" y="463.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="83.6777%" y="437" width="0.0689%" height="15" fill="rgb(248,195,53)" fg:x="1215" fg:w="1"/><text x="83.7777%" y="447.50"></text></g><g><title>tcache_get (1 samples, 0.07%)</title><rect x="83.6777%" y="421" width="0.0689%" height="15" fill="rgb(226,201,16)" fg:x="1215" fg:w="1"/><text x="83.7777%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.07%)</title><rect x="83.7466%" y="325" width="0.0689%" height="15" fill="rgb(205,98,0)" fg:x="1216" fg:w="1"/><text x="83.8466%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.07%)</title><rect x="83.7466%" y="309" width="0.0689%" height="15" fill="rgb(214,191,48)" fg:x="1216" fg:w="1"/><text x="83.8466%" y="319.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.14%)</title><rect x="83.7466%" y="421" width="0.1377%" height="15" fill="rgb(237,112,39)" fg:x="1216" fg:w="2"/><text x="83.8466%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.14%)</title><rect x="83.7466%" y="405" width="0.1377%" height="15" fill="rgb(247,203,27)" fg:x="1216" fg:w="2"/><text x="83.8466%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.14%)</title><rect x="83.7466%" y="389" width="0.1377%" height="15" fill="rgb(235,124,28)" fg:x="1216" fg:w="2"/><text x="83.8466%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.14%)</title><rect x="83.7466%" y="373" width="0.1377%" height="15" fill="rgb(208,207,46)" fg:x="1216" fg:w="2"/><text x="83.8466%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="83.7466%" y="357" width="0.1377%" height="15" fill="rgb(234,176,4)" fg:x="1216" fg:w="2"/><text x="83.8466%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="83.7466%" y="341" width="0.1377%" height="15" fill="rgb(230,133,28)" fg:x="1216" fg:w="2"/><text x="83.8466%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="83.8154%" y="325" width="0.0689%" height="15" fill="rgb(211,137,40)" fg:x="1217" fg:w="1"/><text x="83.9154%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="83.8154%" y="309" width="0.0689%" height="15" fill="rgb(254,35,13)" fg:x="1217" fg:w="1"/><text x="83.9154%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="83.8154%" y="293" width="0.0689%" height="15" fill="rgb(225,49,51)" fg:x="1217" fg:w="1"/><text x="83.9154%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="83.8154%" y="277" width="0.0689%" height="15" fill="rgb(251,10,15)" fg:x="1217" fg:w="1"/><text x="83.9154%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="83.8154%" y="261" width="0.0689%" height="15" fill="rgb(228,207,15)" fg:x="1217" fg:w="1"/><text x="83.9154%" y="271.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="83.8154%" y="245" width="0.0689%" height="15" fill="rgb(241,99,19)" fg:x="1217" fg:w="1"/><text x="83.9154%" y="255.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.07%)</title><rect x="83.8154%" y="229" width="0.0689%" height="15" fill="rgb(207,104,49)" fg:x="1217" fg:w="1"/><text x="83.9154%" y="239.50"></text></g><g><title>_int_realloc (1 samples, 0.07%)</title><rect x="83.8154%" y="213" width="0.0689%" height="15" fill="rgb(234,99,18)" fg:x="1217" fg:w="1"/><text x="83.9154%" y="223.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.07%)</title><rect x="83.8154%" y="197" width="0.0689%" height="15" fill="rgb(213,191,49)" fg:x="1217" fg:w="1"/><text x="83.9154%" y="207.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (6 samples, 0.41%)</title><rect x="83.5399%" y="469" width="0.4132%" height="15" fill="rgb(210,226,19)" fg:x="1213" fg:w="6"/><text x="83.6399%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.21%)</title><rect x="83.7466%" y="453" width="0.2066%" height="15" fill="rgb(229,97,18)" fg:x="1216" fg:w="3"/><text x="83.8466%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (3 samples, 0.21%)</title><rect x="83.7466%" y="437" width="0.2066%" height="15" fill="rgb(211,167,15)" fg:x="1216" fg:w="3"/><text x="83.8466%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.07%)</title><rect x="83.8843%" y="421" width="0.0689%" height="15" fill="rgb(210,169,34)" fg:x="1218" fg:w="1"/><text x="83.9843%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="83.8843%" y="405" width="0.0689%" height="15" fill="rgb(241,121,31)" fg:x="1218" fg:w="1"/><text x="83.9843%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="83.8843%" y="389" width="0.0689%" height="15" fill="rgb(232,40,11)" fg:x="1218" fg:w="1"/><text x="83.9843%" y="399.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="83.8843%" y="373" width="0.0689%" height="15" fill="rgb(205,86,26)" fg:x="1218" fg:w="1"/><text x="83.9843%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="83.8843%" y="357" width="0.0689%" height="15" fill="rgb(231,126,28)" fg:x="1218" fg:w="1"/><text x="83.9843%" y="367.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="83.8843%" y="341" width="0.0689%" height="15" fill="rgb(219,221,18)" fg:x="1218" fg:w="1"/><text x="83.9843%" y="351.50"></text></g><g><title>__GI___libc_free (1 samples, 0.07%)</title><rect x="83.8843%" y="325" width="0.0689%" height="15" fill="rgb(211,40,0)" fg:x="1218" fg:w="1"/><text x="83.9843%" y="335.50"></text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="83.8843%" y="309" width="0.0689%" height="15" fill="rgb(239,85,43)" fg:x="1218" fg:w="1"/><text x="83.9843%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.48%)</title><rect x="83.5399%" y="517" width="0.4821%" height="15" fill="rgb(231,55,21)" fg:x="1213" fg:w="7"/><text x="83.6399%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.48%)</title><rect x="83.5399%" y="501" width="0.4821%" height="15" fill="rgb(225,184,43)" fg:x="1213" fg:w="7"/><text x="83.6399%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (7 samples, 0.48%)</title><rect x="83.5399%" y="485" width="0.4821%" height="15" fill="rgb(251,158,41)" fg:x="1213" fg:w="7"/><text x="83.6399%" y="495.50"></text></g><g><title>day_12::dfs::path_to_string::{{closure}} (1 samples, 0.07%)</title><rect x="83.9532%" y="469" width="0.0689%" height="15" fill="rgb(234,159,37)" fg:x="1219" fg:w="1"/><text x="84.0532%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="83.9532%" y="453" width="0.0689%" height="15" fill="rgb(216,204,22)" fg:x="1219" fg:w="1"/><text x="84.0532%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="83.9532%" y="437" width="0.0689%" height="15" fill="rgb(214,17,3)" fg:x="1219" fg:w="1"/><text x="84.0532%" y="447.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="83.9532%" y="421" width="0.0689%" height="15" fill="rgb(212,111,17)" fg:x="1219" fg:w="1"/><text x="84.0532%" y="431.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="83.9532%" y="405" width="0.0689%" height="15" fill="rgb(221,157,24)" fg:x="1219" fg:w="1"/><text x="84.0532%" y="415.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="83.9532%" y="389" width="0.0689%" height="15" fill="rgb(252,16,13)" fg:x="1219" fg:w="1"/><text x="84.0532%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="83.9532%" y="373" width="0.0689%" height="15" fill="rgb(221,62,2)" fg:x="1219" fg:w="1"/><text x="84.0532%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="83.9532%" y="357" width="0.0689%" height="15" fill="rgb(247,87,22)" fg:x="1219" fg:w="1"/><text x="84.0532%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="83.9532%" y="341" width="0.0689%" height="15" fill="rgb(215,73,9)" fg:x="1219" fg:w="1"/><text x="84.0532%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="83.9532%" y="325" width="0.0689%" height="15" fill="rgb(207,175,33)" fg:x="1219" fg:w="1"/><text x="84.0532%" y="335.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="83.9532%" y="309" width="0.0689%" height="15" fill="rgb(243,129,54)" fg:x="1219" fg:w="1"/><text x="84.0532%" y="319.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="83.9532%" y="293" width="0.0689%" height="15" fill="rgb(227,119,45)" fg:x="1219" fg:w="1"/><text x="84.0532%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="83.9532%" y="277" width="0.0689%" height="15" fill="rgb(205,109,36)" fg:x="1219" fg:w="1"/><text x="84.0532%" y="287.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_contains (8 samples, 0.55%)</title><rect x="83.5399%" y="645" width="0.5510%" height="15" fill="rgb(205,6,39)" fg:x="1213" fg:w="8"/><text x="83.6399%" y="655.50"></text></g><g><title>day_12::dfs::path_to_string (8 samples, 0.55%)</title><rect x="83.5399%" y="629" width="0.5510%" height="15" fill="rgb(221,32,16)" fg:x="1213" fg:w="8"/><text x="83.6399%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.55%)</title><rect x="83.5399%" y="613" width="0.5510%" height="15" fill="rgb(228,144,50)" fg:x="1213" fg:w="8"/><text x="83.6399%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (8 samples, 0.55%)</title><rect x="83.5399%" y="597" width="0.5510%" height="15" fill="rgb(229,201,53)" fg:x="1213" fg:w="8"/><text x="83.6399%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (8 samples, 0.55%)</title><rect x="83.5399%" y="581" width="0.5510%" height="15" fill="rgb(249,153,27)" fg:x="1213" fg:w="8"/><text x="83.6399%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.55%)</title><rect x="83.5399%" y="565" width="0.5510%" height="15" fill="rgb(227,106,25)" fg:x="1213" fg:w="8"/><text x="83.6399%" y="575.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.55%)</title><rect x="83.5399%" y="549" width="0.5510%" height="15" fill="rgb(230,65,29)" fg:x="1213" fg:w="8"/><text x="83.6399%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.55%)</title><rect x="83.5399%" y="533" width="0.5510%" height="15" fill="rgb(221,57,46)" fg:x="1213" fg:w="8"/><text x="83.6399%" y="543.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="84.0220%" y="517" width="0.0689%" height="15" fill="rgb(229,161,17)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="527.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (1 samples, 0.07%)</title><rect x="84.0220%" y="501" width="0.0689%" height="15" fill="rgb(222,213,11)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="84.0220%" y="485" width="0.0689%" height="15" fill="rgb(235,35,13)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="84.0220%" y="469" width="0.0689%" height="15" fill="rgb(233,158,34)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="84.0220%" y="453" width="0.0689%" height="15" fill="rgb(215,151,48)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="463.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.07%)</title><rect x="84.0220%" y="437" width="0.0689%" height="15" fill="rgb(229,84,14)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="447.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}} (1 samples, 0.07%)</title><rect x="84.0220%" y="421" width="0.0689%" height="15" fill="rgb(229,68,14)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.07%)</title><rect x="84.0220%" y="405" width="0.0689%" height="15" fill="rgb(243,106,26)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.07%)</title><rect x="84.0220%" y="389" width="0.0689%" height="15" fill="rgb(206,45,38)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="399.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.07%)</title><rect x="84.0220%" y="373" width="0.0689%" height="15" fill="rgb(226,6,15)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="84.0220%" y="357" width="0.0689%" height="15" fill="rgb(232,22,54)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="84.0220%" y="341" width="0.0689%" height="15" fill="rgb(229,222,32)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="351.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="84.0220%" y="325" width="0.0689%" height="15" fill="rgb(228,62,29)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="335.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (1 samples, 0.07%)</title><rect x="84.0220%" y="309" width="0.0689%" height="15" fill="rgb(251,103,34)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="319.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="84.0220%" y="293" width="0.0689%" height="15" fill="rgb(233,12,30)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.07%)</title><rect x="84.0220%" y="277" width="0.0689%" height="15" fill="rgb(238,52,0)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="287.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="84.0220%" y="261" width="0.0689%" height="15" fill="rgb(223,98,5)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="271.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEqIdent&lt;T&gt;&gt;::eq (1 samples, 0.07%)</title><rect x="84.0220%" y="245" width="0.0689%" height="15" fill="rgb(228,75,37)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="255.50"></text></g><g><title>&lt;day_12::node::Node as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="84.0220%" y="229" width="0.0689%" height="15" fill="rgb(205,115,49)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="84.0220%" y="213" width="0.0689%" height="15" fill="rgb(250,154,43)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="223.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.07%)</title><rect x="84.0220%" y="197" width="0.0689%" height="15" fill="rgb(226,43,29)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="207.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.07%)</title><rect x="84.0220%" y="181" width="0.0689%" height="15" fill="rgb(249,228,39)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="191.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.07%)</title><rect x="84.0220%" y="165" width="0.0689%" height="15" fill="rgb(216,79,43)" fg:x="1220" fg:w="1"/><text x="84.1220%" y="175.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_push (1 samples, 0.07%)</title><rect x="84.0909%" y="645" width="0.0689%" height="15" fill="rgb(228,95,12)" fg:x="1221" fg:w="1"/><text x="84.1909%" y="655.50"></text></g><g><title>day_12::dfs::path_to_string (1 samples, 0.07%)</title><rect x="84.0909%" y="629" width="0.0689%" height="15" fill="rgb(249,221,15)" fg:x="1221" fg:w="1"/><text x="84.1909%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="84.0909%" y="613" width="0.0689%" height="15" fill="rgb(233,34,13)" fg:x="1221" fg:w="1"/><text x="84.1909%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="84.0909%" y="597" width="0.0689%" height="15" fill="rgb(214,103,39)" fg:x="1221" fg:w="1"/><text x="84.1909%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (1 samples, 0.07%)</title><rect x="84.0909%" y="581" width="0.0689%" height="15" fill="rgb(251,126,39)" fg:x="1221" fg:w="1"/><text x="84.1909%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.07%)</title><rect x="84.0909%" y="565" width="0.0689%" height="15" fill="rgb(214,216,36)" fg:x="1221" fg:w="1"/><text x="84.1909%" y="575.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="84.0909%" y="549" width="0.0689%" height="15" fill="rgb(220,221,8)" fg:x="1221" fg:w="1"/><text x="84.1909%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="84.0909%" y="533" width="0.0689%" height="15" fill="rgb(240,216,3)" fg:x="1221" fg:w="1"/><text x="84.1909%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="84.0909%" y="517" width="0.0689%" height="15" fill="rgb(232,218,17)" fg:x="1221" fg:w="1"/><text x="84.1909%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="84.0909%" y="501" width="0.0689%" height="15" fill="rgb(229,163,45)" fg:x="1221" fg:w="1"/><text x="84.1909%" y="511.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="84.0909%" y="485" width="0.0689%" height="15" fill="rgb(231,110,42)" fg:x="1221" fg:w="1"/><text x="84.1909%" y="495.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (1 samples, 0.07%)</title><rect x="84.0909%" y="469" width="0.0689%" height="15" fill="rgb(208,170,48)" fg:x="1221" fg:w="1"/><text x="84.1909%" y="479.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseElementSimple&lt;Item&gt; as itertools::intersperse::IntersperseElement&lt;Item&gt;&gt;::generate (1 samples, 0.07%)</title><rect x="84.0909%" y="453" width="0.0689%" height="15" fill="rgb(239,116,25)" fg:x="1221" fg:w="1"/><text x="84.1909%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.07%)</title><rect x="84.0909%" y="437" width="0.0689%" height="15" fill="rgb(219,200,50)" fg:x="1221" fg:w="1"/><text x="84.1909%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.07%)</title><rect x="84.0909%" y="421" width="0.0689%" height="15" fill="rgb(245,200,0)" fg:x="1221" fg:w="1"/><text x="84.1909%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="84.1598%" y="629" width="0.0689%" height="15" fill="rgb(245,119,33)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="84.1598%" y="613" width="0.0689%" height="15" fill="rgb(231,125,12)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="623.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="84.1598%" y="597" width="0.0689%" height="15" fill="rgb(216,96,41)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="607.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (1 samples, 0.07%)</title><rect x="84.1598%" y="581" width="0.0689%" height="15" fill="rgb(248,43,45)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="84.1598%" y="565" width="0.0689%" height="15" fill="rgb(217,222,7)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="84.1598%" y="549" width="0.0689%" height="15" fill="rgb(233,28,6)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="84.1598%" y="533" width="0.0689%" height="15" fill="rgb(231,218,15)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="543.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.07%)</title><rect x="84.1598%" y="517" width="0.0689%" height="15" fill="rgb(226,171,48)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="527.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}} (1 samples, 0.07%)</title><rect x="84.1598%" y="501" width="0.0689%" height="15" fill="rgb(235,201,9)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.07%)</title><rect x="84.1598%" y="485" width="0.0689%" height="15" fill="rgb(217,80,15)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.07%)</title><rect x="84.1598%" y="469" width="0.0689%" height="15" fill="rgb(219,152,8)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="479.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.07%)</title><rect x="84.1598%" y="453" width="0.0689%" height="15" fill="rgb(243,107,38)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="84.1598%" y="437" width="0.0689%" height="15" fill="rgb(231,17,5)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="84.1598%" y="421" width="0.0689%" height="15" fill="rgb(209,25,54)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="84.1598%" y="405" width="0.0689%" height="15" fill="rgb(219,0,2)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (1 samples, 0.07%)</title><rect x="84.1598%" y="389" width="0.0689%" height="15" fill="rgb(246,9,5)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="399.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="84.1598%" y="373" width="0.0689%" height="15" fill="rgb(226,159,4)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.07%)</title><rect x="84.1598%" y="357" width="0.0689%" height="15" fill="rgb(219,175,34)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="367.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="84.1598%" y="341" width="0.0689%" height="15" fill="rgb(236,10,46)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="351.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEqIdent&lt;T&gt;&gt;::eq (1 samples, 0.07%)</title><rect x="84.1598%" y="325" width="0.0689%" height="15" fill="rgb(240,211,16)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="335.50"></text></g><g><title>&lt;day_12::node::Node as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="84.1598%" y="309" width="0.0689%" height="15" fill="rgb(205,3,43)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="84.1598%" y="293" width="0.0689%" height="15" fill="rgb(245,7,22)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="303.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.07%)</title><rect x="84.1598%" y="277" width="0.0689%" height="15" fill="rgb(239,132,32)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="287.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.07%)</title><rect x="84.1598%" y="261" width="0.0689%" height="15" fill="rgb(228,202,34)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="271.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.07%)</title><rect x="84.1598%" y="245" width="0.0689%" height="15" fill="rgb(254,200,22)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="255.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.07%)</title><rect x="84.1598%" y="229" width="0.0689%" height="15" fill="rgb(219,10,39)" fg:x="1222" fg:w="1"/><text x="84.2598%" y="239.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.07%)</title><rect x="84.2975%" y="405" width="0.0689%" height="15" fill="rgb(226,210,39)" fg:x="1224" fg:w="1"/><text x="84.3975%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.07%)</title><rect x="84.2975%" y="389" width="0.0689%" height="15" fill="rgb(208,219,16)" fg:x="1224" fg:w="1"/><text x="84.3975%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="84.2975%" y="373" width="0.0689%" height="15" fill="rgb(216,158,51)" fg:x="1224" fg:w="1"/><text x="84.3975%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="84.2975%" y="357" width="0.0689%" height="15" fill="rgb(233,14,44)" fg:x="1224" fg:w="1"/><text x="84.3975%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="84.2975%" y="341" width="0.0689%" height="15" fill="rgb(237,97,39)" fg:x="1224" fg:w="1"/><text x="84.3975%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="84.2975%" y="325" width="0.0689%" height="15" fill="rgb(218,198,43)" fg:x="1224" fg:w="1"/><text x="84.3975%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="84.2975%" y="309" width="0.0689%" height="15" fill="rgb(231,104,20)" fg:x="1224" fg:w="1"/><text x="84.3975%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="84.2975%" y="293" width="0.0689%" height="15" fill="rgb(254,36,13)" fg:x="1224" fg:w="1"/><text x="84.3975%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="84.2975%" y="277" width="0.0689%" height="15" fill="rgb(248,14,50)" fg:x="1224" fg:w="1"/><text x="84.3975%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="84.2975%" y="261" width="0.0689%" height="15" fill="rgb(217,107,29)" fg:x="1224" fg:w="1"/><text x="84.3975%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="84.2975%" y="245" width="0.0689%" height="15" fill="rgb(251,169,33)" fg:x="1224" fg:w="1"/><text x="84.3975%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="84.2975%" y="229" width="0.0689%" height="15" fill="rgb(217,108,32)" fg:x="1224" fg:w="1"/><text x="84.3975%" y="239.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.07%)</title><rect x="84.2975%" y="213" width="0.0689%" height="15" fill="rgb(219,66,42)" fg:x="1224" fg:w="1"/><text x="84.3975%" y="223.50"></text></g><g><title>_int_realloc (1 samples, 0.07%)</title><rect x="84.2975%" y="197" width="0.0689%" height="15" fill="rgb(206,180,7)" fg:x="1224" fg:w="1"/><text x="84.3975%" y="207.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.07%)</title><rect x="84.2975%" y="181" width="0.0689%" height="15" fill="rgb(208,226,31)" fg:x="1224" fg:w="1"/><text x="84.3975%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="84.4353%" y="309" width="0.0689%" height="15" fill="rgb(218,26,49)" fg:x="1226" fg:w="1"/><text x="84.5353%" y="319.50"></text></g><g><title>day_12::dfs::path_to_string (5 samples, 0.34%)</title><rect x="84.2287%" y="613" width="0.3444%" height="15" fill="rgb(233,197,48)" fg:x="1223" fg:w="5"/><text x="84.3287%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.34%)</title><rect x="84.2287%" y="597" width="0.3444%" height="15" fill="rgb(252,181,51)" fg:x="1223" fg:w="5"/><text x="84.3287%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (5 samples, 0.34%)</title><rect x="84.2287%" y="581" width="0.3444%" height="15" fill="rgb(253,90,19)" fg:x="1223" fg:w="5"/><text x="84.3287%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (5 samples, 0.34%)</title><rect x="84.2287%" y="565" width="0.3444%" height="15" fill="rgb(215,171,30)" fg:x="1223" fg:w="5"/><text x="84.3287%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.34%)</title><rect x="84.2287%" y="549" width="0.3444%" height="15" fill="rgb(214,222,9)" fg:x="1223" fg:w="5"/><text x="84.3287%" y="559.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.34%)</title><rect x="84.2287%" y="533" width="0.3444%" height="15" fill="rgb(223,3,22)" fg:x="1223" fg:w="5"/><text x="84.3287%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.34%)</title><rect x="84.2287%" y="517" width="0.3444%" height="15" fill="rgb(225,196,46)" fg:x="1223" fg:w="5"/><text x="84.3287%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.34%)</title><rect x="84.2287%" y="501" width="0.3444%" height="15" fill="rgb(209,110,37)" fg:x="1223" fg:w="5"/><text x="84.3287%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.34%)</title><rect x="84.2287%" y="485" width="0.3444%" height="15" fill="rgb(249,89,12)" fg:x="1223" fg:w="5"/><text x="84.3287%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.34%)</title><rect x="84.2287%" y="469" width="0.3444%" height="15" fill="rgb(226,27,33)" fg:x="1223" fg:w="5"/><text x="84.3287%" y="479.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (5 samples, 0.34%)</title><rect x="84.2287%" y="453" width="0.3444%" height="15" fill="rgb(213,82,22)" fg:x="1223" fg:w="5"/><text x="84.3287%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.28%)</title><rect x="84.2975%" y="437" width="0.2755%" height="15" fill="rgb(248,140,0)" fg:x="1224" fg:w="4"/><text x="84.3975%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (4 samples, 0.28%)</title><rect x="84.2975%" y="421" width="0.2755%" height="15" fill="rgb(228,106,3)" fg:x="1224" fg:w="4"/><text x="84.3975%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.21%)</title><rect x="84.3664%" y="405" width="0.2066%" height="15" fill="rgb(209,23,37)" fg:x="1225" fg:w="3"/><text x="84.4664%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.21%)</title><rect x="84.3664%" y="389" width="0.2066%" height="15" fill="rgb(241,93,50)" fg:x="1225" fg:w="3"/><text x="84.4664%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.21%)</title><rect x="84.3664%" y="373" width="0.2066%" height="15" fill="rgb(253,46,43)" fg:x="1225" fg:w="3"/><text x="84.4664%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.21%)</title><rect x="84.3664%" y="357" width="0.2066%" height="15" fill="rgb(226,206,43)" fg:x="1225" fg:w="3"/><text x="84.4664%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.14%)</title><rect x="84.4353%" y="341" width="0.1377%" height="15" fill="rgb(217,54,7)" fg:x="1226" fg:w="2"/><text x="84.5353%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.14%)</title><rect x="84.4353%" y="325" width="0.1377%" height="15" fill="rgb(223,5,52)" fg:x="1226" fg:w="2"/><text x="84.5353%" y="335.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_push (1 samples, 0.07%)</title><rect x="84.5041%" y="309" width="0.0689%" height="15" fill="rgb(206,52,46)" fg:x="1227" fg:w="1"/><text x="84.6041%" y="319.50"></text></g><g><title>day_12::dfs::path_to_string (1 samples, 0.07%)</title><rect x="84.5041%" y="293" width="0.0689%" height="15" fill="rgb(253,136,11)" fg:x="1227" fg:w="1"/><text x="84.6041%" y="303.50"></text></g><g><title>itertools::Itertools::intersperse (1 samples, 0.07%)</title><rect x="84.5041%" y="277" width="0.0689%" height="15" fill="rgb(208,106,33)" fg:x="1227" fg:w="1"/><text x="84.6041%" y="287.50"></text></g><g><title>itertools::intersperse::intersperse (1 samples, 0.07%)</title><rect x="84.5041%" y="261" width="0.0689%" height="15" fill="rgb(206,54,4)" fg:x="1227" fg:w="1"/><text x="84.6041%" y="271.50"></text></g><g><title>itertools::intersperse::intersperse_with (1 samples, 0.07%)</title><rect x="84.5041%" y="245" width="0.0689%" height="15" fill="rgb(213,3,15)" fg:x="1227" fg:w="1"/><text x="84.6041%" y="255.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.5041%" y="229" width="0.0689%" height="15" fill="rgb(252,211,39)" fg:x="1227" fg:w="1"/><text x="84.6041%" y="239.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.07%)</title><rect x="84.5041%" y="213" width="0.0689%" height="15" fill="rgb(223,6,36)" fg:x="1227" fg:w="1"/><text x="84.6041%" y="223.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="84.5041%" y="197" width="0.0689%" height="15" fill="rgb(252,169,45)" fg:x="1227" fg:w="1"/><text x="84.6041%" y="207.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.07%)</title><rect x="84.5041%" y="181" width="0.0689%" height="15" fill="rgb(212,48,26)" fg:x="1227" fg:w="1"/><text x="84.6041%" y="191.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_contains (6 samples, 0.41%)</title><rect x="84.2287%" y="629" width="0.4132%" height="15" fill="rgb(251,102,48)" fg:x="1223" fg:w="6"/><text x="84.3287%" y="639.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.07%)</title><rect x="84.5730%" y="613" width="0.0689%" height="15" fill="rgb(243,208,16)" fg:x="1228" fg:w="1"/><text x="84.6730%" y="623.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.07%)</title><rect x="84.5730%" y="597" width="0.0689%" height="15" fill="rgb(219,96,24)" fg:x="1228" fg:w="1"/><text x="84.6730%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.07%)</title><rect x="84.5730%" y="581" width="0.0689%" height="15" fill="rgb(219,33,29)" fg:x="1228" fg:w="1"/><text x="84.6730%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.07%)</title><rect x="84.5730%" y="565" width="0.0689%" height="15" fill="rgb(223,176,5)" fg:x="1228" fg:w="1"/><text x="84.6730%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.07%)</title><rect x="84.5730%" y="549" width="0.0689%" height="15" fill="rgb(228,140,14)" fg:x="1228" fg:w="1"/><text x="84.6730%" y="559.50"></text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="84.5730%" y="533" width="0.0689%" height="15" fill="rgb(217,179,31)" fg:x="1228" fg:w="1"/><text x="84.6730%" y="543.50"></text></g><g><title>tcache_put (1 samples, 0.07%)</title><rect x="84.5730%" y="517" width="0.0689%" height="15" fill="rgb(230,9,30)" fg:x="1228" fg:w="1"/><text x="84.6730%" y="527.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_push (1 samples, 0.07%)</title><rect x="84.6419%" y="629" width="0.0689%" height="15" fill="rgb(230,136,20)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="639.50"></text></g><g><title>day_12::dfs::path_to_string (1 samples, 0.07%)</title><rect x="84.6419%" y="613" width="0.0689%" height="15" fill="rgb(215,210,22)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="84.6419%" y="597" width="0.0689%" height="15" fill="rgb(218,43,5)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="84.6419%" y="581" width="0.0689%" height="15" fill="rgb(216,11,5)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (1 samples, 0.07%)</title><rect x="84.6419%" y="565" width="0.0689%" height="15" fill="rgb(209,82,29)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.07%)</title><rect x="84.6419%" y="549" width="0.0689%" height="15" fill="rgb(244,115,12)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="559.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="84.6419%" y="533" width="0.0689%" height="15" fill="rgb(222,82,18)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="84.6419%" y="517" width="0.0689%" height="15" fill="rgb(249,227,8)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="84.6419%" y="501" width="0.0689%" height="15" fill="rgb(253,141,45)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="84.6419%" y="485" width="0.0689%" height="15" fill="rgb(234,184,4)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="84.6419%" y="469" width="0.0689%" height="15" fill="rgb(218,194,23)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="479.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (1 samples, 0.07%)</title><rect x="84.6419%" y="453" width="0.0689%" height="15" fill="rgb(235,66,41)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.07%)</title><rect x="84.6419%" y="437" width="0.0689%" height="15" fill="rgb(245,217,1)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (1 samples, 0.07%)</title><rect x="84.6419%" y="421" width="0.0689%" height="15" fill="rgb(229,91,1)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.07%)</title><rect x="84.6419%" y="405" width="0.0689%" height="15" fill="rgb(207,101,30)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.07%)</title><rect x="84.6419%" y="389" width="0.0689%" height="15" fill="rgb(223,82,49)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="84.6419%" y="373" width="0.0689%" height="15" fill="rgb(218,167,17)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="84.6419%" y="357" width="0.0689%" height="15" fill="rgb(208,103,14)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="84.6419%" y="341" width="0.0689%" height="15" fill="rgb(238,20,8)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="84.6419%" y="325" width="0.0689%" height="15" fill="rgb(218,80,54)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="84.6419%" y="309" width="0.0689%" height="15" fill="rgb(240,144,17)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="84.6419%" y="293" width="0.0689%" height="15" fill="rgb(245,27,50)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="84.6419%" y="277" width="0.0689%" height="15" fill="rgb(251,51,7)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="84.6419%" y="261" width="0.0689%" height="15" fill="rgb(245,217,29)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="271.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="84.6419%" y="245" width="0.0689%" height="15" fill="rgb(221,176,29)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="255.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="84.6419%" y="229" width="0.0689%" height="15" fill="rgb(212,180,24)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="239.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.07%)</title><rect x="84.6419%" y="213" width="0.0689%" height="15" fill="rgb(254,24,2)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="223.50"></text></g><g><title>_int_realloc (1 samples, 0.07%)</title><rect x="84.6419%" y="197" width="0.0689%" height="15" fill="rgb(230,100,2)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="207.50"></text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="84.6419%" y="181" width="0.0689%" height="15" fill="rgb(219,142,25)" fg:x="1229" fg:w="1"/><text x="84.7419%" y="191.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="84.7107%" y="613" width="0.0689%" height="15" fill="rgb(240,73,43)" fg:x="1230" fg:w="1"/><text x="84.8107%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter::Filter&lt;core::iter::adapters::filter::Filter&lt;alloc::vec::into_iter::IntoIter&lt;alloc::rc::Rc&lt;day_12::node::Node&gt;&gt;,day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}}&gt;,day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}}&gt;&gt; (1 samples, 0.07%)</title><rect x="84.7107%" y="597" width="0.0689%" height="15" fill="rgb(214,114,15)" fg:x="1230" fg:w="1"/><text x="84.8107%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter::Filter&lt;alloc::vec::into_iter::IntoIter&lt;alloc::rc::Rc&lt;day_12::node::Node&gt;&gt;,day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}}&gt;&gt; (1 samples, 0.07%)</title><rect x="84.7107%" y="581" width="0.0689%" height="15" fill="rgb(207,130,4)" fg:x="1230" fg:w="1"/><text x="84.8107%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;alloc::rc::Rc&lt;day_12::node::Node&gt;&gt;&gt; (1 samples, 0.07%)</title><rect x="84.7107%" y="565" width="0.0689%" height="15" fill="rgb(221,25,40)" fg:x="1230" fg:w="1"/><text x="84.8107%" y="575.50"></text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="84.7107%" y="549" width="0.0689%" height="15" fill="rgb(241,184,7)" fg:x="1230" fg:w="1"/><text x="84.8107%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="84.7796%" y="581" width="0.0689%" height="15" fill="rgb(235,159,4)" fg:x="1231" fg:w="1"/><text x="84.8796%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="84.7796%" y="565" width="0.0689%" height="15" fill="rgb(214,87,48)" fg:x="1231" fg:w="1"/><text x="84.8796%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="84.7796%" y="549" width="0.0689%" height="15" fill="rgb(246,198,24)" fg:x="1231" fg:w="1"/><text x="84.8796%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="84.7796%" y="533" width="0.0689%" height="15" fill="rgb(209,66,40)" fg:x="1231" fg:w="1"/><text x="84.8796%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="84.7796%" y="517" width="0.0689%" height="15" fill="rgb(233,147,39)" fg:x="1231" fg:w="1"/><text x="84.8796%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="84.7796%" y="501" width="0.0689%" height="15" fill="rgb(231,145,52)" fg:x="1231" fg:w="1"/><text x="84.8796%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="84.7796%" y="485" width="0.0689%" height="15" fill="rgb(206,20,26)" fg:x="1231" fg:w="1"/><text x="84.8796%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="84.7796%" y="469" width="0.0689%" height="15" fill="rgb(238,220,4)" fg:x="1231" fg:w="1"/><text x="84.8796%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="84.7796%" y="453" width="0.0689%" height="15" fill="rgb(252,195,42)" fg:x="1231" fg:w="1"/><text x="84.8796%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="84.7796%" y="437" width="0.0689%" height="15" fill="rgb(209,10,6)" fg:x="1231" fg:w="1"/><text x="84.8796%" y="447.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="84.7796%" y="421" width="0.0689%" height="15" fill="rgb(229,3,52)" fg:x="1231" fg:w="1"/><text x="84.8796%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="84.8485%" y="581" width="0.0689%" height="15" fill="rgb(253,49,37)" fg:x="1232" fg:w="1"/><text x="84.9485%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="84.9174%" y="213" width="0.0689%" height="15" fill="rgb(240,103,49)" fg:x="1233" fg:w="1"/><text x="85.0174%" y="223.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.28%)</title><rect x="84.7796%" y="613" width="0.2755%" height="15" fill="rgb(250,182,30)" fg:x="1231" fg:w="4"/><text x="84.8796%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.28%)</title><rect x="84.7796%" y="597" width="0.2755%" height="15" fill="rgb(248,8,30)" fg:x="1231" fg:w="4"/><text x="84.8796%" y="607.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="84.9174%" y="581" width="0.1377%" height="15" fill="rgb(237,120,30)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="591.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (2 samples, 0.14%)</title><rect x="84.9174%" y="565" width="0.1377%" height="15" fill="rgb(221,146,34)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.14%)</title><rect x="84.9174%" y="549" width="0.1377%" height="15" fill="rgb(242,55,13)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (2 samples, 0.14%)</title><rect x="84.9174%" y="533" width="0.1377%" height="15" fill="rgb(242,112,31)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.14%)</title><rect x="84.9174%" y="517" width="0.1377%" height="15" fill="rgb(249,192,27)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="527.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (2 samples, 0.14%)</title><rect x="84.9174%" y="501" width="0.1377%" height="15" fill="rgb(208,204,44)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="511.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}} (2 samples, 0.14%)</title><rect x="84.9174%" y="485" width="0.1377%" height="15" fill="rgb(208,93,54)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (2 samples, 0.14%)</title><rect x="84.9174%" y="469" width="0.1377%" height="15" fill="rgb(242,1,31)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.14%)</title><rect x="84.9174%" y="453" width="0.1377%" height="15" fill="rgb(241,83,25)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="463.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.14%)</title><rect x="84.9174%" y="437" width="0.1377%" height="15" fill="rgb(205,169,50)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.14%)</title><rect x="84.9174%" y="421" width="0.1377%" height="15" fill="rgb(239,186,37)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.14%)</title><rect x="84.9174%" y="405" width="0.1377%" height="15" fill="rgb(205,221,10)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.14%)</title><rect x="84.9174%" y="389" width="0.1377%" height="15" fill="rgb(218,196,15)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (2 samples, 0.14%)</title><rect x="84.9174%" y="373" width="0.1377%" height="15" fill="rgb(218,196,35)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="383.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}}::{{closure}} (2 samples, 0.14%)</title><rect x="84.9174%" y="357" width="0.1377%" height="15" fill="rgb(233,63,24)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.14%)</title><rect x="84.9174%" y="341" width="0.1377%" height="15" fill="rgb(225,8,4)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="351.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.14%)</title><rect x="84.9174%" y="325" width="0.1377%" height="15" fill="rgb(234,105,35)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEqIdent&lt;T&gt;&gt;::eq (2 samples, 0.14%)</title><rect x="84.9174%" y="309" width="0.1377%" height="15" fill="rgb(236,21,32)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="319.50"></text></g><g><title>&lt;day_12::node::Node as core::cmp::PartialEq&gt;::eq (2 samples, 0.14%)</title><rect x="84.9174%" y="293" width="0.1377%" height="15" fill="rgb(228,109,6)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2 samples, 0.14%)</title><rect x="84.9174%" y="277" width="0.1377%" height="15" fill="rgb(229,215,31)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="287.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (2 samples, 0.14%)</title><rect x="84.9174%" y="261" width="0.1377%" height="15" fill="rgb(221,52,54)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="271.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.14%)</title><rect x="84.9174%" y="245" width="0.1377%" height="15" fill="rgb(252,129,43)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="255.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.14%)</title><rect x="84.9174%" y="229" width="0.1377%" height="15" fill="rgb(248,183,27)" fg:x="1233" fg:w="2"/><text x="85.0174%" y="239.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.07%)</title><rect x="84.9862%" y="213" width="0.0689%" height="15" fill="rgb(250,0,22)" fg:x="1234" fg:w="1"/><text x="85.0862%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.0551%" y="485" width="0.0689%" height="15" fill="rgb(213,166,10)" fg:x="1235" fg:w="1"/><text x="85.1551%" y="495.50"></text></g><g><title>&lt;I as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.07%)</title><rect x="85.0551%" y="469" width="0.0689%" height="15" fill="rgb(207,163,36)" fg:x="1235" fg:w="1"/><text x="85.1551%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.07%)</title><rect x="85.1240%" y="389" width="0.0689%" height="15" fill="rgb(208,122,22)" fg:x="1236" fg:w="1"/><text x="85.2240%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.07%)</title><rect x="85.1240%" y="373" width="0.0689%" height="15" fill="rgb(207,104,49)" fg:x="1236" fg:w="1"/><text x="85.2240%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.07%)</title><rect x="85.1240%" y="357" width="0.0689%" height="15" fill="rgb(248,211,50)" fg:x="1236" fg:w="1"/><text x="85.2240%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.07%)</title><rect x="85.1240%" y="341" width="0.0689%" height="15" fill="rgb(217,13,45)" fg:x="1236" fg:w="1"/><text x="85.2240%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.07%)</title><rect x="85.1928%" y="389" width="0.0689%" height="15" fill="rgb(211,216,49)" fg:x="1237" fg:w="1"/><text x="85.2928%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.07%)</title><rect x="85.1928%" y="373" width="0.0689%" height="15" fill="rgb(221,58,53)" fg:x="1237" fg:w="1"/><text x="85.2928%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="85.1928%" y="357" width="0.0689%" height="15" fill="rgb(220,112,41)" fg:x="1237" fg:w="1"/><text x="85.2928%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="85.1928%" y="341" width="0.0689%" height="15" fill="rgb(236,38,28)" fg:x="1237" fg:w="1"/><text x="85.2928%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="85.1928%" y="325" width="0.0689%" height="15" fill="rgb(227,195,22)" fg:x="1237" fg:w="1"/><text x="85.2928%" y="335.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.1928%" y="309" width="0.0689%" height="15" fill="rgb(214,55,33)" fg:x="1237" fg:w="1"/><text x="85.2928%" y="319.50"></text></g><g><title>__GI___libc_free (2 samples, 0.14%)</title><rect x="85.2617%" y="293" width="0.1377%" height="15" fill="rgb(248,80,13)" fg:x="1238" fg:w="2"/><text x="85.3617%" y="303.50"></text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="85.2617%" y="277" width="0.1377%" height="15" fill="rgb(238,52,6)" fg:x="1238" fg:w="2"/><text x="85.3617%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.34%)</title><rect x="85.1240%" y="485" width="0.3444%" height="15" fill="rgb(224,198,47)" fg:x="1236" fg:w="5"/><text x="85.2240%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.34%)</title><rect x="85.1240%" y="469" width="0.3444%" height="15" fill="rgb(233,171,20)" fg:x="1236" fg:w="5"/><text x="85.2240%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (5 samples, 0.34%)</title><rect x="85.1240%" y="453" width="0.3444%" height="15" fill="rgb(241,30,25)" fg:x="1236" fg:w="5"/><text x="85.2240%" y="463.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (5 samples, 0.34%)</title><rect x="85.1240%" y="437" width="0.3444%" height="15" fill="rgb(207,171,38)" fg:x="1236" fg:w="5"/><text x="85.2240%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.34%)</title><rect x="85.1240%" y="421" width="0.3444%" height="15" fill="rgb(234,70,1)" fg:x="1236" fg:w="5"/><text x="85.2240%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (5 samples, 0.34%)</title><rect x="85.1240%" y="405" width="0.3444%" height="15" fill="rgb(232,178,18)" fg:x="1236" fg:w="5"/><text x="85.2240%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.21%)</title><rect x="85.2617%" y="389" width="0.2066%" height="15" fill="rgb(241,78,40)" fg:x="1238" fg:w="3"/><text x="85.3617%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.21%)</title><rect x="85.2617%" y="373" width="0.2066%" height="15" fill="rgb(222,35,25)" fg:x="1238" fg:w="3"/><text x="85.3617%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.21%)</title><rect x="85.2617%" y="357" width="0.2066%" height="15" fill="rgb(207,92,16)" fg:x="1238" fg:w="3"/><text x="85.3617%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.21%)</title><rect x="85.2617%" y="341" width="0.2066%" height="15" fill="rgb(216,59,51)" fg:x="1238" fg:w="3"/><text x="85.3617%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.21%)</title><rect x="85.2617%" y="325" width="0.2066%" height="15" fill="rgb(213,80,28)" fg:x="1238" fg:w="3"/><text x="85.3617%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.21%)</title><rect x="85.2617%" y="309" width="0.2066%" height="15" fill="rgb(220,93,7)" fg:x="1238" fg:w="3"/><text x="85.3617%" y="319.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.07%)</title><rect x="85.3994%" y="293" width="0.0689%" height="15" fill="rgb(225,24,44)" fg:x="1240" fg:w="1"/><text x="85.4994%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.07%)</title><rect x="85.3994%" y="277" width="0.0689%" height="15" fill="rgb(243,74,40)" fg:x="1240" fg:w="1"/><text x="85.4994%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (7 samples, 0.48%)</title><rect x="85.0551%" y="565" width="0.4821%" height="15" fill="rgb(228,39,7)" fg:x="1235" fg:w="7"/><text x="85.1551%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (7 samples, 0.48%)</title><rect x="85.0551%" y="549" width="0.4821%" height="15" fill="rgb(227,79,8)" fg:x="1235" fg:w="7"/><text x="85.1551%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.48%)</title><rect x="85.0551%" y="533" width="0.4821%" height="15" fill="rgb(236,58,11)" fg:x="1235" fg:w="7"/><text x="85.1551%" y="543.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.48%)</title><rect x="85.0551%" y="517" width="0.4821%" height="15" fill="rgb(249,63,35)" fg:x="1235" fg:w="7"/><text x="85.1551%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.48%)</title><rect x="85.0551%" y="501" width="0.4821%" height="15" fill="rgb(252,114,16)" fg:x="1235" fg:w="7"/><text x="85.1551%" y="511.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.4683%" y="485" width="0.0689%" height="15" fill="rgb(254,151,24)" fg:x="1241" fg:w="1"/><text x="85.5683%" y="495.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (1 samples, 0.07%)</title><rect x="85.4683%" y="469" width="0.0689%" height="15" fill="rgb(253,54,39)" fg:x="1241" fg:w="1"/><text x="85.5683%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="85.4683%" y="453" width="0.0689%" height="15" fill="rgb(243,25,45)" fg:x="1241" fg:w="1"/><text x="85.5683%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="85.4683%" y="437" width="0.0689%" height="15" fill="rgb(234,134,9)" fg:x="1241" fg:w="1"/><text x="85.5683%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="85.4683%" y="421" width="0.0689%" height="15" fill="rgb(227,166,31)" fg:x="1241" fg:w="1"/><text x="85.5683%" y="431.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.07%)</title><rect x="85.4683%" y="405" width="0.0689%" height="15" fill="rgb(245,143,41)" fg:x="1241" fg:w="1"/><text x="85.5683%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;day_12::node::Node&gt;&gt; (1 samples, 0.07%)</title><rect x="85.4683%" y="389" width="0.0689%" height="15" fill="rgb(238,181,32)" fg:x="1241" fg:w="1"/><text x="85.5683%" y="399.50"></text></g><g><title>day_12::dfs::path_to_string (8 samples, 0.55%)</title><rect x="85.0551%" y="597" width="0.5510%" height="15" fill="rgb(224,113,18)" fg:x="1235" fg:w="8"/><text x="85.1551%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.55%)</title><rect x="85.0551%" y="581" width="0.5510%" height="15" fill="rgb(240,229,28)" fg:x="1235" fg:w="8"/><text x="85.1551%" y="591.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.5372%" y="565" width="0.0689%" height="15" fill="rgb(250,185,3)" fg:x="1242" fg:w="1"/><text x="85.6372%" y="575.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (1 samples, 0.07%)</title><rect x="85.5372%" y="549" width="0.0689%" height="15" fill="rgb(212,59,25)" fg:x="1242" fg:w="1"/><text x="85.6372%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="85.5372%" y="533" width="0.0689%" height="15" fill="rgb(221,87,20)" fg:x="1242" fg:w="1"/><text x="85.6372%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="85.5372%" y="517" width="0.0689%" height="15" fill="rgb(213,74,28)" fg:x="1242" fg:w="1"/><text x="85.6372%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="85.5372%" y="501" width="0.0689%" height="15" fill="rgb(224,132,34)" fg:x="1242" fg:w="1"/><text x="85.6372%" y="511.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.07%)</title><rect x="85.5372%" y="485" width="0.0689%" height="15" fill="rgb(222,101,24)" fg:x="1242" fg:w="1"/><text x="85.6372%" y="495.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}} (1 samples, 0.07%)</title><rect x="85.5372%" y="469" width="0.0689%" height="15" fill="rgb(254,142,4)" fg:x="1242" fg:w="1"/><text x="85.6372%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.07%)</title><rect x="85.5372%" y="453" width="0.0689%" height="15" fill="rgb(230,229,49)" fg:x="1242" fg:w="1"/><text x="85.6372%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.07%)</title><rect x="85.5372%" y="437" width="0.0689%" height="15" fill="rgb(238,70,47)" fg:x="1242" fg:w="1"/><text x="85.6372%" y="447.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.07%)</title><rect x="85.5372%" y="421" width="0.0689%" height="15" fill="rgb(231,160,17)" fg:x="1242" fg:w="1"/><text x="85.6372%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="85.5372%" y="405" width="0.0689%" height="15" fill="rgb(218,68,53)" fg:x="1242" fg:w="1"/><text x="85.6372%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="85.5372%" y="389" width="0.0689%" height="15" fill="rgb(236,111,10)" fg:x="1242" fg:w="1"/><text x="85.6372%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="85.5372%" y="373" width="0.0689%" height="15" fill="rgb(224,34,41)" fg:x="1242" fg:w="1"/><text x="85.6372%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (1 samples, 0.07%)</title><rect x="85.5372%" y="357" width="0.0689%" height="15" fill="rgb(241,118,19)" fg:x="1242" fg:w="1"/><text x="85.6372%" y="367.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="85.5372%" y="341" width="0.0689%" height="15" fill="rgb(238,129,25)" fg:x="1242" fg:w="1"/><text x="85.6372%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.07%)</title><rect x="85.5372%" y="325" width="0.0689%" height="15" fill="rgb(238,22,31)" fg:x="1242" fg:w="1"/><text x="85.6372%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="85.5372%" y="309" width="0.0689%" height="15" fill="rgb(222,174,48)" fg:x="1242" fg:w="1"/><text x="85.6372%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEqIdent&lt;T&gt;&gt;::eq (1 samples, 0.07%)</title><rect x="85.5372%" y="293" width="0.0689%" height="15" fill="rgb(206,152,40)" fg:x="1242" fg:w="1"/><text x="85.6372%" y="303.50"></text></g><g><title>&lt;day_12::node::Node as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="85.5372%" y="277" width="0.0689%" height="15" fill="rgb(218,99,54)" fg:x="1242" fg:w="1"/><text x="85.6372%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="85.5372%" y="261" width="0.0689%" height="15" fill="rgb(220,174,26)" fg:x="1242" fg:w="1"/><text x="85.6372%" y="271.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="85.5372%" y="245" width="0.0689%" height="15" fill="rgb(245,116,9)" fg:x="1242" fg:w="1"/><text x="85.6372%" y="255.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_contains (10 samples, 0.69%)</title><rect x="85.0551%" y="613" width="0.6887%" height="15" fill="rgb(209,72,35)" fg:x="1235" fg:w="10"/><text x="85.1551%" y="623.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (2 samples, 0.14%)</title><rect x="85.6061%" y="597" width="0.1377%" height="15" fill="rgb(226,126,21)" fg:x="1243" fg:w="2"/><text x="85.7061%" y="607.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (2 samples, 0.14%)</title><rect x="85.6061%" y="581" width="0.1377%" height="15" fill="rgb(227,192,1)" fg:x="1243" fg:w="2"/><text x="85.7061%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.14%)</title><rect x="85.6061%" y="565" width="0.1377%" height="15" fill="rgb(237,180,29)" fg:x="1243" fg:w="2"/><text x="85.7061%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.14%)</title><rect x="85.6061%" y="549" width="0.1377%" height="15" fill="rgb(230,197,35)" fg:x="1243" fg:w="2"/><text x="85.7061%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.14%)</title><rect x="85.6061%" y="533" width="0.1377%" height="15" fill="rgb(246,193,31)" fg:x="1243" fg:w="2"/><text x="85.7061%" y="543.50"></text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="85.6061%" y="517" width="0.1377%" height="15" fill="rgb(241,36,4)" fg:x="1243" fg:w="2"/><text x="85.7061%" y="527.50"></text></g><g><title>tcache_put (1 samples, 0.07%)</title><rect x="85.6749%" y="501" width="0.0689%" height="15" fill="rgb(241,130,17)" fg:x="1244" fg:w="1"/><text x="85.7749%" y="511.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseElementSimple&lt;Item&gt; as itertools::intersperse::IntersperseElement&lt;Item&gt;&gt;::generate (1 samples, 0.07%)</title><rect x="85.7438%" y="421" width="0.0689%" height="15" fill="rgb(206,137,32)" fg:x="1245" fg:w="1"/><text x="85.8438%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="85.7438%" y="405" width="0.0689%" height="15" fill="rgb(237,228,51)" fg:x="1245" fg:w="1"/><text x="85.8438%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="85.7438%" y="389" width="0.0689%" height="15" fill="rgb(243,6,42)" fg:x="1245" fg:w="1"/><text x="85.8438%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="85.7438%" y="373" width="0.0689%" height="15" fill="rgb(251,74,28)" fg:x="1245" fg:w="1"/><text x="85.8438%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="85.7438%" y="357" width="0.0689%" height="15" fill="rgb(218,20,49)" fg:x="1245" fg:w="1"/><text x="85.8438%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="85.7438%" y="341" width="0.0689%" height="15" fill="rgb(238,28,14)" fg:x="1245" fg:w="1"/><text x="85.8438%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="85.7438%" y="325" width="0.0689%" height="15" fill="rgb(229,40,46)" fg:x="1245" fg:w="1"/><text x="85.8438%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="85.7438%" y="309" width="0.0689%" height="15" fill="rgb(244,195,20)" fg:x="1245" fg:w="1"/><text x="85.8438%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="85.7438%" y="293" width="0.0689%" height="15" fill="rgb(253,56,35)" fg:x="1245" fg:w="1"/><text x="85.8438%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="85.7438%" y="277" width="0.0689%" height="15" fill="rgb(210,149,44)" fg:x="1245" fg:w="1"/><text x="85.8438%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="85.7438%" y="261" width="0.0689%" height="15" fill="rgb(240,135,12)" fg:x="1245" fg:w="1"/><text x="85.8438%" y="271.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="85.7438%" y="245" width="0.0689%" height="15" fill="rgb(251,24,50)" fg:x="1245" fg:w="1"/><text x="85.8438%" y="255.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="85.7438%" y="229" width="0.0689%" height="15" fill="rgb(243,200,47)" fg:x="1245" fg:w="1"/><text x="85.8438%" y="239.50"></text></g><g><title>day_12::dfs::path_to_string (2 samples, 0.14%)</title><rect x="85.7438%" y="597" width="0.1377%" height="15" fill="rgb(224,166,26)" fg:x="1245" fg:w="2"/><text x="85.8438%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.14%)</title><rect x="85.7438%" y="581" width="0.1377%" height="15" fill="rgb(233,0,47)" fg:x="1245" fg:w="2"/><text x="85.8438%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="85.7438%" y="565" width="0.1377%" height="15" fill="rgb(253,80,5)" fg:x="1245" fg:w="2"/><text x="85.8438%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (2 samples, 0.14%)</title><rect x="85.7438%" y="549" width="0.1377%" height="15" fill="rgb(214,133,25)" fg:x="1245" fg:w="2"/><text x="85.8438%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.14%)</title><rect x="85.7438%" y="533" width="0.1377%" height="15" fill="rgb(209,27,14)" fg:x="1245" fg:w="2"/><text x="85.8438%" y="543.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.14%)</title><rect x="85.7438%" y="517" width="0.1377%" height="15" fill="rgb(219,102,51)" fg:x="1245" fg:w="2"/><text x="85.8438%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.14%)</title><rect x="85.7438%" y="501" width="0.1377%" height="15" fill="rgb(237,18,16)" fg:x="1245" fg:w="2"/><text x="85.8438%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.14%)</title><rect x="85.7438%" y="485" width="0.1377%" height="15" fill="rgb(241,85,17)" fg:x="1245" fg:w="2"/><text x="85.8438%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.14%)</title><rect x="85.7438%" y="469" width="0.1377%" height="15" fill="rgb(236,90,42)" fg:x="1245" fg:w="2"/><text x="85.8438%" y="479.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.14%)</title><rect x="85.7438%" y="453" width="0.1377%" height="15" fill="rgb(249,57,21)" fg:x="1245" fg:w="2"/><text x="85.8438%" y="463.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (2 samples, 0.14%)</title><rect x="85.7438%" y="437" width="0.1377%" height="15" fill="rgb(243,12,36)" fg:x="1245" fg:w="2"/><text x="85.8438%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.07%)</title><rect x="85.8127%" y="421" width="0.0689%" height="15" fill="rgb(253,128,47)" fg:x="1246" fg:w="1"/><text x="85.9127%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (1 samples, 0.07%)</title><rect x="85.8127%" y="405" width="0.0689%" height="15" fill="rgb(207,33,20)" fg:x="1246" fg:w="1"/><text x="85.9127%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.07%)</title><rect x="85.8127%" y="389" width="0.0689%" height="15" fill="rgb(233,215,35)" fg:x="1246" fg:w="1"/><text x="85.9127%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.07%)</title><rect x="85.8127%" y="373" width="0.0689%" height="15" fill="rgb(249,188,52)" fg:x="1246" fg:w="1"/><text x="85.9127%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="85.8127%" y="357" width="0.0689%" height="15" fill="rgb(225,12,32)" fg:x="1246" fg:w="1"/><text x="85.9127%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="85.8127%" y="341" width="0.0689%" height="15" fill="rgb(247,98,14)" fg:x="1246" fg:w="1"/><text x="85.9127%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="85.8127%" y="325" width="0.0689%" height="15" fill="rgb(247,219,48)" fg:x="1246" fg:w="1"/><text x="85.9127%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="85.8127%" y="309" width="0.0689%" height="15" fill="rgb(253,60,48)" fg:x="1246" fg:w="1"/><text x="85.9127%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="85.8127%" y="293" width="0.0689%" height="15" fill="rgb(245,15,52)" fg:x="1246" fg:w="1"/><text x="85.9127%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="85.8127%" y="277" width="0.0689%" height="15" fill="rgb(220,133,28)" fg:x="1246" fg:w="1"/><text x="85.9127%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="85.8127%" y="261" width="0.0689%" height="15" fill="rgb(217,180,4)" fg:x="1246" fg:w="1"/><text x="85.9127%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.07%)</title><rect x="85.9504%" y="293" width="0.0689%" height="15" fill="rgb(251,24,1)" fg:x="1248" fg:w="1"/><text x="86.0504%" y="303.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.07%)</title><rect x="85.9504%" y="277" width="0.0689%" height="15" fill="rgb(212,185,49)" fg:x="1248" fg:w="1"/><text x="86.0504%" y="287.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_push (10 samples, 0.69%)</title><rect x="85.7438%" y="613" width="0.6887%" height="15" fill="rgb(215,175,22)" fg:x="1245" fg:w="10"/><text x="85.8438%" y="623.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (8 samples, 0.55%)</title><rect x="85.8815%" y="597" width="0.5510%" height="15" fill="rgb(250,205,14)" fg:x="1247" fg:w="8"/><text x="85.9815%" y="607.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (8 samples, 0.55%)</title><rect x="85.8815%" y="581" width="0.5510%" height="15" fill="rgb(225,211,22)" fg:x="1247" fg:w="8"/><text x="85.9815%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (8 samples, 0.55%)</title><rect x="85.8815%" y="565" width="0.5510%" height="15" fill="rgb(251,179,42)" fg:x="1247" fg:w="8"/><text x="85.9815%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (8 samples, 0.55%)</title><rect x="85.8815%" y="549" width="0.5510%" height="15" fill="rgb(208,216,51)" fg:x="1247" fg:w="8"/><text x="85.9815%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (8 samples, 0.55%)</title><rect x="85.8815%" y="533" width="0.5510%" height="15" fill="rgb(235,36,11)" fg:x="1247" fg:w="8"/><text x="85.9815%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (8 samples, 0.55%)</title><rect x="85.8815%" y="517" width="0.5510%" height="15" fill="rgb(213,189,28)" fg:x="1247" fg:w="8"/><text x="85.9815%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (8 samples, 0.55%)</title><rect x="85.8815%" y="501" width="0.5510%" height="15" fill="rgb(227,203,42)" fg:x="1247" fg:w="8"/><text x="85.9815%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (8 samples, 0.55%)</title><rect x="85.8815%" y="485" width="0.5510%" height="15" fill="rgb(244,72,36)" fg:x="1247" fg:w="8"/><text x="85.9815%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (8 samples, 0.55%)</title><rect x="85.8815%" y="469" width="0.5510%" height="15" fill="rgb(213,53,17)" fg:x="1247" fg:w="8"/><text x="85.9815%" y="479.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (8 samples, 0.55%)</title><rect x="85.8815%" y="453" width="0.5510%" height="15" fill="rgb(207,167,3)" fg:x="1247" fg:w="8"/><text x="85.9815%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.55%)</title><rect x="85.8815%" y="437" width="0.5510%" height="15" fill="rgb(216,98,30)" fg:x="1247" fg:w="8"/><text x="85.9815%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (8 samples, 0.55%)</title><rect x="85.8815%" y="421" width="0.5510%" height="15" fill="rgb(236,123,15)" fg:x="1247" fg:w="8"/><text x="85.9815%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (8 samples, 0.55%)</title><rect x="85.8815%" y="405" width="0.5510%" height="15" fill="rgb(248,81,50)" fg:x="1247" fg:w="8"/><text x="85.9815%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (8 samples, 0.55%)</title><rect x="85.8815%" y="389" width="0.5510%" height="15" fill="rgb(214,120,4)" fg:x="1247" fg:w="8"/><text x="85.9815%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (8 samples, 0.55%)</title><rect x="85.8815%" y="373" width="0.5510%" height="15" fill="rgb(208,179,34)" fg:x="1247" fg:w="8"/><text x="85.9815%" y="383.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (8 samples, 0.55%)</title><rect x="85.8815%" y="357" width="0.5510%" height="15" fill="rgb(227,140,7)" fg:x="1247" fg:w="8"/><text x="85.9815%" y="367.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (8 samples, 0.55%)</title><rect x="85.8815%" y="341" width="0.5510%" height="15" fill="rgb(214,22,6)" fg:x="1247" fg:w="8"/><text x="85.9815%" y="351.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (8 samples, 0.55%)</title><rect x="85.8815%" y="325" width="0.5510%" height="15" fill="rgb(207,137,27)" fg:x="1247" fg:w="8"/><text x="85.9815%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (8 samples, 0.55%)</title><rect x="85.8815%" y="309" width="0.5510%" height="15" fill="rgb(210,8,46)" fg:x="1247" fg:w="8"/><text x="85.9815%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.41%)</title><rect x="86.0193%" y="293" width="0.4132%" height="15" fill="rgb(240,16,54)" fg:x="1249" fg:w="6"/><text x="86.1193%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="86.4325%" y="597" width="0.0689%" height="15" fill="rgb(211,209,29)" fg:x="1255" fg:w="1"/><text x="86.5325%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="86.4325%" y="581" width="0.0689%" height="15" fill="rgb(226,228,24)" fg:x="1255" fg:w="1"/><text x="86.5325%" y="591.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="86.4325%" y="565" width="0.0689%" height="15" fill="rgb(222,84,9)" fg:x="1255" fg:w="1"/><text x="86.5325%" y="575.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="86.4325%" y="549" width="0.0689%" height="15" fill="rgb(234,203,30)" fg:x="1255" fg:w="1"/><text x="86.5325%" y="559.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="86.4325%" y="533" width="0.0689%" height="15" fill="rgb(238,109,14)" fg:x="1255" fg:w="1"/><text x="86.5325%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="86.4325%" y="517" width="0.0689%" height="15" fill="rgb(233,206,34)" fg:x="1255" fg:w="1"/><text x="86.5325%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="86.4325%" y="501" width="0.0689%" height="15" fill="rgb(220,167,47)" fg:x="1255" fg:w="1"/><text x="86.5325%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="86.4325%" y="485" width="0.0689%" height="15" fill="rgb(238,105,10)" fg:x="1255" fg:w="1"/><text x="86.5325%" y="495.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.07%)</title><rect x="86.5014%" y="293" width="0.0689%" height="15" fill="rgb(213,227,17)" fg:x="1256" fg:w="1"/><text x="86.6014%" y="303.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (2 samples, 0.14%)</title><rect x="86.5014%" y="469" width="0.1377%" height="15" fill="rgb(217,132,38)" fg:x="1256" fg:w="2"/><text x="86.6014%" y="479.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}} (2 samples, 0.14%)</title><rect x="86.5014%" y="453" width="0.1377%" height="15" fill="rgb(242,146,4)" fg:x="1256" fg:w="2"/><text x="86.6014%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (2 samples, 0.14%)</title><rect x="86.5014%" y="437" width="0.1377%" height="15" fill="rgb(212,61,9)" fg:x="1256" fg:w="2"/><text x="86.6014%" y="447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::cmp::PartialEq&gt;::ne (2 samples, 0.14%)</title><rect x="86.5014%" y="421" width="0.1377%" height="15" fill="rgb(247,126,22)" fg:x="1256" fg:w="2"/><text x="86.6014%" y="431.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEqIdent&lt;T&gt;&gt;::ne (2 samples, 0.14%)</title><rect x="86.5014%" y="405" width="0.1377%" height="15" fill="rgb(220,196,2)" fg:x="1256" fg:w="2"/><text x="86.6014%" y="415.50"></text></g><g><title>core::cmp::PartialEq::ne (2 samples, 0.14%)</title><rect x="86.5014%" y="389" width="0.1377%" height="15" fill="rgb(208,46,4)" fg:x="1256" fg:w="2"/><text x="86.6014%" y="399.50"></text></g><g><title>&lt;day_12::node::Node as core::cmp::PartialEq&gt;::eq (2 samples, 0.14%)</title><rect x="86.5014%" y="373" width="0.1377%" height="15" fill="rgb(252,104,46)" fg:x="1256" fg:w="2"/><text x="86.6014%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2 samples, 0.14%)</title><rect x="86.5014%" y="357" width="0.1377%" height="15" fill="rgb(237,152,48)" fg:x="1256" fg:w="2"/><text x="86.6014%" y="367.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (2 samples, 0.14%)</title><rect x="86.5014%" y="341" width="0.1377%" height="15" fill="rgb(221,59,37)" fg:x="1256" fg:w="2"/><text x="86.6014%" y="351.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.14%)</title><rect x="86.5014%" y="325" width="0.1377%" height="15" fill="rgb(209,202,51)" fg:x="1256" fg:w="2"/><text x="86.6014%" y="335.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.14%)</title><rect x="86.5014%" y="309" width="0.1377%" height="15" fill="rgb(228,81,30)" fg:x="1256" fg:w="2"/><text x="86.6014%" y="319.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="86.5702%" y="293" width="0.0689%" height="15" fill="rgb(227,42,39)" fg:x="1257" fg:w="1"/><text x="86.6702%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="86.5702%" y="277" width="0.0689%" height="15" fill="rgb(221,26,2)" fg:x="1257" fg:w="1"/><text x="86.6702%" y="287.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="86.6391%" y="197" width="0.0689%" height="15" fill="rgb(254,61,31)" fg:x="1258" fg:w="1"/><text x="86.7391%" y="207.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.07%)</title><rect x="86.7080%" y="197" width="0.0689%" height="15" fill="rgb(222,173,38)" fg:x="1259" fg:w="1"/><text x="86.8080%" y="207.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="86.7769%" y="197" width="0.0689%" height="15" fill="rgb(218,50,12)" fg:x="1260" fg:w="1"/><text x="86.8769%" y="207.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="86.7769%" y="181" width="0.0689%" height="15" fill="rgb(223,88,40)" fg:x="1260" fg:w="1"/><text x="86.8769%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (6 samples, 0.41%)</title><rect x="86.5014%" y="597" width="0.4132%" height="15" fill="rgb(237,54,19)" fg:x="1256" fg:w="6"/><text x="86.6014%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (6 samples, 0.41%)</title><rect x="86.5014%" y="581" width="0.4132%" height="15" fill="rgb(251,129,25)" fg:x="1256" fg:w="6"/><text x="86.6014%" y="591.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (6 samples, 0.41%)</title><rect x="86.5014%" y="565" width="0.4132%" height="15" fill="rgb(238,97,19)" fg:x="1256" fg:w="6"/><text x="86.6014%" y="575.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (6 samples, 0.41%)</title><rect x="86.5014%" y="549" width="0.4132%" height="15" fill="rgb(240,169,18)" fg:x="1256" fg:w="6"/><text x="86.6014%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.41%)</title><rect x="86.5014%" y="533" width="0.4132%" height="15" fill="rgb(230,187,49)" fg:x="1256" fg:w="6"/><text x="86.6014%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.41%)</title><rect x="86.5014%" y="517" width="0.4132%" height="15" fill="rgb(209,44,26)" fg:x="1256" fg:w="6"/><text x="86.6014%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (6 samples, 0.41%)</title><rect x="86.5014%" y="501" width="0.4132%" height="15" fill="rgb(244,0,6)" fg:x="1256" fg:w="6"/><text x="86.6014%" y="511.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (6 samples, 0.41%)</title><rect x="86.5014%" y="485" width="0.4132%" height="15" fill="rgb(248,18,21)" fg:x="1256" fg:w="6"/><text x="86.6014%" y="495.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}} (4 samples, 0.28%)</title><rect x="86.6391%" y="469" width="0.2755%" height="15" fill="rgb(245,180,19)" fg:x="1258" fg:w="4"/><text x="86.7391%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (4 samples, 0.28%)</title><rect x="86.6391%" y="453" width="0.2755%" height="15" fill="rgb(252,118,36)" fg:x="1258" fg:w="4"/><text x="86.7391%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (4 samples, 0.28%)</title><rect x="86.6391%" y="437" width="0.2755%" height="15" fill="rgb(210,224,19)" fg:x="1258" fg:w="4"/><text x="86.7391%" y="447.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (4 samples, 0.28%)</title><rect x="86.6391%" y="421" width="0.2755%" height="15" fill="rgb(218,30,24)" fg:x="1258" fg:w="4"/><text x="86.7391%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.28%)</title><rect x="86.6391%" y="405" width="0.2755%" height="15" fill="rgb(219,75,50)" fg:x="1258" fg:w="4"/><text x="86.7391%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.28%)</title><rect x="86.6391%" y="389" width="0.2755%" height="15" fill="rgb(234,72,50)" fg:x="1258" fg:w="4"/><text x="86.7391%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.28%)</title><rect x="86.6391%" y="373" width="0.2755%" height="15" fill="rgb(219,100,48)" fg:x="1258" fg:w="4"/><text x="86.7391%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (4 samples, 0.28%)</title><rect x="86.6391%" y="357" width="0.2755%" height="15" fill="rgb(253,5,41)" fg:x="1258" fg:w="4"/><text x="86.7391%" y="367.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}}::{{closure}} (4 samples, 0.28%)</title><rect x="86.6391%" y="341" width="0.2755%" height="15" fill="rgb(247,181,11)" fg:x="1258" fg:w="4"/><text x="86.7391%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.28%)</title><rect x="86.6391%" y="325" width="0.2755%" height="15" fill="rgb(222,223,25)" fg:x="1258" fg:w="4"/><text x="86.7391%" y="335.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::cmp::PartialEq&gt;::eq (4 samples, 0.28%)</title><rect x="86.6391%" y="309" width="0.2755%" height="15" fill="rgb(214,198,28)" fg:x="1258" fg:w="4"/><text x="86.7391%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEqIdent&lt;T&gt;&gt;::eq (4 samples, 0.28%)</title><rect x="86.6391%" y="293" width="0.2755%" height="15" fill="rgb(230,46,43)" fg:x="1258" fg:w="4"/><text x="86.7391%" y="303.50"></text></g><g><title>&lt;day_12::node::Node as core::cmp::PartialEq&gt;::eq (4 samples, 0.28%)</title><rect x="86.6391%" y="277" width="0.2755%" height="15" fill="rgb(233,65,53)" fg:x="1258" fg:w="4"/><text x="86.7391%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (4 samples, 0.28%)</title><rect x="86.6391%" y="261" width="0.2755%" height="15" fill="rgb(221,121,27)" fg:x="1258" fg:w="4"/><text x="86.7391%" y="271.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (4 samples, 0.28%)</title><rect x="86.6391%" y="245" width="0.2755%" height="15" fill="rgb(247,70,47)" fg:x="1258" fg:w="4"/><text x="86.7391%" y="255.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.28%)</title><rect x="86.6391%" y="229" width="0.2755%" height="15" fill="rgb(228,85,35)" fg:x="1258" fg:w="4"/><text x="86.7391%" y="239.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.28%)</title><rect x="86.6391%" y="213" width="0.2755%" height="15" fill="rgb(209,50,18)" fg:x="1258" fg:w="4"/><text x="86.7391%" y="223.50"></text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="86.8457%" y="197" width="0.0689%" height="15" fill="rgb(250,19,35)" fg:x="1261" fg:w="1"/><text x="86.9457%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="86.9146%" y="501" width="0.0689%" height="15" fill="rgb(253,107,29)" fg:x="1262" fg:w="1"/><text x="87.0146%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="86.9146%" y="485" width="0.0689%" height="15" fill="rgb(252,179,29)" fg:x="1262" fg:w="1"/><text x="87.0146%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="86.9146%" y="469" width="0.0689%" height="15" fill="rgb(238,194,6)" fg:x="1262" fg:w="1"/><text x="87.0146%" y="479.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (1 samples, 0.07%)</title><rect x="86.9146%" y="453" width="0.0689%" height="15" fill="rgb(238,164,29)" fg:x="1262" fg:w="1"/><text x="87.0146%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.07%)</title><rect x="86.9146%" y="437" width="0.0689%" height="15" fill="rgb(224,25,9)" fg:x="1262" fg:w="1"/><text x="87.0146%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (1 samples, 0.07%)</title><rect x="86.9146%" y="421" width="0.0689%" height="15" fill="rgb(244,153,23)" fg:x="1262" fg:w="1"/><text x="87.0146%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.07%)</title><rect x="86.9146%" y="405" width="0.0689%" height="15" fill="rgb(212,203,14)" fg:x="1262" fg:w="1"/><text x="87.0146%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.07%)</title><rect x="86.9146%" y="389" width="0.0689%" height="15" fill="rgb(220,164,20)" fg:x="1262" fg:w="1"/><text x="87.0146%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="86.9146%" y="373" width="0.0689%" height="15" fill="rgb(222,203,48)" fg:x="1262" fg:w="1"/><text x="87.0146%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="86.9146%" y="357" width="0.0689%" height="15" fill="rgb(215,159,22)" fg:x="1262" fg:w="1"/><text x="87.0146%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="86.9146%" y="341" width="0.0689%" height="15" fill="rgb(216,183,47)" fg:x="1262" fg:w="1"/><text x="87.0146%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="86.9835%" y="469" width="0.0689%" height="15" fill="rgb(229,195,25)" fg:x="1263" fg:w="1"/><text x="87.0835%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="87.3967%" y="213" width="0.0689%" height="15" fill="rgb(224,132,51)" fg:x="1269" fg:w="1"/><text x="87.4967%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="87.3967%" y="197" width="0.0689%" height="15" fill="rgb(240,63,7)" fg:x="1269" fg:w="1"/><text x="87.4967%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="87.3967%" y="181" width="0.0689%" height="15" fill="rgb(249,182,41)" fg:x="1269" fg:w="1"/><text x="87.4967%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="87.3967%" y="165" width="0.0689%" height="15" fill="rgb(243,47,26)" fg:x="1269" fg:w="1"/><text x="87.4967%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="87.3967%" y="149" width="0.0689%" height="15" fill="rgb(233,48,2)" fg:x="1269" fg:w="1"/><text x="87.4967%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="87.3967%" y="133" width="0.0689%" height="15" fill="rgb(244,165,34)" fg:x="1269" fg:w="1"/><text x="87.4967%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="87.3967%" y="117" width="0.0689%" height="15" fill="rgb(207,89,7)" fg:x="1269" fg:w="1"/><text x="87.4967%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="87.3967%" y="101" width="0.0689%" height="15" fill="rgb(244,117,36)" fg:x="1269" fg:w="1"/><text x="87.4967%" y="111.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="87.4656%" y="213" width="0.0689%" height="15" fill="rgb(226,144,34)" fg:x="1270" fg:w="1"/><text x="87.5656%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.21%)</title><rect x="87.3967%" y="309" width="0.2066%" height="15" fill="rgb(213,23,19)" fg:x="1269" fg:w="3"/><text x="87.4967%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.21%)</title><rect x="87.3967%" y="293" width="0.2066%" height="15" fill="rgb(217,75,12)" fg:x="1269" fg:w="3"/><text x="87.4967%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.21%)</title><rect x="87.3967%" y="277" width="0.2066%" height="15" fill="rgb(224,159,17)" fg:x="1269" fg:w="3"/><text x="87.4967%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.21%)</title><rect x="87.3967%" y="261" width="0.2066%" height="15" fill="rgb(217,118,1)" fg:x="1269" fg:w="3"/><text x="87.4967%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.21%)</title><rect x="87.3967%" y="245" width="0.2066%" height="15" fill="rgb(232,180,48)" fg:x="1269" fg:w="3"/><text x="87.4967%" y="255.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.21%)</title><rect x="87.3967%" y="229" width="0.2066%" height="15" fill="rgb(230,27,33)" fg:x="1269" fg:w="3"/><text x="87.4967%" y="239.50"></text></g><g><title>__rust_alloc (1 samples, 0.07%)</title><rect x="87.5344%" y="213" width="0.0689%" height="15" fill="rgb(205,31,21)" fg:x="1271" fg:w="1"/><text x="87.6344%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.28%)</title><rect x="87.3967%" y="389" width="0.2755%" height="15" fill="rgb(253,59,4)" fg:x="1269" fg:w="4"/><text x="87.4967%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.28%)</title><rect x="87.3967%" y="373" width="0.2755%" height="15" fill="rgb(224,201,9)" fg:x="1269" fg:w="4"/><text x="87.4967%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.28%)</title><rect x="87.3967%" y="357" width="0.2755%" height="15" fill="rgb(229,206,30)" fg:x="1269" fg:w="4"/><text x="87.4967%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.28%)</title><rect x="87.3967%" y="341" width="0.2755%" height="15" fill="rgb(212,67,47)" fg:x="1269" fg:w="4"/><text x="87.4967%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.28%)</title><rect x="87.3967%" y="325" width="0.2755%" height="15" fill="rgb(211,96,50)" fg:x="1269" fg:w="4"/><text x="87.4967%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.07%)</title><rect x="87.6033%" y="309" width="0.0689%" height="15" fill="rgb(252,114,18)" fg:x="1272" fg:w="1"/><text x="87.7033%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="87.6033%" y="293" width="0.0689%" height="15" fill="rgb(223,58,37)" fg:x="1272" fg:w="1"/><text x="87.7033%" y="303.50"></text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="87.6033%" y="277" width="0.0689%" height="15" fill="rgb(237,70,4)" fg:x="1272" fg:w="1"/><text x="87.7033%" y="287.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseElementSimple&lt;Item&gt; as itertools::intersperse::IntersperseElement&lt;Item&gt;&gt;::generate (5 samples, 0.34%)</title><rect x="87.3967%" y="405" width="0.3444%" height="15" fill="rgb(244,85,46)" fg:x="1269" fg:w="5"/><text x="87.4967%" y="415.50"></text></g><g><title>__GI___libc_free (1 samples, 0.07%)</title><rect x="87.6722%" y="389" width="0.0689%" height="15" fill="rgb(223,39,52)" fg:x="1273" fg:w="1"/><text x="87.7722%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="87.7410%" y="325" width="0.0689%" height="15" fill="rgb(218,200,14)" fg:x="1274" fg:w="1"/><text x="87.8410%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.07%)</title><rect x="87.8099%" y="277" width="0.0689%" height="15" fill="rgb(208,171,16)" fg:x="1275" fg:w="1"/><text x="87.9099%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity (1 samples, 0.07%)</title><rect x="87.8099%" y="261" width="0.0689%" height="15" fill="rgb(234,200,18)" fg:x="1275" fg:w="1"/><text x="87.9099%" y="271.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.07%)</title><rect x="87.8788%" y="245" width="0.0689%" height="15" fill="rgb(228,45,11)" fg:x="1276" fg:w="1"/><text x="87.9788%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.14%)</title><rect x="87.8788%" y="277" width="0.1377%" height="15" fill="rgb(237,182,11)" fg:x="1276" fg:w="2"/><text x="87.9788%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.14%)</title><rect x="87.8788%" y="261" width="0.1377%" height="15" fill="rgb(241,175,49)" fg:x="1276" fg:w="2"/><text x="87.9788%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="87.9477%" y="245" width="0.0689%" height="15" fill="rgb(247,38,35)" fg:x="1277" fg:w="1"/><text x="88.0477%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="87.9477%" y="229" width="0.0689%" height="15" fill="rgb(228,39,49)" fg:x="1277" fg:w="1"/><text x="88.0477%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="87.9477%" y="213" width="0.0689%" height="15" fill="rgb(226,101,26)" fg:x="1277" fg:w="1"/><text x="88.0477%" y="223.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="87.9477%" y="197" width="0.0689%" height="15" fill="rgb(206,141,19)" fg:x="1277" fg:w="1"/><text x="88.0477%" y="207.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.07%)</title><rect x="87.9477%" y="181" width="0.0689%" height="15" fill="rgb(211,200,13)" fg:x="1277" fg:w="1"/><text x="88.0477%" y="191.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (1 samples, 0.07%)</title><rect x="87.9477%" y="165" width="0.0689%" height="15" fill="rgb(241,121,6)" fg:x="1277" fg:w="1"/><text x="88.0477%" y="175.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.07%)</title><rect x="87.9477%" y="149" width="0.0689%" height="15" fill="rgb(234,221,29)" fg:x="1277" fg:w="1"/><text x="88.0477%" y="159.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.07%)</title><rect x="87.9477%" y="133" width="0.0689%" height="15" fill="rgb(229,136,5)" fg:x="1277" fg:w="1"/><text x="88.0477%" y="143.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.07%)</title><rect x="87.9477%" y="117" width="0.0689%" height="15" fill="rgb(238,36,11)" fg:x="1277" fg:w="1"/><text x="88.0477%" y="127.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.07%)</title><rect x="87.9477%" y="101" width="0.0689%" height="15" fill="rgb(251,55,41)" fg:x="1277" fg:w="1"/><text x="88.0477%" y="111.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.07%)</title><rect x="87.9477%" y="85" width="0.0689%" height="15" fill="rgb(242,34,40)" fg:x="1277" fg:w="1"/><text x="88.0477%" y="95.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.07%)</title><rect x="87.9477%" y="69" width="0.0689%" height="15" fill="rgb(215,42,17)" fg:x="1277" fg:w="1"/><text x="88.0477%" y="79.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.07%)</title><rect x="87.9477%" y="53" width="0.0689%" height="15" fill="rgb(207,44,46)" fg:x="1277" fg:w="1"/><text x="88.0477%" y="63.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.28%)</title><rect x="87.8099%" y="309" width="0.2755%" height="15" fill="rgb(211,206,28)" fg:x="1275" fg:w="4"/><text x="87.9099%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.28%)</title><rect x="87.8099%" y="293" width="0.2755%" height="15" fill="rgb(237,167,16)" fg:x="1275" fg:w="4"/><text x="87.9099%" y="303.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_contains (1 samples, 0.07%)</title><rect x="88.0165%" y="277" width="0.0689%" height="15" fill="rgb(233,66,6)" fg:x="1278" fg:w="1"/><text x="88.1165%" y="287.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.07%)</title><rect x="88.0165%" y="261" width="0.0689%" height="15" fill="rgb(246,123,29)" fg:x="1278" fg:w="1"/><text x="88.1165%" y="271.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.07%)</title><rect x="88.0165%" y="245" width="0.0689%" height="15" fill="rgb(209,62,40)" fg:x="1278" fg:w="1"/><text x="88.1165%" y="255.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.07%)</title><rect x="88.0165%" y="229" width="0.0689%" height="15" fill="rgb(218,4,25)" fg:x="1278" fg:w="1"/><text x="88.1165%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.07%)</title><rect x="88.0165%" y="213" width="0.0689%" height="15" fill="rgb(253,91,49)" fg:x="1278" fg:w="1"/><text x="88.1165%" y="223.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.07%)</title><rect x="88.0165%" y="197" width="0.0689%" height="15" fill="rgb(228,155,29)" fg:x="1278" fg:w="1"/><text x="88.1165%" y="207.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.07%)</title><rect x="88.0165%" y="181" width="0.0689%" height="15" fill="rgb(243,57,37)" fg:x="1278" fg:w="1"/><text x="88.1165%" y="191.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.07%)</title><rect x="88.0165%" y="165" width="0.0689%" height="15" fill="rgb(244,167,17)" fg:x="1278" fg:w="1"/><text x="88.1165%" y="175.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.07%)</title><rect x="88.0165%" y="149" width="0.0689%" height="15" fill="rgb(207,181,38)" fg:x="1278" fg:w="1"/><text x="88.1165%" y="159.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.07%)</title><rect x="88.0165%" y="133" width="0.0689%" height="15" fill="rgb(211,8,23)" fg:x="1278" fg:w="1"/><text x="88.1165%" y="143.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="88.0165%" y="117" width="0.0689%" height="15" fill="rgb(235,11,44)" fg:x="1278" fg:w="1"/><text x="88.1165%" y="127.50"></text></g><g><title>alloc::string::String::push_str (7 samples, 0.48%)</title><rect x="87.7410%" y="373" width="0.4821%" height="15" fill="rgb(248,18,52)" fg:x="1274" fg:w="7"/><text x="87.8410%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (7 samples, 0.48%)</title><rect x="87.7410%" y="357" width="0.4821%" height="15" fill="rgb(208,4,7)" fg:x="1274" fg:w="7"/><text x="87.8410%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (7 samples, 0.48%)</title><rect x="87.7410%" y="341" width="0.4821%" height="15" fill="rgb(240,17,39)" fg:x="1274" fg:w="7"/><text x="87.8410%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (6 samples, 0.41%)</title><rect x="87.8099%" y="325" width="0.4132%" height="15" fill="rgb(207,170,3)" fg:x="1275" fg:w="6"/><text x="87.9099%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.14%)</title><rect x="88.0854%" y="309" width="0.1377%" height="15" fill="rgb(236,100,52)" fg:x="1279" fg:w="2"/><text x="88.1854%" y="319.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2 samples, 0.14%)</title><rect x="88.0854%" y="293" width="0.1377%" height="15" fill="rgb(246,78,51)" fg:x="1279" fg:w="2"/><text x="88.1854%" y="303.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.07%)</title><rect x="88.3609%" y="261" width="0.0689%" height="15" fill="rgb(211,17,15)" fg:x="1283" fg:w="1"/><text x="88.4609%" y="271.50"></text></g><g><title>__GI___libc_free (4 samples, 0.28%)</title><rect x="88.3609%" y="277" width="0.2755%" height="15" fill="rgb(209,59,46)" fg:x="1283" fg:w="4"/><text x="88.4609%" y="287.50"></text></g><g><title>_int_free (3 samples, 0.21%)</title><rect x="88.4298%" y="261" width="0.2066%" height="15" fill="rgb(210,92,25)" fg:x="1284" fg:w="3"/><text x="88.5298%" y="271.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="88.6364%" y="277" width="0.0689%" height="15" fill="rgb(238,174,52)" fg:x="1287" fg:w="1"/><text x="88.7364%" y="287.50"></text></g><g><title>tcache_get (1 samples, 0.07%)</title><rect x="88.6364%" y="261" width="0.0689%" height="15" fill="rgb(230,73,7)" fg:x="1287" fg:w="1"/><text x="88.7364%" y="271.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.07%)</title><rect x="88.7052%" y="277" width="0.0689%" height="15" fill="rgb(243,124,40)" fg:x="1288" fg:w="1"/><text x="88.8052%" y="287.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (26 samples, 1.79%)</title><rect x="87.0523%" y="421" width="1.7906%" height="15" fill="rgb(244,170,11)" fg:x="1264" fg:w="26"/><text x="87.1523%" y="431.50">&lt;iter..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (16 samples, 1.10%)</title><rect x="87.7410%" y="405" width="1.1019%" height="15" fill="rgb(207,114,54)" fg:x="1274" fg:w="16"/><text x="87.8410%" y="415.50">co..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (16 samples, 1.10%)</title><rect x="87.7410%" y="389" width="1.1019%" height="15" fill="rgb(205,42,20)" fg:x="1274" fg:w="16"/><text x="87.8410%" y="399.50">&lt;a..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (9 samples, 0.62%)</title><rect x="88.2231%" y="373" width="0.6198%" height="15" fill="rgb(230,30,28)" fg:x="1281" fg:w="9"/><text x="88.3231%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (9 samples, 0.62%)</title><rect x="88.2231%" y="357" width="0.6198%" height="15" fill="rgb(205,73,54)" fg:x="1281" fg:w="9"/><text x="88.3231%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (9 samples, 0.62%)</title><rect x="88.2231%" y="341" width="0.6198%" height="15" fill="rgb(254,227,23)" fg:x="1281" fg:w="9"/><text x="88.3231%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.62%)</title><rect x="88.2231%" y="325" width="0.6198%" height="15" fill="rgb(228,202,34)" fg:x="1281" fg:w="9"/><text x="88.3231%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.48%)</title><rect x="88.3609%" y="309" width="0.4821%" height="15" fill="rgb(222,225,37)" fg:x="1283" fg:w="7"/><text x="88.4609%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.48%)</title><rect x="88.3609%" y="293" width="0.4821%" height="15" fill="rgb(221,14,54)" fg:x="1283" fg:w="7"/><text x="88.4609%" y="303.50"></text></g><g><title>__rust_alloc (1 samples, 0.07%)</title><rect x="88.7741%" y="277" width="0.0689%" height="15" fill="rgb(254,102,2)" fg:x="1289" fg:w="1"/><text x="88.8741%" y="287.50"></text></g><g><title>day_12::dfs::path_to_string (31 samples, 2.13%)</title><rect x="86.9146%" y="581" width="2.1350%" height="15" fill="rgb(232,104,17)" fg:x="1262" fg:w="31"/><text x="87.0146%" y="591.50">day_12:..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (31 samples, 2.13%)</title><rect x="86.9146%" y="565" width="2.1350%" height="15" fill="rgb(250,220,14)" fg:x="1262" fg:w="31"/><text x="87.0146%" y="575.50">core::i..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (31 samples, 2.13%)</title><rect x="86.9146%" y="549" width="2.1350%" height="15" fill="rgb(241,158,9)" fg:x="1262" fg:w="31"/><text x="87.0146%" y="559.50">&lt;alloc:..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (31 samples, 2.13%)</title><rect x="86.9146%" y="533" width="2.1350%" height="15" fill="rgb(246,9,43)" fg:x="1262" fg:w="31"/><text x="87.0146%" y="543.50">&lt;alloc:..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (31 samples, 2.13%)</title><rect x="86.9146%" y="517" width="2.1350%" height="15" fill="rgb(206,73,33)" fg:x="1262" fg:w="31"/><text x="87.0146%" y="527.50">core::i..</text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30 samples, 2.07%)</title><rect x="86.9835%" y="501" width="2.0661%" height="15" fill="rgb(222,79,8)" fg:x="1263" fg:w="30"/><text x="87.0835%" y="511.50">&lt;itert..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30 samples, 2.07%)</title><rect x="86.9835%" y="485" width="2.0661%" height="15" fill="rgb(234,8,54)" fg:x="1263" fg:w="30"/><text x="87.0835%" y="495.50">&lt;core:..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (29 samples, 2.00%)</title><rect x="87.0523%" y="469" width="1.9972%" height="15" fill="rgb(209,134,38)" fg:x="1264" fg:w="29"/><text x="87.1523%" y="479.50">&lt;core:..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (29 samples, 2.00%)</title><rect x="87.0523%" y="453" width="1.9972%" height="15" fill="rgb(230,127,29)" fg:x="1264" fg:w="29"/><text x="87.1523%" y="463.50">core::..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (29 samples, 2.00%)</title><rect x="87.0523%" y="437" width="1.9972%" height="15" fill="rgb(242,44,41)" fg:x="1264" fg:w="29"/><text x="87.1523%" y="447.50">core::..</text></g><g><title>day_12::dfs::path_to_string::{{closure}} (3 samples, 0.21%)</title><rect x="88.8430%" y="421" width="0.2066%" height="15" fill="rgb(222,56,43)" fg:x="1290" fg:w="3"/><text x="88.9430%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="88.9118%" y="405" width="0.1377%" height="15" fill="rgb(238,39,47)" fg:x="1291" fg:w="2"/><text x="89.0118%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="88.9118%" y="389" width="0.1377%" height="15" fill="rgb(226,79,43)" fg:x="1291" fg:w="2"/><text x="89.0118%" y="399.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.14%)</title><rect x="88.9118%" y="373" width="0.1377%" height="15" fill="rgb(242,105,53)" fg:x="1291" fg:w="2"/><text x="89.0118%" y="383.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.14%)</title><rect x="88.9118%" y="357" width="0.1377%" height="15" fill="rgb(251,132,46)" fg:x="1291" fg:w="2"/><text x="89.0118%" y="367.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.14%)</title><rect x="88.9118%" y="341" width="0.1377%" height="15" fill="rgb(231,77,14)" fg:x="1291" fg:w="2"/><text x="89.0118%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.14%)</title><rect x="88.9118%" y="325" width="0.1377%" height="15" fill="rgb(240,135,9)" fg:x="1291" fg:w="2"/><text x="89.0118%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.14%)</title><rect x="88.9118%" y="309" width="0.1377%" height="15" fill="rgb(248,109,14)" fg:x="1291" fg:w="2"/><text x="89.0118%" y="319.50"></text></g><g><title>__memcpy_evex_unaligned_erms (2 samples, 0.14%)</title><rect x="88.9118%" y="293" width="0.1377%" height="15" fill="rgb(227,146,52)" fg:x="1291" fg:w="2"/><text x="89.0118%" y="303.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_contains (32 samples, 2.20%)</title><rect x="86.9146%" y="597" width="2.2039%" height="15" fill="rgb(232,54,3)" fg:x="1262" fg:w="32"/><text x="87.0146%" y="607.50">day_12:..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.07%)</title><rect x="89.0496%" y="581" width="0.0689%" height="15" fill="rgb(229,201,43)" fg:x="1293" fg:w="1"/><text x="89.1496%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.07%)</title><rect x="89.0496%" y="565" width="0.0689%" height="15" fill="rgb(252,161,33)" fg:x="1293" fg:w="1"/><text x="89.1496%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.07%)</title><rect x="89.0496%" y="549" width="0.0689%" height="15" fill="rgb(226,146,40)" fg:x="1293" fg:w="1"/><text x="89.1496%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.07%)</title><rect x="89.0496%" y="533" width="0.0689%" height="15" fill="rgb(219,47,25)" fg:x="1293" fg:w="1"/><text x="89.1496%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.07%)</title><rect x="89.0496%" y="517" width="0.0689%" height="15" fill="rgb(250,135,13)" fg:x="1293" fg:w="1"/><text x="89.1496%" y="527.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="89.0496%" y="501" width="0.0689%" height="15" fill="rgb(219,229,18)" fg:x="1293" fg:w="1"/><text x="89.1496%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.07%)</title><rect x="89.0496%" y="485" width="0.0689%" height="15" fill="rgb(217,152,27)" fg:x="1293" fg:w="1"/><text x="89.1496%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.07%)</title><rect x="89.0496%" y="469" width="0.0689%" height="15" fill="rgb(225,71,47)" fg:x="1293" fg:w="1"/><text x="89.1496%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.07%)</title><rect x="89.0496%" y="453" width="0.0689%" height="15" fill="rgb(220,139,14)" fg:x="1293" fg:w="1"/><text x="89.1496%" y="463.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="89.0496%" y="437" width="0.0689%" height="15" fill="rgb(247,54,32)" fg:x="1293" fg:w="1"/><text x="89.1496%" y="447.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="89.0496%" y="421" width="0.0689%" height="15" fill="rgb(252,131,39)" fg:x="1293" fg:w="1"/><text x="89.1496%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="89.0496%" y="405" width="0.0689%" height="15" fill="rgb(210,108,39)" fg:x="1293" fg:w="1"/><text x="89.1496%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="89.0496%" y="389" width="0.0689%" height="15" fill="rgb(205,23,29)" fg:x="1293" fg:w="1"/><text x="89.1496%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.07%)</title><rect x="89.0496%" y="373" width="0.0689%" height="15" fill="rgb(246,139,46)" fg:x="1293" fg:w="1"/><text x="89.1496%" y="383.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.07%)</title><rect x="89.0496%" y="357" width="0.0689%" height="15" fill="rgb(250,81,26)" fg:x="1293" fg:w="1"/><text x="89.1496%" y="367.50"></text></g><g><title>day_12::dfs::path_to_string (2 samples, 0.14%)</title><rect x="89.1185%" y="581" width="0.1377%" height="15" fill="rgb(214,104,7)" fg:x="1294" fg:w="2"/><text x="89.2185%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.14%)</title><rect x="89.1185%" y="565" width="0.1377%" height="15" fill="rgb(233,189,8)" fg:x="1294" fg:w="2"/><text x="89.2185%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="89.1185%" y="549" width="0.1377%" height="15" fill="rgb(228,141,17)" fg:x="1294" fg:w="2"/><text x="89.2185%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (2 samples, 0.14%)</title><rect x="89.1185%" y="533" width="0.1377%" height="15" fill="rgb(247,157,1)" fg:x="1294" fg:w="2"/><text x="89.2185%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.14%)</title><rect x="89.1185%" y="517" width="0.1377%" height="15" fill="rgb(249,225,5)" fg:x="1294" fg:w="2"/><text x="89.2185%" y="527.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.14%)</title><rect x="89.1185%" y="501" width="0.1377%" height="15" fill="rgb(242,55,13)" fg:x="1294" fg:w="2"/><text x="89.2185%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.14%)</title><rect x="89.1185%" y="485" width="0.1377%" height="15" fill="rgb(230,49,50)" fg:x="1294" fg:w="2"/><text x="89.2185%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.14%)</title><rect x="89.1185%" y="469" width="0.1377%" height="15" fill="rgb(241,111,38)" fg:x="1294" fg:w="2"/><text x="89.2185%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.14%)</title><rect x="89.1185%" y="453" width="0.1377%" height="15" fill="rgb(252,155,4)" fg:x="1294" fg:w="2"/><text x="89.2185%" y="463.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.14%)</title><rect x="89.1185%" y="437" width="0.1377%" height="15" fill="rgb(212,69,32)" fg:x="1294" fg:w="2"/><text x="89.2185%" y="447.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (2 samples, 0.14%)</title><rect x="89.1185%" y="421" width="0.1377%" height="15" fill="rgb(243,107,47)" fg:x="1294" fg:w="2"/><text x="89.2185%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.14%)</title><rect x="89.1185%" y="405" width="0.1377%" height="15" fill="rgb(247,130,12)" fg:x="1294" fg:w="2"/><text x="89.2185%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (2 samples, 0.14%)</title><rect x="89.1185%" y="389" width="0.1377%" height="15" fill="rgb(233,74,16)" fg:x="1294" fg:w="2"/><text x="89.2185%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.14%)</title><rect x="89.1185%" y="373" width="0.1377%" height="15" fill="rgb(208,58,18)" fg:x="1294" fg:w="2"/><text x="89.2185%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.14%)</title><rect x="89.1185%" y="357" width="0.1377%" height="15" fill="rgb(242,225,1)" fg:x="1294" fg:w="2"/><text x="89.2185%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.14%)</title><rect x="89.1185%" y="341" width="0.1377%" height="15" fill="rgb(249,39,40)" fg:x="1294" fg:w="2"/><text x="89.2185%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.14%)</title><rect x="89.1185%" y="325" width="0.1377%" height="15" fill="rgb(207,72,44)" fg:x="1294" fg:w="2"/><text x="89.2185%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.14%)</title><rect x="89.1185%" y="309" width="0.1377%" height="15" fill="rgb(215,193,12)" fg:x="1294" fg:w="2"/><text x="89.2185%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.14%)</title><rect x="89.1185%" y="293" width="0.1377%" height="15" fill="rgb(248,41,39)" fg:x="1294" fg:w="2"/><text x="89.2185%" y="303.50"></text></g><g><title>__GI___libc_free (1 samples, 0.07%)</title><rect x="89.1873%" y="277" width="0.0689%" height="15" fill="rgb(253,85,4)" fg:x="1295" fg:w="1"/><text x="89.2873%" y="287.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="89.1873%" y="261" width="0.0689%" height="15" fill="rgb(243,70,31)" fg:x="1295" fg:w="1"/><text x="89.2873%" y="271.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.07%)</title><rect x="89.1873%" y="245" width="0.0689%" height="15" fill="rgb(253,195,26)" fg:x="1295" fg:w="1"/><text x="89.2873%" y="255.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.07%)</title><rect x="89.1873%" y="229" width="0.0689%" height="15" fill="rgb(243,42,11)" fg:x="1295" fg:w="1"/><text x="89.2873%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.07%)</title><rect x="89.1873%" y="213" width="0.0689%" height="15" fill="rgb(239,66,17)" fg:x="1295" fg:w="1"/><text x="89.2873%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.07%)</title><rect x="89.1873%" y="197" width="0.0689%" height="15" fill="rgb(217,132,21)" fg:x="1295" fg:w="1"/><text x="89.2873%" y="207.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.07%)</title><rect x="89.1873%" y="181" width="0.0689%" height="15" fill="rgb(252,202,21)" fg:x="1295" fg:w="1"/><text x="89.2873%" y="191.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_push (3 samples, 0.21%)</title><rect x="89.1185%" y="597" width="0.2066%" height="15" fill="rgb(233,98,36)" fg:x="1294" fg:w="3"/><text x="89.2185%" y="607.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.07%)</title><rect x="89.2562%" y="581" width="0.0689%" height="15" fill="rgb(216,153,54)" fg:x="1296" fg:w="1"/><text x="89.3562%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="89.2562%" y="565" width="0.0689%" height="15" fill="rgb(250,99,7)" fg:x="1296" fg:w="1"/><text x="89.3562%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.07%)</title><rect x="89.2562%" y="549" width="0.0689%" height="15" fill="rgb(207,56,50)" fg:x="1296" fg:w="1"/><text x="89.3562%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="89.2562%" y="533" width="0.0689%" height="15" fill="rgb(244,61,34)" fg:x="1296" fg:w="1"/><text x="89.3562%" y="543.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="89.3251%" y="181" width="0.0689%" height="15" fill="rgb(241,50,38)" fg:x="1297" fg:w="1"/><text x="89.4251%" y="191.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.07%)</title><rect x="89.3939%" y="181" width="0.0689%" height="15" fill="rgb(212,166,30)" fg:x="1298" fg:w="1"/><text x="89.4939%" y="191.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.21%)</title><rect x="89.3251%" y="581" width="0.2066%" height="15" fill="rgb(249,127,32)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.21%)</title><rect x="89.3251%" y="565" width="0.2066%" height="15" fill="rgb(209,103,0)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="575.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (3 samples, 0.21%)</title><rect x="89.3251%" y="549" width="0.2066%" height="15" fill="rgb(238,209,51)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="559.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (3 samples, 0.21%)</title><rect x="89.3251%" y="533" width="0.2066%" height="15" fill="rgb(237,56,23)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.21%)</title><rect x="89.3251%" y="517" width="0.2066%" height="15" fill="rgb(215,153,46)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (3 samples, 0.21%)</title><rect x="89.3251%" y="501" width="0.2066%" height="15" fill="rgb(224,49,31)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.21%)</title><rect x="89.3251%" y="485" width="0.2066%" height="15" fill="rgb(250,18,42)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="495.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (3 samples, 0.21%)</title><rect x="89.3251%" y="469" width="0.2066%" height="15" fill="rgb(215,176,39)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="479.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}} (3 samples, 0.21%)</title><rect x="89.3251%" y="453" width="0.2066%" height="15" fill="rgb(223,77,29)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (3 samples, 0.21%)</title><rect x="89.3251%" y="437" width="0.2066%" height="15" fill="rgb(234,94,52)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (3 samples, 0.21%)</title><rect x="89.3251%" y="421" width="0.2066%" height="15" fill="rgb(220,154,50)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="431.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (3 samples, 0.21%)</title><rect x="89.3251%" y="405" width="0.2066%" height="15" fill="rgb(212,11,10)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.21%)</title><rect x="89.3251%" y="389" width="0.2066%" height="15" fill="rgb(205,166,19)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.21%)</title><rect x="89.3251%" y="373" width="0.2066%" height="15" fill="rgb(244,198,16)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="383.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.21%)</title><rect x="89.3251%" y="357" width="0.2066%" height="15" fill="rgb(219,69,12)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (3 samples, 0.21%)</title><rect x="89.3251%" y="341" width="0.2066%" height="15" fill="rgb(245,30,7)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="351.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}}::{{closure}} (3 samples, 0.21%)</title><rect x="89.3251%" y="325" width="0.2066%" height="15" fill="rgb(218,221,48)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.21%)</title><rect x="89.3251%" y="309" width="0.2066%" height="15" fill="rgb(216,66,15)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.21%)</title><rect x="89.3251%" y="293" width="0.2066%" height="15" fill="rgb(226,122,50)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="303.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEqIdent&lt;T&gt;&gt;::eq (3 samples, 0.21%)</title><rect x="89.3251%" y="277" width="0.2066%" height="15" fill="rgb(239,156,16)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="287.50"></text></g><g><title>&lt;day_12::node::Node as core::cmp::PartialEq&gt;::eq (3 samples, 0.21%)</title><rect x="89.3251%" y="261" width="0.2066%" height="15" fill="rgb(224,27,38)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (3 samples, 0.21%)</title><rect x="89.3251%" y="245" width="0.2066%" height="15" fill="rgb(224,39,27)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="255.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (3 samples, 0.21%)</title><rect x="89.3251%" y="229" width="0.2066%" height="15" fill="rgb(215,92,29)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="239.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.21%)</title><rect x="89.3251%" y="213" width="0.2066%" height="15" fill="rgb(207,159,16)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="223.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.21%)</title><rect x="89.3251%" y="197" width="0.2066%" height="15" fill="rgb(238,163,47)" fg:x="1297" fg:w="3"/><text x="89.4251%" y="207.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.07%)</title><rect x="89.4628%" y="181" width="0.0689%" height="15" fill="rgb(219,91,49)" fg:x="1299" fg:w="1"/><text x="89.5628%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.07%)</title><rect x="89.5317%" y="549" width="0.0689%" height="15" fill="rgb(227,167,31)" fg:x="1300" fg:w="1"/><text x="89.6317%" y="559.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.07%)</title><rect x="89.5317%" y="533" width="0.0689%" height="15" fill="rgb(234,80,54)" fg:x="1300" fg:w="1"/><text x="89.6317%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.07%)</title><rect x="89.5317%" y="517" width="0.0689%" height="15" fill="rgb(212,114,2)" fg:x="1300" fg:w="1"/><text x="89.6317%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.07%)</title><rect x="89.5317%" y="501" width="0.0689%" height="15" fill="rgb(234,50,24)" fg:x="1300" fg:w="1"/><text x="89.6317%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="89.5317%" y="485" width="0.0689%" height="15" fill="rgb(221,68,8)" fg:x="1300" fg:w="1"/><text x="89.6317%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="89.5317%" y="469" width="0.0689%" height="15" fill="rgb(254,180,31)" fg:x="1300" fg:w="1"/><text x="89.6317%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="89.5317%" y="453" width="0.0689%" height="15" fill="rgb(247,130,50)" fg:x="1300" fg:w="1"/><text x="89.6317%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="89.5317%" y="437" width="0.0689%" height="15" fill="rgb(211,109,4)" fg:x="1300" fg:w="1"/><text x="89.6317%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="89.5317%" y="421" width="0.0689%" height="15" fill="rgb(238,50,21)" fg:x="1300" fg:w="1"/><text x="89.6317%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="89.5317%" y="405" width="0.0689%" height="15" fill="rgb(225,57,45)" fg:x="1300" fg:w="1"/><text x="89.6317%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="89.5317%" y="389" width="0.0689%" height="15" fill="rgb(209,196,50)" fg:x="1300" fg:w="1"/><text x="89.6317%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="89.5317%" y="373" width="0.0689%" height="15" fill="rgb(242,140,13)" fg:x="1300" fg:w="1"/><text x="89.6317%" y="383.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="89.5317%" y="357" width="0.0689%" height="15" fill="rgb(217,111,7)" fg:x="1300" fg:w="1"/><text x="89.6317%" y="367.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="89.5317%" y="341" width="0.0689%" height="15" fill="rgb(253,193,51)" fg:x="1300" fg:w="1"/><text x="89.6317%" y="351.50"></text></g><g><title>tcache_get (1 samples, 0.07%)</title><rect x="89.5317%" y="325" width="0.0689%" height="15" fill="rgb(252,70,29)" fg:x="1300" fg:w="1"/><text x="89.6317%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="89.6006%" y="453" width="0.0689%" height="15" fill="rgb(232,127,12)" fg:x="1301" fg:w="1"/><text x="89.7006%" y="463.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="89.6006%" y="437" width="0.0689%" height="15" fill="rgb(211,180,21)" fg:x="1301" fg:w="1"/><text x="89.7006%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.07%)</title><rect x="89.6006%" y="421" width="0.0689%" height="15" fill="rgb(229,72,13)" fg:x="1301" fg:w="1"/><text x="89.7006%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="89.8072%" y="197" width="0.0689%" height="15" fill="rgb(240,211,49)" fg:x="1304" fg:w="1"/><text x="89.9072%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="89.8072%" y="293" width="0.1377%" height="15" fill="rgb(219,149,40)" fg:x="1304" fg:w="2"/><text x="89.9072%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="89.8072%" y="277" width="0.1377%" height="15" fill="rgb(210,127,46)" fg:x="1304" fg:w="2"/><text x="89.9072%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.14%)</title><rect x="89.8072%" y="261" width="0.1377%" height="15" fill="rgb(220,106,7)" fg:x="1304" fg:w="2"/><text x="89.9072%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.14%)</title><rect x="89.8072%" y="245" width="0.1377%" height="15" fill="rgb(249,31,22)" fg:x="1304" fg:w="2"/><text x="89.9072%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.14%)</title><rect x="89.8072%" y="229" width="0.1377%" height="15" fill="rgb(253,1,49)" fg:x="1304" fg:w="2"/><text x="89.9072%" y="239.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.14%)</title><rect x="89.8072%" y="213" width="0.1377%" height="15" fill="rgb(227,144,33)" fg:x="1304" fg:w="2"/><text x="89.9072%" y="223.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.07%)</title><rect x="89.8760%" y="197" width="0.0689%" height="15" fill="rgb(249,163,44)" fg:x="1305" fg:w="1"/><text x="89.9760%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.21%)</title><rect x="89.8072%" y="373" width="0.2066%" height="15" fill="rgb(234,15,39)" fg:x="1304" fg:w="3"/><text x="89.9072%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.21%)</title><rect x="89.8072%" y="357" width="0.2066%" height="15" fill="rgb(207,66,16)" fg:x="1304" fg:w="3"/><text x="89.9072%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.21%)</title><rect x="89.8072%" y="341" width="0.2066%" height="15" fill="rgb(233,112,24)" fg:x="1304" fg:w="3"/><text x="89.9072%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.21%)</title><rect x="89.8072%" y="325" width="0.2066%" height="15" fill="rgb(230,90,22)" fg:x="1304" fg:w="3"/><text x="89.9072%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.21%)</title><rect x="89.8072%" y="309" width="0.2066%" height="15" fill="rgb(229,61,13)" fg:x="1304" fg:w="3"/><text x="89.9072%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.07%)</title><rect x="89.9449%" y="293" width="0.0689%" height="15" fill="rgb(225,57,24)" fg:x="1306" fg:w="1"/><text x="90.0449%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="89.9449%" y="277" width="0.0689%" height="15" fill="rgb(208,169,48)" fg:x="1306" fg:w="1"/><text x="90.0449%" y="287.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.07%)</title><rect x="89.9449%" y="261" width="0.0689%" height="15" fill="rgb(244,218,51)" fg:x="1306" fg:w="1"/><text x="90.0449%" y="271.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="90.0138%" y="373" width="0.0689%" height="15" fill="rgb(214,148,10)" fg:x="1307" fg:w="1"/><text x="90.1138%" y="383.50"></text></g><g><title>tcache_get (1 samples, 0.07%)</title><rect x="90.0138%" y="357" width="0.0689%" height="15" fill="rgb(225,174,27)" fg:x="1307" fg:w="1"/><text x="90.1138%" y="367.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseElementSimple&lt;Item&gt; as itertools::intersperse::IntersperseElement&lt;Item&gt;&gt;::generate (6 samples, 0.41%)</title><rect x="89.8072%" y="389" width="0.4132%" height="15" fill="rgb(230,96,26)" fg:x="1304" fg:w="6"/><text x="89.9072%" y="399.50"></text></g><g><title>__memcmp_evex_movbe (2 samples, 0.14%)</title><rect x="90.0826%" y="373" width="0.1377%" height="15" fill="rgb(232,10,30)" fg:x="1308" fg:w="2"/><text x="90.1826%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="90.2204%" y="293" width="0.0689%" height="15" fill="rgb(222,8,50)" fg:x="1310" fg:w="1"/><text x="90.3204%" y="303.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.14%)</title><rect x="90.2204%" y="357" width="0.1377%" height="15" fill="rgb(213,81,27)" fg:x="1310" fg:w="2"/><text x="90.3204%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.14%)</title><rect x="90.2204%" y="341" width="0.1377%" height="15" fill="rgb(245,50,10)" fg:x="1310" fg:w="2"/><text x="90.3204%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.14%)</title><rect x="90.2204%" y="325" width="0.1377%" height="15" fill="rgb(216,100,18)" fg:x="1310" fg:w="2"/><text x="90.3204%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.14%)</title><rect x="90.2204%" y="309" width="0.1377%" height="15" fill="rgb(236,147,54)" fg:x="1310" fg:w="2"/><text x="90.3204%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="90.2893%" y="293" width="0.0689%" height="15" fill="rgb(205,143,26)" fg:x="1311" fg:w="1"/><text x="90.3893%" y="303.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="90.2893%" y="277" width="0.0689%" height="15" fill="rgb(236,26,9)" fg:x="1311" fg:w="1"/><text x="90.3893%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="90.2893%" y="261" width="0.0689%" height="15" fill="rgb(221,165,53)" fg:x="1311" fg:w="1"/><text x="90.3893%" y="271.50"></text></g><g><title>__GI___libc_free (5 samples, 0.34%)</title><rect x="90.3581%" y="261" width="0.3444%" height="15" fill="rgb(214,110,17)" fg:x="1312" fg:w="5"/><text x="90.4581%" y="271.50"></text></g><g><title>_int_free (4 samples, 0.28%)</title><rect x="90.4270%" y="245" width="0.2755%" height="15" fill="rgb(237,197,12)" fg:x="1313" fg:w="4"/><text x="90.5270%" y="255.50"></text></g><g><title>tcache_put (1 samples, 0.07%)</title><rect x="90.6336%" y="229" width="0.0689%" height="15" fill="rgb(205,84,17)" fg:x="1316" fg:w="1"/><text x="90.7336%" y="239.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="90.7025%" y="261" width="0.0689%" height="15" fill="rgb(237,18,45)" fg:x="1317" fg:w="1"/><text x="90.8025%" y="271.50"></text></g><g><title>tcache_get (1 samples, 0.07%)</title><rect x="90.7025%" y="245" width="0.0689%" height="15" fill="rgb(221,87,14)" fg:x="1317" fg:w="1"/><text x="90.8025%" y="255.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (17 samples, 1.17%)</title><rect x="89.6694%" y="405" width="1.1708%" height="15" fill="rgb(238,186,15)" fg:x="1302" fg:w="17"/><text x="89.7694%" y="415.50">&lt;i..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (9 samples, 0.62%)</title><rect x="90.2204%" y="389" width="0.6198%" height="15" fill="rgb(208,115,11)" fg:x="1310" fg:w="9"/><text x="90.3204%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (9 samples, 0.62%)</title><rect x="90.2204%" y="373" width="0.6198%" height="15" fill="rgb(254,175,0)" fg:x="1310" fg:w="9"/><text x="90.3204%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (7 samples, 0.48%)</title><rect x="90.3581%" y="357" width="0.4821%" height="15" fill="rgb(227,24,42)" fg:x="1312" fg:w="7"/><text x="90.4581%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.48%)</title><rect x="90.3581%" y="341" width="0.4821%" height="15" fill="rgb(223,211,37)" fg:x="1312" fg:w="7"/><text x="90.4581%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.48%)</title><rect x="90.3581%" y="325" width="0.4821%" height="15" fill="rgb(235,49,27)" fg:x="1312" fg:w="7"/><text x="90.4581%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.48%)</title><rect x="90.3581%" y="309" width="0.4821%" height="15" fill="rgb(254,97,51)" fg:x="1312" fg:w="7"/><text x="90.4581%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.48%)</title><rect x="90.3581%" y="293" width="0.4821%" height="15" fill="rgb(249,51,40)" fg:x="1312" fg:w="7"/><text x="90.4581%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.48%)</title><rect x="90.3581%" y="277" width="0.4821%" height="15" fill="rgb(210,128,45)" fg:x="1312" fg:w="7"/><text x="90.4581%" y="287.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.07%)</title><rect x="90.7713%" y="261" width="0.0689%" height="15" fill="rgb(224,137,50)" fg:x="1318" fg:w="1"/><text x="90.8713%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="90.8402%" y="213" width="0.0689%" height="15" fill="rgb(242,15,9)" fg:x="1319" fg:w="1"/><text x="90.9402%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="90.8402%" y="197" width="0.0689%" height="15" fill="rgb(233,187,41)" fg:x="1319" fg:w="1"/><text x="90.9402%" y="207.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="90.8402%" y="181" width="0.0689%" height="15" fill="rgb(227,2,29)" fg:x="1319" fg:w="1"/><text x="90.9402%" y="191.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="90.8402%" y="165" width="0.0689%" height="15" fill="rgb(222,70,3)" fg:x="1319" fg:w="1"/><text x="90.9402%" y="175.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="90.8402%" y="149" width="0.0689%" height="15" fill="rgb(213,11,42)" fg:x="1319" fg:w="1"/><text x="90.9402%" y="159.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="90.8402%" y="133" width="0.0689%" height="15" fill="rgb(225,150,9)" fg:x="1319" fg:w="1"/><text x="90.9402%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="90.8402%" y="117" width="0.0689%" height="15" fill="rgb(230,162,45)" fg:x="1319" fg:w="1"/><text x="90.9402%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="90.8402%" y="101" width="0.0689%" height="15" fill="rgb(222,14,52)" fg:x="1319" fg:w="1"/><text x="90.9402%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="90.9091%" y="213" width="0.0689%" height="15" fill="rgb(254,198,14)" fg:x="1320" fg:w="1"/><text x="91.0091%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.21%)</title><rect x="90.8402%" y="309" width="0.2066%" height="15" fill="rgb(220,217,30)" fg:x="1319" fg:w="3"/><text x="90.9402%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.21%)</title><rect x="90.8402%" y="293" width="0.2066%" height="15" fill="rgb(215,146,41)" fg:x="1319" fg:w="3"/><text x="90.9402%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.21%)</title><rect x="90.8402%" y="277" width="0.2066%" height="15" fill="rgb(217,27,36)" fg:x="1319" fg:w="3"/><text x="90.9402%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.21%)</title><rect x="90.8402%" y="261" width="0.2066%" height="15" fill="rgb(219,218,39)" fg:x="1319" fg:w="3"/><text x="90.9402%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.21%)</title><rect x="90.8402%" y="245" width="0.2066%" height="15" fill="rgb(219,4,42)" fg:x="1319" fg:w="3"/><text x="90.9402%" y="255.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.21%)</title><rect x="90.8402%" y="229" width="0.2066%" height="15" fill="rgb(249,119,36)" fg:x="1319" fg:w="3"/><text x="90.9402%" y="239.50"></text></g><g><title>__GI___libc_free (1 samples, 0.07%)</title><rect x="90.9780%" y="213" width="0.0689%" height="15" fill="rgb(209,23,33)" fg:x="1321" fg:w="1"/><text x="91.0780%" y="223.50"></text></g><g><title>arena_for_chunk (1 samples, 0.07%)</title><rect x="90.9780%" y="197" width="0.0689%" height="15" fill="rgb(211,10,0)" fg:x="1321" fg:w="1"/><text x="91.0780%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (22 samples, 1.52%)</title><rect x="89.6006%" y="549" width="1.5152%" height="15" fill="rgb(208,99,37)" fg:x="1301" fg:w="22"/><text x="89.7006%" y="559.50">core..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (22 samples, 1.52%)</title><rect x="89.6006%" y="533" width="1.5152%" height="15" fill="rgb(213,132,31)" fg:x="1301" fg:w="22"/><text x="89.7006%" y="543.50">&lt;all..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (22 samples, 1.52%)</title><rect x="89.6006%" y="517" width="1.5152%" height="15" fill="rgb(243,129,40)" fg:x="1301" fg:w="22"/><text x="89.7006%" y="527.50">&lt;all..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (22 samples, 1.52%)</title><rect x="89.6006%" y="501" width="1.5152%" height="15" fill="rgb(210,66,33)" fg:x="1301" fg:w="22"/><text x="89.7006%" y="511.50">core..</text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 1.52%)</title><rect x="89.6006%" y="485" width="1.5152%" height="15" fill="rgb(209,189,4)" fg:x="1301" fg:w="22"/><text x="89.7006%" y="495.50">&lt;ite..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (22 samples, 1.52%)</title><rect x="89.6006%" y="469" width="1.5152%" height="15" fill="rgb(214,107,37)" fg:x="1301" fg:w="22"/><text x="89.7006%" y="479.50">&lt;cor..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (21 samples, 1.45%)</title><rect x="89.6694%" y="453" width="1.4463%" height="15" fill="rgb(245,88,54)" fg:x="1302" fg:w="21"/><text x="89.7694%" y="463.50">&lt;cor..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (21 samples, 1.45%)</title><rect x="89.6694%" y="437" width="1.4463%" height="15" fill="rgb(205,146,20)" fg:x="1302" fg:w="21"/><text x="89.7694%" y="447.50">core..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (21 samples, 1.45%)</title><rect x="89.6694%" y="421" width="1.4463%" height="15" fill="rgb(220,161,25)" fg:x="1302" fg:w="21"/><text x="89.7694%" y="431.50">core..</text></g><g><title>day_12::dfs::path_to_string::{{closure}} (4 samples, 0.28%)</title><rect x="90.8402%" y="405" width="0.2755%" height="15" fill="rgb(215,152,15)" fg:x="1319" fg:w="4"/><text x="90.9402%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (4 samples, 0.28%)</title><rect x="90.8402%" y="389" width="0.2755%" height="15" fill="rgb(233,192,44)" fg:x="1319" fg:w="4"/><text x="90.9402%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.28%)</title><rect x="90.8402%" y="373" width="0.2755%" height="15" fill="rgb(240,170,46)" fg:x="1319" fg:w="4"/><text x="90.9402%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.28%)</title><rect x="90.8402%" y="357" width="0.2755%" height="15" fill="rgb(207,104,33)" fg:x="1319" fg:w="4"/><text x="90.9402%" y="367.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.28%)</title><rect x="90.8402%" y="341" width="0.2755%" height="15" fill="rgb(219,21,39)" fg:x="1319" fg:w="4"/><text x="90.9402%" y="351.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.28%)</title><rect x="90.8402%" y="325" width="0.2755%" height="15" fill="rgb(214,133,29)" fg:x="1319" fg:w="4"/><text x="90.9402%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.07%)</title><rect x="91.0468%" y="309" width="0.0689%" height="15" fill="rgb(226,93,6)" fg:x="1322" fg:w="1"/><text x="91.1468%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="91.0468%" y="293" width="0.0689%" height="15" fill="rgb(252,222,34)" fg:x="1322" fg:w="1"/><text x="91.1468%" y="303.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.07%)</title><rect x="91.0468%" y="277" width="0.0689%" height="15" fill="rgb(252,92,48)" fg:x="1322" fg:w="1"/><text x="91.1468%" y="287.50"></text></g><g><title>day_12::dfs::path_to_string (24 samples, 1.65%)</title><rect x="89.5317%" y="565" width="1.6529%" height="15" fill="rgb(245,223,24)" fg:x="1300" fg:w="24"/><text x="89.6317%" y="575.50">day_1..</text></g><g><title>itertools::Itertools::intersperse (1 samples, 0.07%)</title><rect x="91.1157%" y="549" width="0.0689%" height="15" fill="rgb(205,176,3)" fg:x="1323" fg:w="1"/><text x="91.2157%" y="559.50"></text></g><g><title>itertools::intersperse::intersperse (1 samples, 0.07%)</title><rect x="91.1157%" y="533" width="0.0689%" height="15" fill="rgb(235,151,15)" fg:x="1323" fg:w="1"/><text x="91.2157%" y="543.50"></text></g><g><title>itertools::intersperse::intersperse_with (1 samples, 0.07%)</title><rect x="91.1157%" y="517" width="0.0689%" height="15" fill="rgb(237,209,11)" fg:x="1323" fg:w="1"/><text x="91.2157%" y="527.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_contains (25 samples, 1.72%)</title><rect x="89.5317%" y="581" width="1.7218%" height="15" fill="rgb(243,227,24)" fg:x="1300" fg:w="25"/><text x="89.6317%" y="591.50">day_1..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.07%)</title><rect x="91.1846%" y="565" width="0.0689%" height="15" fill="rgb(239,193,16)" fg:x="1324" fg:w="1"/><text x="91.2846%" y="575.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.07%)</title><rect x="91.1846%" y="549" width="0.0689%" height="15" fill="rgb(231,27,9)" fg:x="1324" fg:w="1"/><text x="91.2846%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.07%)</title><rect x="91.1846%" y="533" width="0.0689%" height="15" fill="rgb(219,169,10)" fg:x="1324" fg:w="1"/><text x="91.2846%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.07%)</title><rect x="91.1846%" y="517" width="0.0689%" height="15" fill="rgb(244,229,43)" fg:x="1324" fg:w="1"/><text x="91.2846%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.07%)</title><rect x="91.1846%" y="501" width="0.0689%" height="15" fill="rgb(254,38,20)" fg:x="1324" fg:w="1"/><text x="91.2846%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="91.1846%" y="485" width="0.0689%" height="15" fill="rgb(250,47,30)" fg:x="1324" fg:w="1"/><text x="91.2846%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.07%)</title><rect x="91.1846%" y="469" width="0.0689%" height="15" fill="rgb(224,124,36)" fg:x="1324" fg:w="1"/><text x="91.2846%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.07%)</title><rect x="91.1846%" y="453" width="0.0689%" height="15" fill="rgb(246,68,51)" fg:x="1324" fg:w="1"/><text x="91.2846%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.07%)</title><rect x="91.1846%" y="437" width="0.0689%" height="15" fill="rgb(253,43,49)" fg:x="1324" fg:w="1"/><text x="91.2846%" y="447.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="91.1846%" y="421" width="0.0689%" height="15" fill="rgb(219,54,36)" fg:x="1324" fg:w="1"/><text x="91.2846%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="91.1846%" y="405" width="0.0689%" height="15" fill="rgb(227,133,34)" fg:x="1324" fg:w="1"/><text x="91.2846%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="91.1846%" y="389" width="0.0689%" height="15" fill="rgb(247,227,15)" fg:x="1324" fg:w="1"/><text x="91.2846%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="91.1846%" y="373" width="0.0689%" height="15" fill="rgb(229,96,14)" fg:x="1324" fg:w="1"/><text x="91.2846%" y="383.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseElementSimple&lt;Item&gt; as itertools::intersperse::IntersperseElement&lt;Item&gt;&gt;::generate (2 samples, 0.14%)</title><rect x="91.2534%" y="389" width="0.1377%" height="15" fill="rgb(220,79,17)" fg:x="1325" fg:w="2"/><text x="91.3534%" y="399.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.14%)</title><rect x="91.2534%" y="373" width="0.1377%" height="15" fill="rgb(205,131,53)" fg:x="1325" fg:w="2"/><text x="91.3534%" y="383.50"></text></g><g><title>tcache_get (2 samples, 0.14%)</title><rect x="91.2534%" y="357" width="0.1377%" height="15" fill="rgb(209,50,29)" fg:x="1325" fg:w="2"/><text x="91.3534%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (1 samples, 0.07%)</title><rect x="91.3912%" y="357" width="0.0689%" height="15" fill="rgb(245,86,46)" fg:x="1327" fg:w="1"/><text x="91.4912%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.07%)</title><rect x="91.3912%" y="341" width="0.0689%" height="15" fill="rgb(235,66,46)" fg:x="1327" fg:w="1"/><text x="91.4912%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.07%)</title><rect x="91.3912%" y="325" width="0.0689%" height="15" fill="rgb(232,148,31)" fg:x="1327" fg:w="1"/><text x="91.4912%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.07%)</title><rect x="91.3912%" y="309" width="0.0689%" height="15" fill="rgb(217,149,8)" fg:x="1327" fg:w="1"/><text x="91.4912%" y="319.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.07%)</title><rect x="91.4601%" y="357" width="0.0689%" height="15" fill="rgb(209,183,11)" fg:x="1328" fg:w="1"/><text x="91.5601%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.07%)</title><rect x="91.4601%" y="341" width="0.0689%" height="15" fill="rgb(208,55,20)" fg:x="1328" fg:w="1"/><text x="91.5601%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="91.4601%" y="325" width="0.0689%" height="15" fill="rgb(218,39,14)" fg:x="1328" fg:w="1"/><text x="91.5601%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="91.4601%" y="309" width="0.0689%" height="15" fill="rgb(216,169,33)" fg:x="1328" fg:w="1"/><text x="91.5601%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="91.4601%" y="293" width="0.0689%" height="15" fill="rgb(233,80,24)" fg:x="1328" fg:w="1"/><text x="91.5601%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="91.4601%" y="277" width="0.0689%" height="15" fill="rgb(213,179,31)" fg:x="1328" fg:w="1"/><text x="91.5601%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="91.4601%" y="261" width="0.0689%" height="15" fill="rgb(209,19,5)" fg:x="1328" fg:w="1"/><text x="91.5601%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="91.4601%" y="245" width="0.0689%" height="15" fill="rgb(219,18,35)" fg:x="1328" fg:w="1"/><text x="91.5601%" y="255.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="91.4601%" y="229" width="0.0689%" height="15" fill="rgb(209,169,16)" fg:x="1328" fg:w="1"/><text x="91.5601%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="91.4601%" y="213" width="0.0689%" height="15" fill="rgb(245,90,51)" fg:x="1328" fg:w="1"/><text x="91.5601%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="91.4601%" y="197" width="0.0689%" height="15" fill="rgb(220,99,45)" fg:x="1328" fg:w="1"/><text x="91.5601%" y="207.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="91.4601%" y="181" width="0.0689%" height="15" fill="rgb(249,89,25)" fg:x="1328" fg:w="1"/><text x="91.5601%" y="191.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.07%)</title><rect x="91.4601%" y="165" width="0.0689%" height="15" fill="rgb(239,193,0)" fg:x="1328" fg:w="1"/><text x="91.5601%" y="175.50"></text></g><g><title>checked_request2size (1 samples, 0.07%)</title><rect x="91.4601%" y="149" width="0.0689%" height="15" fill="rgb(231,126,1)" fg:x="1328" fg:w="1"/><text x="91.5601%" y="159.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.07%)</title><rect x="91.6667%" y="245" width="0.0689%" height="15" fill="rgb(243,166,3)" fg:x="1331" fg:w="1"/><text x="91.7667%" y="255.50"></text></g><g><title>__GI___libc_free (3 samples, 0.21%)</title><rect x="91.6667%" y="261" width="0.2066%" height="15" fill="rgb(223,22,34)" fg:x="1331" fg:w="3"/><text x="91.7667%" y="271.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.14%)</title><rect x="91.7355%" y="245" width="0.1377%" height="15" fill="rgb(251,52,51)" fg:x="1332" fg:w="2"/><text x="91.8355%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.14%)</title><rect x="91.7355%" y="229" width="0.1377%" height="15" fill="rgb(221,165,28)" fg:x="1332" fg:w="2"/><text x="91.8355%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.14%)</title><rect x="91.7355%" y="213" width="0.1377%" height="15" fill="rgb(218,121,47)" fg:x="1332" fg:w="2"/><text x="91.8355%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.14%)</title><rect x="91.7355%" y="197" width="0.1377%" height="15" fill="rgb(209,120,9)" fg:x="1332" fg:w="2"/><text x="91.8355%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.07%)</title><rect x="91.8044%" y="181" width="0.0689%" height="15" fill="rgb(236,68,12)" fg:x="1333" fg:w="1"/><text x="91.9044%" y="191.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.07%)</title><rect x="91.8044%" y="165" width="0.0689%" height="15" fill="rgb(225,194,26)" fg:x="1333" fg:w="1"/><text x="91.9044%" y="175.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (10 samples, 0.69%)</title><rect x="91.2534%" y="453" width="0.6887%" height="15" fill="rgb(231,84,39)" fg:x="1325" fg:w="10"/><text x="91.3534%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (10 samples, 0.69%)</title><rect x="91.2534%" y="437" width="0.6887%" height="15" fill="rgb(210,11,45)" fg:x="1325" fg:w="10"/><text x="91.3534%" y="447.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (10 samples, 0.69%)</title><rect x="91.2534%" y="421" width="0.6887%" height="15" fill="rgb(224,54,52)" fg:x="1325" fg:w="10"/><text x="91.3534%" y="431.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (10 samples, 0.69%)</title><rect x="91.2534%" y="405" width="0.6887%" height="15" fill="rgb(238,102,14)" fg:x="1325" fg:w="10"/><text x="91.3534%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (8 samples, 0.55%)</title><rect x="91.3912%" y="389" width="0.5510%" height="15" fill="rgb(243,160,52)" fg:x="1327" fg:w="8"/><text x="91.4912%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (8 samples, 0.55%)</title><rect x="91.3912%" y="373" width="0.5510%" height="15" fill="rgb(216,114,19)" fg:x="1327" fg:w="8"/><text x="91.4912%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6 samples, 0.41%)</title><rect x="91.5289%" y="357" width="0.4132%" height="15" fill="rgb(244,166,37)" fg:x="1329" fg:w="6"/><text x="91.6289%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.41%)</title><rect x="91.5289%" y="341" width="0.4132%" height="15" fill="rgb(246,29,44)" fg:x="1329" fg:w="6"/><text x="91.6289%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.41%)</title><rect x="91.5289%" y="325" width="0.4132%" height="15" fill="rgb(215,56,53)" fg:x="1329" fg:w="6"/><text x="91.6289%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.41%)</title><rect x="91.5289%" y="309" width="0.4132%" height="15" fill="rgb(217,60,2)" fg:x="1329" fg:w="6"/><text x="91.6289%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.34%)</title><rect x="91.5978%" y="293" width="0.3444%" height="15" fill="rgb(207,26,24)" fg:x="1330" fg:w="5"/><text x="91.6978%" y="303.50"></text></g><g><title>alloc::alloc::dealloc (5 samples, 0.34%)</title><rect x="91.5978%" y="277" width="0.3444%" height="15" fill="rgb(252,210,15)" fg:x="1330" fg:w="5"/><text x="91.6978%" y="287.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.07%)</title><rect x="91.8733%" y="261" width="0.0689%" height="15" fill="rgb(253,209,26)" fg:x="1334" fg:w="1"/><text x="91.9733%" y="271.50"></text></g><g><title>day_12::dfs::path_to_string (11 samples, 0.76%)</title><rect x="91.2534%" y="565" width="0.7576%" height="15" fill="rgb(238,170,14)" fg:x="1325" fg:w="11"/><text x="91.3534%" y="575.50">d..</text></g><g><title>core::iter::traits::iterator::Iterator::collect (11 samples, 0.76%)</title><rect x="91.2534%" y="549" width="0.7576%" height="15" fill="rgb(216,178,15)" fg:x="1325" fg:w="11"/><text x="91.3534%" y="559.50">c..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (11 samples, 0.76%)</title><rect x="91.2534%" y="533" width="0.7576%" height="15" fill="rgb(250,197,2)" fg:x="1325" fg:w="11"/><text x="91.3534%" y="543.50">&lt;..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (11 samples, 0.76%)</title><rect x="91.2534%" y="517" width="0.7576%" height="15" fill="rgb(212,70,42)" fg:x="1325" fg:w="11"/><text x="91.3534%" y="527.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (11 samples, 0.76%)</title><rect x="91.2534%" y="501" width="0.7576%" height="15" fill="rgb(227,213,9)" fg:x="1325" fg:w="11"/><text x="91.3534%" y="511.50">c..</text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.76%)</title><rect x="91.2534%" y="485" width="0.7576%" height="15" fill="rgb(245,99,25)" fg:x="1325" fg:w="11"/><text x="91.3534%" y="495.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (11 samples, 0.76%)</title><rect x="91.2534%" y="469" width="0.7576%" height="15" fill="rgb(250,82,29)" fg:x="1325" fg:w="11"/><text x="91.3534%" y="479.50">&lt;..</text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="91.9421%" y="453" width="0.0689%" height="15" fill="rgb(241,226,54)" fg:x="1335" fg:w="1"/><text x="92.0421%" y="463.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (1 samples, 0.07%)</title><rect x="91.9421%" y="437" width="0.0689%" height="15" fill="rgb(221,99,41)" fg:x="1335" fg:w="1"/><text x="92.0421%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="91.9421%" y="421" width="0.0689%" height="15" fill="rgb(213,90,21)" fg:x="1335" fg:w="1"/><text x="92.0421%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="91.9421%" y="405" width="0.0689%" height="15" fill="rgb(205,208,24)" fg:x="1335" fg:w="1"/><text x="92.0421%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="91.9421%" y="389" width="0.0689%" height="15" fill="rgb(246,31,12)" fg:x="1335" fg:w="1"/><text x="92.0421%" y="399.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="91.9421%" y="373" width="0.0689%" height="15" fill="rgb(213,154,6)" fg:x="1335" fg:w="1"/><text x="92.0421%" y="383.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="92.0110%" y="533" width="0.0689%" height="15" fill="rgb(222,163,29)" fg:x="1336" fg:w="1"/><text x="92.1110%" y="543.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="92.0799%" y="517" width="0.0689%" height="15" fill="rgb(227,201,8)" fg:x="1337" fg:w="1"/><text x="92.1799%" y="527.50"></text></g><g><title>tcache_get (1 samples, 0.07%)</title><rect x="92.0799%" y="501" width="0.0689%" height="15" fill="rgb(233,9,32)" fg:x="1337" fg:w="1"/><text x="92.1799%" y="511.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_push (15 samples, 1.03%)</title><rect x="91.2534%" y="581" width="1.0331%" height="15" fill="rgb(217,54,24)" fg:x="1325" fg:w="15"/><text x="91.3534%" y="591.50">da..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (4 samples, 0.28%)</title><rect x="92.0110%" y="565" width="0.2755%" height="15" fill="rgb(235,192,0)" fg:x="1336" fg:w="4"/><text x="92.1110%" y="575.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (4 samples, 0.28%)</title><rect x="92.0110%" y="549" width="0.2755%" height="15" fill="rgb(235,45,9)" fg:x="1336" fg:w="4"/><text x="92.1110%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.21%)</title><rect x="92.0799%" y="533" width="0.2066%" height="15" fill="rgb(246,42,40)" fg:x="1337" fg:w="3"/><text x="92.1799%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.14%)</title><rect x="92.1488%" y="517" width="0.1377%" height="15" fill="rgb(248,111,24)" fg:x="1338" fg:w="2"/><text x="92.2488%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.14%)</title><rect x="92.1488%" y="501" width="0.1377%" height="15" fill="rgb(249,65,22)" fg:x="1338" fg:w="2"/><text x="92.2488%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.14%)</title><rect x="92.1488%" y="485" width="0.1377%" height="15" fill="rgb(238,111,51)" fg:x="1338" fg:w="2"/><text x="92.2488%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (2 samples, 0.14%)</title><rect x="92.1488%" y="469" width="0.1377%" height="15" fill="rgb(250,118,22)" fg:x="1338" fg:w="2"/><text x="92.2488%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (2 samples, 0.14%)</title><rect x="92.1488%" y="453" width="0.1377%" height="15" fill="rgb(234,84,26)" fg:x="1338" fg:w="2"/><text x="92.2488%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (2 samples, 0.14%)</title><rect x="92.1488%" y="437" width="0.1377%" height="15" fill="rgb(243,172,12)" fg:x="1338" fg:w="2"/><text x="92.2488%" y="447.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (2 samples, 0.14%)</title><rect x="92.1488%" y="421" width="0.1377%" height="15" fill="rgb(236,150,49)" fg:x="1338" fg:w="2"/><text x="92.2488%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.14%)</title><rect x="92.1488%" y="405" width="0.1377%" height="15" fill="rgb(225,197,26)" fg:x="1338" fg:w="2"/><text x="92.2488%" y="415.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.14%)</title><rect x="92.1488%" y="389" width="0.1377%" height="15" fill="rgb(214,17,42)" fg:x="1338" fg:w="2"/><text x="92.2488%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.14%)</title><rect x="92.1488%" y="373" width="0.1377%" height="15" fill="rgb(224,165,40)" fg:x="1338" fg:w="2"/><text x="92.2488%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.14%)</title><rect x="92.1488%" y="357" width="0.1377%" height="15" fill="rgb(246,100,4)" fg:x="1338" fg:w="2"/><text x="92.2488%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.14%)</title><rect x="92.1488%" y="341" width="0.1377%" height="15" fill="rgb(222,103,0)" fg:x="1338" fg:w="2"/><text x="92.2488%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (2 samples, 0.14%)</title><rect x="92.1488%" y="325" width="0.1377%" height="15" fill="rgb(227,189,26)" fg:x="1338" fg:w="2"/><text x="92.2488%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2 samples, 0.14%)</title><rect x="92.1488%" y="309" width="0.1377%" height="15" fill="rgb(214,202,17)" fg:x="1338" fg:w="2"/><text x="92.2488%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2 samples, 0.14%)</title><rect x="92.1488%" y="293" width="0.1377%" height="15" fill="rgb(229,111,3)" fg:x="1338" fg:w="2"/><text x="92.2488%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.14%)</title><rect x="92.1488%" y="277" width="0.1377%" height="15" fill="rgb(229,172,15)" fg:x="1338" fg:w="2"/><text x="92.2488%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.14%)</title><rect x="92.1488%" y="261" width="0.1377%" height="15" fill="rgb(230,224,35)" fg:x="1338" fg:w="2"/><text x="92.2488%" y="271.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="92.2865%" y="533" width="0.0689%" height="15" fill="rgb(251,141,6)" fg:x="1340" fg:w="1"/><text x="92.3865%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="92.2865%" y="517" width="0.0689%" height="15" fill="rgb(225,208,6)" fg:x="1340" fg:w="1"/><text x="92.3865%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="92.2865%" y="501" width="0.0689%" height="15" fill="rgb(246,181,16)" fg:x="1340" fg:w="1"/><text x="92.3865%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="92.2865%" y="485" width="0.0689%" height="15" fill="rgb(227,129,36)" fg:x="1340" fg:w="1"/><text x="92.3865%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter_map::FilterMap&lt;std::collections::hash::map::IntoIter&lt;&amp;alloc::rc::Rc&lt;day_12::node::Node&gt;,usize&gt;,day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}}&gt;&gt; (1 samples, 0.07%)</title><rect x="92.2865%" y="469" width="0.0689%" height="15" fill="rgb(248,117,24)" fg:x="1340" fg:w="1"/><text x="92.3865%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;&amp;alloc::rc::Rc&lt;day_12::node::Node&gt;,usize&gt;&gt; (1 samples, 0.07%)</title><rect x="92.2865%" y="453" width="0.0689%" height="15" fill="rgb(214,185,35)" fg:x="1340" fg:w="1"/><text x="92.3865%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;&amp;alloc::rc::Rc&lt;day_12::node::Node&gt;,usize&gt;&gt; (1 samples, 0.07%)</title><rect x="92.2865%" y="437" width="0.0689%" height="15" fill="rgb(236,150,34)" fg:x="1340" fg:w="1"/><text x="92.3865%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(&amp;alloc::rc::Rc&lt;day_12::node::Node&gt;,usize)&gt;&gt; (1 samples, 0.07%)</title><rect x="92.2865%" y="421" width="0.0689%" height="15" fill="rgb(243,228,27)" fg:x="1340" fg:w="1"/><text x="92.3865%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="92.2865%" y="405" width="0.0689%" height="15" fill="rgb(245,77,44)" fg:x="1340" fg:w="1"/><text x="92.3865%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="92.2865%" y="389" width="0.0689%" height="15" fill="rgb(235,214,42)" fg:x="1340" fg:w="1"/><text x="92.3865%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="92.2865%" y="373" width="0.0689%" height="15" fill="rgb(221,74,3)" fg:x="1340" fg:w="1"/><text x="92.3865%" y="383.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="92.2865%" y="357" width="0.0689%" height="15" fill="rgb(206,121,29)" fg:x="1340" fg:w="1"/><text x="92.3865%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.14%)</title><rect x="92.2865%" y="565" width="0.1377%" height="15" fill="rgb(249,131,53)" fg:x="1340" fg:w="2"/><text x="92.3865%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="92.2865%" y="549" width="0.1377%" height="15" fill="rgb(236,170,29)" fg:x="1340" fg:w="2"/><text x="92.3865%" y="559.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="92.3554%" y="533" width="0.0689%" height="15" fill="rgb(247,96,15)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="543.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (1 samples, 0.07%)</title><rect x="92.3554%" y="517" width="0.0689%" height="15" fill="rgb(211,210,7)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="92.3554%" y="501" width="0.0689%" height="15" fill="rgb(240,88,50)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="92.3554%" y="485" width="0.0689%" height="15" fill="rgb(209,229,26)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="92.3554%" y="469" width="0.0689%" height="15" fill="rgb(210,68,23)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="479.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.07%)</title><rect x="92.3554%" y="453" width="0.0689%" height="15" fill="rgb(229,180,13)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="463.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}} (1 samples, 0.07%)</title><rect x="92.3554%" y="437" width="0.0689%" height="15" fill="rgb(236,53,44)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.07%)</title><rect x="92.3554%" y="421" width="0.0689%" height="15" fill="rgb(244,214,29)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.07%)</title><rect x="92.3554%" y="405" width="0.0689%" height="15" fill="rgb(220,75,29)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="415.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.07%)</title><rect x="92.3554%" y="389" width="0.0689%" height="15" fill="rgb(214,183,37)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="92.3554%" y="373" width="0.0689%" height="15" fill="rgb(239,117,29)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="92.3554%" y="357" width="0.0689%" height="15" fill="rgb(237,171,35)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="367.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="92.3554%" y="341" width="0.0689%" height="15" fill="rgb(229,178,53)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="351.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (1 samples, 0.07%)</title><rect x="92.3554%" y="325" width="0.0689%" height="15" fill="rgb(210,102,19)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="335.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="92.3554%" y="309" width="0.0689%" height="15" fill="rgb(235,127,22)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.07%)</title><rect x="92.3554%" y="293" width="0.0689%" height="15" fill="rgb(244,31,31)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="303.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="92.3554%" y="277" width="0.0689%" height="15" fill="rgb(231,43,21)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="287.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEqIdent&lt;T&gt;&gt;::eq (1 samples, 0.07%)</title><rect x="92.3554%" y="261" width="0.0689%" height="15" fill="rgb(217,131,35)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="271.50"></text></g><g><title>&lt;day_12::node::Node as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="92.3554%" y="245" width="0.0689%" height="15" fill="rgb(221,149,4)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="92.3554%" y="229" width="0.0689%" height="15" fill="rgb(232,170,28)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="239.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.07%)</title><rect x="92.3554%" y="213" width="0.0689%" height="15" fill="rgb(238,56,10)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="223.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.07%)</title><rect x="92.3554%" y="197" width="0.0689%" height="15" fill="rgb(235,196,14)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="207.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.07%)</title><rect x="92.3554%" y="181" width="0.0689%" height="15" fill="rgb(216,45,48)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="191.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.07%)</title><rect x="92.3554%" y="165" width="0.0689%" height="15" fill="rgb(238,213,17)" fg:x="1341" fg:w="1"/><text x="92.4554%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="92.4242%" y="517" width="0.0689%" height="15" fill="rgb(212,13,2)" fg:x="1342" fg:w="1"/><text x="92.5242%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="92.4242%" y="501" width="0.0689%" height="15" fill="rgb(240,114,20)" fg:x="1342" fg:w="1"/><text x="92.5242%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="92.4242%" y="485" width="0.0689%" height="15" fill="rgb(228,41,40)" fg:x="1342" fg:w="1"/><text x="92.5242%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="92.4242%" y="469" width="0.0689%" height="15" fill="rgb(244,132,35)" fg:x="1342" fg:w="1"/><text x="92.5242%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="92.4242%" y="453" width="0.0689%" height="15" fill="rgb(253,189,4)" fg:x="1342" fg:w="1"/><text x="92.5242%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.07%)</title><rect x="92.4242%" y="437" width="0.0689%" height="15" fill="rgb(224,37,19)" fg:x="1342" fg:w="1"/><text x="92.5242%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="92.4242%" y="421" width="0.0689%" height="15" fill="rgb(235,223,18)" fg:x="1342" fg:w="1"/><text x="92.5242%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="92.4242%" y="405" width="0.0689%" height="15" fill="rgb(235,163,25)" fg:x="1342" fg:w="1"/><text x="92.5242%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="92.4242%" y="389" width="0.0689%" height="15" fill="rgb(217,145,28)" fg:x="1342" fg:w="1"/><text x="92.5242%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="92.4242%" y="373" width="0.0689%" height="15" fill="rgb(223,223,32)" fg:x="1342" fg:w="1"/><text x="92.5242%" y="383.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (1 samples, 0.07%)</title><rect x="92.4242%" y="357" width="0.0689%" height="15" fill="rgb(227,189,39)" fg:x="1342" fg:w="1"/><text x="92.5242%" y="367.50"></text></g><g><title>__GI___libc_free (1 samples, 0.07%)</title><rect x="92.5620%" y="181" width="0.0689%" height="15" fill="rgb(248,10,22)" fg:x="1344" fg:w="1"/><text x="92.6620%" y="191.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="92.6309%" y="181" width="0.0689%" height="15" fill="rgb(248,46,39)" fg:x="1345" fg:w="1"/><text x="92.7309%" y="191.50"></text></g><g><title>tcache_get (1 samples, 0.07%)</title><rect x="92.6309%" y="165" width="0.0689%" height="15" fill="rgb(248,113,48)" fg:x="1345" fg:w="1"/><text x="92.7309%" y="175.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.07%)</title><rect x="92.6997%" y="181" width="0.0689%" height="15" fill="rgb(245,16,25)" fg:x="1346" fg:w="1"/><text x="92.7997%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (5 samples, 0.34%)</title><rect x="92.4931%" y="357" width="0.3444%" height="15" fill="rgb(249,152,16)" fg:x="1343" fg:w="5"/><text x="92.5931%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.28%)</title><rect x="92.5620%" y="341" width="0.2755%" height="15" fill="rgb(250,16,1)" fg:x="1344" fg:w="4"/><text x="92.6620%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.28%)</title><rect x="92.5620%" y="325" width="0.2755%" height="15" fill="rgb(249,138,3)" fg:x="1344" fg:w="4"/><text x="92.6620%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.28%)</title><rect x="92.5620%" y="309" width="0.2755%" height="15" fill="rgb(227,71,41)" fg:x="1344" fg:w="4"/><text x="92.6620%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.28%)</title><rect x="92.5620%" y="293" width="0.2755%" height="15" fill="rgb(209,184,23)" fg:x="1344" fg:w="4"/><text x="92.6620%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.28%)</title><rect x="92.5620%" y="277" width="0.2755%" height="15" fill="rgb(223,215,31)" fg:x="1344" fg:w="4"/><text x="92.6620%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.28%)</title><rect x="92.5620%" y="261" width="0.2755%" height="15" fill="rgb(210,146,28)" fg:x="1344" fg:w="4"/><text x="92.6620%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.28%)</title><rect x="92.5620%" y="245" width="0.2755%" height="15" fill="rgb(209,183,41)" fg:x="1344" fg:w="4"/><text x="92.6620%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.28%)</title><rect x="92.5620%" y="229" width="0.2755%" height="15" fill="rgb(209,224,45)" fg:x="1344" fg:w="4"/><text x="92.6620%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.28%)</title><rect x="92.5620%" y="213" width="0.2755%" height="15" fill="rgb(224,209,51)" fg:x="1344" fg:w="4"/><text x="92.6620%" y="223.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.28%)</title><rect x="92.5620%" y="197" width="0.2755%" height="15" fill="rgb(223,17,39)" fg:x="1344" fg:w="4"/><text x="92.6620%" y="207.50"></text></g><g><title>__rust_alloc (1 samples, 0.07%)</title><rect x="92.7686%" y="181" width="0.0689%" height="15" fill="rgb(234,204,37)" fg:x="1347" fg:w="1"/><text x="92.8686%" y="191.50"></text></g><g><title>__GI___libc_free (1 samples, 0.07%)</title><rect x="92.8375%" y="357" width="0.0689%" height="15" fill="rgb(236,120,5)" fg:x="1348" fg:w="1"/><text x="92.9375%" y="367.50"></text></g><g><title>arena_for_chunk (1 samples, 0.07%)</title><rect x="92.8375%" y="341" width="0.0689%" height="15" fill="rgb(248,97,27)" fg:x="1348" fg:w="1"/><text x="92.9375%" y="351.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseElementSimple&lt;Item&gt; as itertools::intersperse::IntersperseElement&lt;Item&gt;&gt;::generate (7 samples, 0.48%)</title><rect x="92.4931%" y="373" width="0.4821%" height="15" fill="rgb(240,66,17)" fg:x="1343" fg:w="7"/><text x="92.5931%" y="383.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.07%)</title><rect x="92.9063%" y="357" width="0.0689%" height="15" fill="rgb(210,79,3)" fg:x="1349" fg:w="1"/><text x="93.0063%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="92.9752%" y="277" width="0.0689%" height="15" fill="rgb(214,176,27)" fg:x="1350" fg:w="1"/><text x="93.0752%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="92.9752%" y="261" width="0.0689%" height="15" fill="rgb(235,185,3)" fg:x="1350" fg:w="1"/><text x="93.0752%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="92.9752%" y="245" width="0.0689%" height="15" fill="rgb(227,24,12)" fg:x="1350" fg:w="1"/><text x="93.0752%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="92.9752%" y="229" width="0.0689%" height="15" fill="rgb(252,169,48)" fg:x="1350" fg:w="1"/><text x="93.0752%" y="239.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.07%)</title><rect x="92.9752%" y="213" width="0.0689%" height="15" fill="rgb(212,65,1)" fg:x="1350" fg:w="1"/><text x="93.0752%" y="223.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.14%)</title><rect x="92.9752%" y="341" width="0.1377%" height="15" fill="rgb(242,39,24)" fg:x="1350" fg:w="2"/><text x="93.0752%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.14%)</title><rect x="92.9752%" y="325" width="0.1377%" height="15" fill="rgb(249,32,23)" fg:x="1350" fg:w="2"/><text x="93.0752%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.14%)</title><rect x="92.9752%" y="309" width="0.1377%" height="15" fill="rgb(251,195,23)" fg:x="1350" fg:w="2"/><text x="93.0752%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.14%)</title><rect x="92.9752%" y="293" width="0.1377%" height="15" fill="rgb(236,174,8)" fg:x="1350" fg:w="2"/><text x="93.0752%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="93.0441%" y="277" width="0.0689%" height="15" fill="rgb(220,197,8)" fg:x="1351" fg:w="1"/><text x="93.1441%" y="287.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="93.0441%" y="261" width="0.0689%" height="15" fill="rgb(240,108,37)" fg:x="1351" fg:w="1"/><text x="93.1441%" y="271.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="93.1129%" y="261" width="0.0689%" height="15" fill="rgb(232,176,24)" fg:x="1352" fg:w="1"/><text x="93.2129%" y="271.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (11 samples, 0.76%)</title><rect x="92.4931%" y="389" width="0.7576%" height="15" fill="rgb(243,35,29)" fg:x="1343" fg:w="11"/><text x="92.5931%" y="399.50">&lt;..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (4 samples, 0.28%)</title><rect x="92.9752%" y="373" width="0.2755%" height="15" fill="rgb(210,37,18)" fg:x="1350" fg:w="4"/><text x="93.0752%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (4 samples, 0.28%)</title><rect x="92.9752%" y="357" width="0.2755%" height="15" fill="rgb(224,184,40)" fg:x="1350" fg:w="4"/><text x="93.0752%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.14%)</title><rect x="93.1129%" y="341" width="0.1377%" height="15" fill="rgb(236,39,29)" fg:x="1352" fg:w="2"/><text x="93.2129%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.14%)</title><rect x="93.1129%" y="325" width="0.1377%" height="15" fill="rgb(232,48,39)" fg:x="1352" fg:w="2"/><text x="93.2129%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.14%)</title><rect x="93.1129%" y="309" width="0.1377%" height="15" fill="rgb(236,34,42)" fg:x="1352" fg:w="2"/><text x="93.2129%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.14%)</title><rect x="93.1129%" y="293" width="0.1377%" height="15" fill="rgb(243,106,37)" fg:x="1352" fg:w="2"/><text x="93.2129%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.14%)</title><rect x="93.1129%" y="277" width="0.1377%" height="15" fill="rgb(218,96,6)" fg:x="1352" fg:w="2"/><text x="93.2129%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="93.1818%" y="261" width="0.0689%" height="15" fill="rgb(235,130,12)" fg:x="1353" fg:w="1"/><text x="93.2818%" y="271.50"></text></g><g><title>__GI___libc_free (1 samples, 0.07%)</title><rect x="93.1818%" y="245" width="0.0689%" height="15" fill="rgb(231,95,0)" fg:x="1353" fg:w="1"/><text x="93.2818%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="93.3196%" y="293" width="0.0689%" height="15" fill="rgb(228,12,23)" fg:x="1355" fg:w="1"/><text x="93.4196%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="93.3196%" y="277" width="0.0689%" height="15" fill="rgb(216,12,1)" fg:x="1355" fg:w="1"/><text x="93.4196%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="93.3196%" y="261" width="0.0689%" height="15" fill="rgb(219,59,3)" fg:x="1355" fg:w="1"/><text x="93.4196%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="93.3196%" y="245" width="0.0689%" height="15" fill="rgb(215,208,46)" fg:x="1355" fg:w="1"/><text x="93.4196%" y="255.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="93.3196%" y="229" width="0.0689%" height="15" fill="rgb(254,224,29)" fg:x="1355" fg:w="1"/><text x="93.4196%" y="239.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="93.3196%" y="213" width="0.0689%" height="15" fill="rgb(232,14,29)" fg:x="1355" fg:w="1"/><text x="93.4196%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="93.3196%" y="197" width="0.0689%" height="15" fill="rgb(208,45,52)" fg:x="1355" fg:w="1"/><text x="93.4196%" y="207.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15 samples, 1.03%)</title><rect x="92.4242%" y="533" width="1.0331%" height="15" fill="rgb(234,191,28)" fg:x="1342" fg:w="15"/><text x="92.5242%" y="543.50">co..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (14 samples, 0.96%)</title><rect x="92.4931%" y="517" width="0.9642%" height="15" fill="rgb(244,67,43)" fg:x="1343" fg:w="14"/><text x="92.5931%" y="527.50">&lt;a..</text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (14 samples, 0.96%)</title><rect x="92.4931%" y="501" width="0.9642%" height="15" fill="rgb(236,189,24)" fg:x="1343" fg:w="14"/><text x="92.5931%" y="511.50">&lt;a..</text></g><g><title>core::iter::traits::iterator::Iterator::for_each (14 samples, 0.96%)</title><rect x="92.4931%" y="485" width="0.9642%" height="15" fill="rgb(239,214,33)" fg:x="1343" fg:w="14"/><text x="92.5931%" y="495.50">co..</text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.96%)</title><rect x="92.4931%" y="469" width="0.9642%" height="15" fill="rgb(226,176,41)" fg:x="1343" fg:w="14"/><text x="92.5931%" y="479.50">&lt;i..</text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.96%)</title><rect x="92.4931%" y="453" width="0.9642%" height="15" fill="rgb(248,47,8)" fg:x="1343" fg:w="14"/><text x="92.5931%" y="463.50">&lt;c..</text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (14 samples, 0.96%)</title><rect x="92.4931%" y="437" width="0.9642%" height="15" fill="rgb(218,81,44)" fg:x="1343" fg:w="14"/><text x="92.5931%" y="447.50">&lt;c..</text></g><g><title>core::iter::traits::iterator::Iterator::fold (14 samples, 0.96%)</title><rect x="92.4931%" y="421" width="0.9642%" height="15" fill="rgb(213,98,6)" fg:x="1343" fg:w="14"/><text x="92.5931%" y="431.50">co..</text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (14 samples, 0.96%)</title><rect x="92.4931%" y="405" width="0.9642%" height="15" fill="rgb(222,85,22)" fg:x="1343" fg:w="14"/><text x="92.5931%" y="415.50">co..</text></g><g><title>day_12::dfs::path_to_string::{{closure}} (3 samples, 0.21%)</title><rect x="93.2507%" y="389" width="0.2066%" height="15" fill="rgb(239,46,39)" fg:x="1354" fg:w="3"/><text x="93.3507%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (3 samples, 0.21%)</title><rect x="93.2507%" y="373" width="0.2066%" height="15" fill="rgb(237,12,29)" fg:x="1354" fg:w="3"/><text x="93.3507%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="93.3196%" y="357" width="0.1377%" height="15" fill="rgb(214,77,8)" fg:x="1355" fg:w="2"/><text x="93.4196%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.14%)</title><rect x="93.3196%" y="341" width="0.1377%" height="15" fill="rgb(217,168,37)" fg:x="1355" fg:w="2"/><text x="93.4196%" y="351.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.14%)</title><rect x="93.3196%" y="325" width="0.1377%" height="15" fill="rgb(221,217,23)" fg:x="1355" fg:w="2"/><text x="93.4196%" y="335.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.14%)</title><rect x="93.3196%" y="309" width="0.1377%" height="15" fill="rgb(243,229,36)" fg:x="1355" fg:w="2"/><text x="93.4196%" y="319.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.07%)</title><rect x="93.3884%" y="293" width="0.0689%" height="15" fill="rgb(251,163,40)" fg:x="1356" fg:w="1"/><text x="93.4884%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="93.3884%" y="277" width="0.0689%" height="15" fill="rgb(237,222,12)" fg:x="1356" fg:w="1"/><text x="93.4884%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="93.3884%" y="261" width="0.0689%" height="15" fill="rgb(248,132,6)" fg:x="1356" fg:w="1"/><text x="93.4884%" y="271.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_contains (16 samples, 1.10%)</title><rect x="92.4242%" y="565" width="1.1019%" height="15" fill="rgb(227,167,50)" fg:x="1342" fg:w="16"/><text x="92.5242%" y="575.50">da..</text></g><g><title>day_12::dfs::path_to_string (16 samples, 1.10%)</title><rect x="92.4242%" y="549" width="1.1019%" height="15" fill="rgb(242,84,37)" fg:x="1342" fg:w="16"/><text x="92.5242%" y="559.50">da..</text></g><g><title>itertools::Itertools::intersperse (1 samples, 0.07%)</title><rect x="93.4573%" y="533" width="0.0689%" height="15" fill="rgb(212,4,50)" fg:x="1357" fg:w="1"/><text x="93.5573%" y="543.50"></text></g><g><title>itertools::intersperse::intersperse (1 samples, 0.07%)</title><rect x="93.4573%" y="517" width="0.0689%" height="15" fill="rgb(230,228,32)" fg:x="1357" fg:w="1"/><text x="93.5573%" y="527.50"></text></g><g><title>itertools::intersperse::intersperse_with (1 samples, 0.07%)</title><rect x="93.4573%" y="501" width="0.0689%" height="15" fill="rgb(248,217,23)" fg:x="1357" fg:w="1"/><text x="93.5573%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="93.4573%" y="485" width="0.0689%" height="15" fill="rgb(238,197,32)" fg:x="1357" fg:w="1"/><text x="93.5573%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.07%)</title><rect x="93.4573%" y="469" width="0.0689%" height="15" fill="rgb(236,106,1)" fg:x="1357" fg:w="1"/><text x="93.5573%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="93.4573%" y="453" width="0.0689%" height="15" fill="rgb(219,228,13)" fg:x="1357" fg:w="1"/><text x="93.5573%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.07%)</title><rect x="93.4573%" y="437" width="0.0689%" height="15" fill="rgb(238,30,35)" fg:x="1357" fg:w="1"/><text x="93.5573%" y="447.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.07%)</title><rect x="93.4573%" y="421" width="0.0689%" height="15" fill="rgb(236,70,23)" fg:x="1357" fg:w="1"/><text x="93.5573%" y="431.50"></text></g><g><title>day_12::dfs::path_to_string::{{closure}} (1 samples, 0.07%)</title><rect x="93.4573%" y="405" width="0.0689%" height="15" fill="rgb(249,104,48)" fg:x="1357" fg:w="1"/><text x="93.5573%" y="415.50"></text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="93.4573%" y="389" width="0.0689%" height="15" fill="rgb(254,117,50)" fg:x="1357" fg:w="1"/><text x="93.5573%" y="399.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="93.5262%" y="181" width="0.0689%" height="15" fill="rgb(223,152,4)" fg:x="1358" fg:w="1"/><text x="93.6262%" y="191.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseElementSimple&lt;Item&gt; as itertools::intersperse::IntersperseElement&lt;Item&gt;&gt;::generate (2 samples, 0.14%)</title><rect x="93.5262%" y="373" width="0.1377%" height="15" fill="rgb(245,6,2)" fg:x="1358" fg:w="2"/><text x="93.6262%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="93.5262%" y="357" width="0.1377%" height="15" fill="rgb(249,150,24)" fg:x="1358" fg:w="2"/><text x="93.6262%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="93.5262%" y="341" width="0.1377%" height="15" fill="rgb(228,185,42)" fg:x="1358" fg:w="2"/><text x="93.6262%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.14%)</title><rect x="93.5262%" y="325" width="0.1377%" height="15" fill="rgb(226,39,33)" fg:x="1358" fg:w="2"/><text x="93.6262%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.14%)</title><rect x="93.5262%" y="309" width="0.1377%" height="15" fill="rgb(221,166,19)" fg:x="1358" fg:w="2"/><text x="93.6262%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.14%)</title><rect x="93.5262%" y="293" width="0.1377%" height="15" fill="rgb(209,109,2)" fg:x="1358" fg:w="2"/><text x="93.6262%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="93.5262%" y="277" width="0.1377%" height="15" fill="rgb(252,216,26)" fg:x="1358" fg:w="2"/><text x="93.6262%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="93.5262%" y="261" width="0.1377%" height="15" fill="rgb(227,173,36)" fg:x="1358" fg:w="2"/><text x="93.6262%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.14%)</title><rect x="93.5262%" y="245" width="0.1377%" height="15" fill="rgb(209,90,7)" fg:x="1358" fg:w="2"/><text x="93.6262%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.14%)</title><rect x="93.5262%" y="229" width="0.1377%" height="15" fill="rgb(250,194,11)" fg:x="1358" fg:w="2"/><text x="93.6262%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.14%)</title><rect x="93.5262%" y="213" width="0.1377%" height="15" fill="rgb(220,72,50)" fg:x="1358" fg:w="2"/><text x="93.6262%" y="223.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.14%)</title><rect x="93.5262%" y="197" width="0.1377%" height="15" fill="rgb(222,106,48)" fg:x="1358" fg:w="2"/><text x="93.6262%" y="207.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="93.5950%" y="181" width="0.0689%" height="15" fill="rgb(216,220,45)" fg:x="1359" fg:w="1"/><text x="93.6950%" y="191.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.07%)</title><rect x="93.6639%" y="341" width="0.0689%" height="15" fill="rgb(234,112,18)" fg:x="1360" fg:w="1"/><text x="93.7639%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.07%)</title><rect x="93.6639%" y="325" width="0.0689%" height="15" fill="rgb(206,179,9)" fg:x="1360" fg:w="1"/><text x="93.7639%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="93.6639%" y="309" width="0.0689%" height="15" fill="rgb(215,115,40)" fg:x="1360" fg:w="1"/><text x="93.7639%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="93.6639%" y="293" width="0.0689%" height="15" fill="rgb(222,69,34)" fg:x="1360" fg:w="1"/><text x="93.7639%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="93.6639%" y="277" width="0.0689%" height="15" fill="rgb(209,161,10)" fg:x="1360" fg:w="1"/><text x="93.7639%" y="287.50"></text></g><g><title>__GI___libc_free (2 samples, 0.14%)</title><rect x="93.8017%" y="245" width="0.1377%" height="15" fill="rgb(217,6,38)" fg:x="1362" fg:w="2"/><text x="93.9017%" y="255.50"></text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="93.8017%" y="229" width="0.1377%" height="15" fill="rgb(229,229,48)" fg:x="1362" fg:w="2"/><text x="93.9017%" y="239.50"></text></g><g><title>tcache_put (1 samples, 0.07%)</title><rect x="93.8705%" y="213" width="0.0689%" height="15" fill="rgb(225,21,28)" fg:x="1363" fg:w="1"/><text x="93.9705%" y="223.50"></text></g><g><title>day_12::dfs::path_to_string (7 samples, 0.48%)</title><rect x="93.5262%" y="549" width="0.4821%" height="15" fill="rgb(206,33,13)" fg:x="1358" fg:w="7"/><text x="93.6262%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (7 samples, 0.48%)</title><rect x="93.5262%" y="533" width="0.4821%" height="15" fill="rgb(242,178,17)" fg:x="1358" fg:w="7"/><text x="93.6262%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (7 samples, 0.48%)</title><rect x="93.5262%" y="517" width="0.4821%" height="15" fill="rgb(220,162,5)" fg:x="1358" fg:w="7"/><text x="93.6262%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (7 samples, 0.48%)</title><rect x="93.5262%" y="501" width="0.4821%" height="15" fill="rgb(210,33,43)" fg:x="1358" fg:w="7"/><text x="93.6262%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.48%)</title><rect x="93.5262%" y="485" width="0.4821%" height="15" fill="rgb(216,116,54)" fg:x="1358" fg:w="7"/><text x="93.6262%" y="495.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.48%)</title><rect x="93.5262%" y="469" width="0.4821%" height="15" fill="rgb(249,92,24)" fg:x="1358" fg:w="7"/><text x="93.6262%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.48%)</title><rect x="93.5262%" y="453" width="0.4821%" height="15" fill="rgb(231,189,14)" fg:x="1358" fg:w="7"/><text x="93.6262%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.48%)</title><rect x="93.5262%" y="437" width="0.4821%" height="15" fill="rgb(230,8,41)" fg:x="1358" fg:w="7"/><text x="93.6262%" y="447.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.48%)</title><rect x="93.5262%" y="421" width="0.4821%" height="15" fill="rgb(249,7,27)" fg:x="1358" fg:w="7"/><text x="93.6262%" y="431.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (7 samples, 0.48%)</title><rect x="93.5262%" y="405" width="0.4821%" height="15" fill="rgb(232,86,5)" fg:x="1358" fg:w="7"/><text x="93.6262%" y="415.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (7 samples, 0.48%)</title><rect x="93.5262%" y="389" width="0.4821%" height="15" fill="rgb(224,175,18)" fg:x="1358" fg:w="7"/><text x="93.6262%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (5 samples, 0.34%)</title><rect x="93.6639%" y="373" width="0.3444%" height="15" fill="rgb(220,129,12)" fg:x="1360" fg:w="5"/><text x="93.7639%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (5 samples, 0.34%)</title><rect x="93.6639%" y="357" width="0.3444%" height="15" fill="rgb(210,19,36)" fg:x="1360" fg:w="5"/><text x="93.7639%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.28%)</title><rect x="93.7328%" y="341" width="0.2755%" height="15" fill="rgb(219,96,14)" fg:x="1361" fg:w="4"/><text x="93.8328%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.28%)</title><rect x="93.7328%" y="325" width="0.2755%" height="15" fill="rgb(249,106,1)" fg:x="1361" fg:w="4"/><text x="93.8328%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.28%)</title><rect x="93.7328%" y="309" width="0.2755%" height="15" fill="rgb(249,155,20)" fg:x="1361" fg:w="4"/><text x="93.8328%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.28%)</title><rect x="93.7328%" y="293" width="0.2755%" height="15" fill="rgb(244,168,9)" fg:x="1361" fg:w="4"/><text x="93.8328%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.21%)</title><rect x="93.8017%" y="277" width="0.2066%" height="15" fill="rgb(216,23,50)" fg:x="1362" fg:w="3"/><text x="93.9017%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.21%)</title><rect x="93.8017%" y="261" width="0.2066%" height="15" fill="rgb(224,219,20)" fg:x="1362" fg:w="3"/><text x="93.9017%" y="271.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.07%)</title><rect x="93.9394%" y="245" width="0.0689%" height="15" fill="rgb(222,156,15)" fg:x="1364" fg:w="1"/><text x="94.0394%" y="255.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.07%)</title><rect x="94.0083%" y="245" width="0.0689%" height="15" fill="rgb(231,97,17)" fg:x="1365" fg:w="1"/><text x="94.1083%" y="255.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.07%)</title><rect x="94.0771%" y="245" width="0.0689%" height="15" fill="rgb(218,70,48)" fg:x="1366" fg:w="1"/><text x="94.1771%" y="255.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_push (11 samples, 0.76%)</title><rect x="93.5262%" y="565" width="0.7576%" height="15" fill="rgb(212,196,52)" fg:x="1358" fg:w="11"/><text x="93.6262%" y="575.50">d..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (4 samples, 0.28%)</title><rect x="94.0083%" y="549" width="0.2755%" height="15" fill="rgb(243,203,18)" fg:x="1365" fg:w="4"/><text x="94.1083%" y="559.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (4 samples, 0.28%)</title><rect x="94.0083%" y="533" width="0.2755%" height="15" fill="rgb(252,125,41)" fg:x="1365" fg:w="4"/><text x="94.1083%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.28%)</title><rect x="94.0083%" y="517" width="0.2755%" height="15" fill="rgb(223,180,33)" fg:x="1365" fg:w="4"/><text x="94.1083%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.28%)</title><rect x="94.0083%" y="501" width="0.2755%" height="15" fill="rgb(254,159,46)" fg:x="1365" fg:w="4"/><text x="94.1083%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 0.28%)</title><rect x="94.0083%" y="485" width="0.2755%" height="15" fill="rgb(254,38,10)" fg:x="1365" fg:w="4"/><text x="94.1083%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.28%)</title><rect x="94.0083%" y="469" width="0.2755%" height="15" fill="rgb(208,217,32)" fg:x="1365" fg:w="4"/><text x="94.1083%" y="479.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (4 samples, 0.28%)</title><rect x="94.0083%" y="453" width="0.2755%" height="15" fill="rgb(221,120,13)" fg:x="1365" fg:w="4"/><text x="94.1083%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (4 samples, 0.28%)</title><rect x="94.0083%" y="437" width="0.2755%" height="15" fill="rgb(246,54,52)" fg:x="1365" fg:w="4"/><text x="94.1083%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (4 samples, 0.28%)</title><rect x="94.0083%" y="421" width="0.2755%" height="15" fill="rgb(242,34,25)" fg:x="1365" fg:w="4"/><text x="94.1083%" y="431.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (4 samples, 0.28%)</title><rect x="94.0083%" y="405" width="0.2755%" height="15" fill="rgb(247,209,9)" fg:x="1365" fg:w="4"/><text x="94.1083%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.28%)</title><rect x="94.0083%" y="389" width="0.2755%" height="15" fill="rgb(228,71,26)" fg:x="1365" fg:w="4"/><text x="94.1083%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.28%)</title><rect x="94.0083%" y="373" width="0.2755%" height="15" fill="rgb(222,145,49)" fg:x="1365" fg:w="4"/><text x="94.1083%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.28%)</title><rect x="94.0083%" y="357" width="0.2755%" height="15" fill="rgb(218,121,17)" fg:x="1365" fg:w="4"/><text x="94.1083%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (4 samples, 0.28%)</title><rect x="94.0083%" y="341" width="0.2755%" height="15" fill="rgb(244,50,7)" fg:x="1365" fg:w="4"/><text x="94.1083%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.28%)</title><rect x="94.0083%" y="325" width="0.2755%" height="15" fill="rgb(246,229,37)" fg:x="1365" fg:w="4"/><text x="94.1083%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (4 samples, 0.28%)</title><rect x="94.0083%" y="309" width="0.2755%" height="15" fill="rgb(225,18,5)" fg:x="1365" fg:w="4"/><text x="94.1083%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (4 samples, 0.28%)</title><rect x="94.0083%" y="293" width="0.2755%" height="15" fill="rgb(213,204,8)" fg:x="1365" fg:w="4"/><text x="94.1083%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (4 samples, 0.28%)</title><rect x="94.0083%" y="277" width="0.2755%" height="15" fill="rgb(238,103,6)" fg:x="1365" fg:w="4"/><text x="94.1083%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (4 samples, 0.28%)</title><rect x="94.0083%" y="261" width="0.2755%" height="15" fill="rgb(222,25,35)" fg:x="1365" fg:w="4"/><text x="94.1083%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.14%)</title><rect x="94.1460%" y="245" width="0.1377%" height="15" fill="rgb(213,203,35)" fg:x="1367" fg:w="2"/><text x="94.2460%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::rc::Rc&lt;day_12::node::Node&gt;&gt;&gt; (1 samples, 0.07%)</title><rect x="94.2837%" y="549" width="0.0689%" height="15" fill="rgb(221,79,53)" fg:x="1369" fg:w="1"/><text x="94.3837%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;day_12::node::Node&gt;&gt; (1 samples, 0.07%)</title><rect x="94.2837%" y="533" width="0.0689%" height="15" fill="rgb(243,200,35)" fg:x="1369" fg:w="1"/><text x="94.3837%" y="543.50"></text></g><g><title>__GI___libc_free (1 samples, 0.07%)</title><rect x="94.2837%" y="517" width="0.0689%" height="15" fill="rgb(248,60,25)" fg:x="1369" fg:w="1"/><text x="94.3837%" y="527.50"></text></g><g><title>__GI___libc_free (1 samples, 0.07%)</title><rect x="94.4215%" y="165" width="0.0689%" height="15" fill="rgb(227,53,46)" fg:x="1371" fg:w="1"/><text x="94.5215%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="94.4215%" y="341" width="0.1377%" height="15" fill="rgb(216,120,32)" fg:x="1371" fg:w="2"/><text x="94.5215%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="94.4215%" y="325" width="0.1377%" height="15" fill="rgb(220,134,1)" fg:x="1371" fg:w="2"/><text x="94.5215%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.14%)</title><rect x="94.4215%" y="309" width="0.1377%" height="15" fill="rgb(237,168,5)" fg:x="1371" fg:w="2"/><text x="94.5215%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.14%)</title><rect x="94.4215%" y="293" width="0.1377%" height="15" fill="rgb(231,100,33)" fg:x="1371" fg:w="2"/><text x="94.5215%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.14%)</title><rect x="94.4215%" y="277" width="0.1377%" height="15" fill="rgb(236,177,47)" fg:x="1371" fg:w="2"/><text x="94.5215%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="94.4215%" y="261" width="0.1377%" height="15" fill="rgb(235,7,49)" fg:x="1371" fg:w="2"/><text x="94.5215%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="94.4215%" y="245" width="0.1377%" height="15" fill="rgb(232,119,22)" fg:x="1371" fg:w="2"/><text x="94.5215%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.14%)</title><rect x="94.4215%" y="229" width="0.1377%" height="15" fill="rgb(254,73,53)" fg:x="1371" fg:w="2"/><text x="94.5215%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.14%)</title><rect x="94.4215%" y="213" width="0.1377%" height="15" fill="rgb(251,35,20)" fg:x="1371" fg:w="2"/><text x="94.5215%" y="223.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.14%)</title><rect x="94.4215%" y="197" width="0.1377%" height="15" fill="rgb(241,119,20)" fg:x="1371" fg:w="2"/><text x="94.5215%" y="207.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.14%)</title><rect x="94.4215%" y="181" width="0.1377%" height="15" fill="rgb(207,102,14)" fg:x="1371" fg:w="2"/><text x="94.5215%" y="191.50"></text></g><g><title>__rdl_alloc (1 samples, 0.07%)</title><rect x="94.4904%" y="165" width="0.0689%" height="15" fill="rgb(248,201,50)" fg:x="1372" fg:w="1"/><text x="94.5904%" y="175.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.07%)</title><rect x="94.4904%" y="149" width="0.0689%" height="15" fill="rgb(222,185,44)" fg:x="1372" fg:w="1"/><text x="94.5904%" y="159.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseElementSimple&lt;Item&gt; as itertools::intersperse::IntersperseElement&lt;Item&gt;&gt;::generate (3 samples, 0.21%)</title><rect x="94.4215%" y="357" width="0.2066%" height="15" fill="rgb(218,107,18)" fg:x="1371" fg:w="3"/><text x="94.5215%" y="367.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.07%)</title><rect x="94.5592%" y="341" width="0.0689%" height="15" fill="rgb(237,177,39)" fg:x="1373" fg:w="1"/><text x="94.6592%" y="351.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (5 samples, 0.34%)</title><rect x="94.3526%" y="373" width="0.3444%" height="15" fill="rgb(246,69,6)" fg:x="1370" fg:w="5"/><text x="94.4526%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.07%)</title><rect x="94.6281%" y="357" width="0.0689%" height="15" fill="rgb(234,208,37)" fg:x="1374" fg:w="1"/><text x="94.7281%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (1 samples, 0.07%)</title><rect x="94.6281%" y="341" width="0.0689%" height="15" fill="rgb(225,4,6)" fg:x="1374" fg:w="1"/><text x="94.7281%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.07%)</title><rect x="94.6281%" y="325" width="0.0689%" height="15" fill="rgb(233,45,0)" fg:x="1374" fg:w="1"/><text x="94.7281%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="94.6281%" y="309" width="0.0689%" height="15" fill="rgb(226,136,5)" fg:x="1374" fg:w="1"/><text x="94.7281%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.07%)</title><rect x="94.6281%" y="293" width="0.0689%" height="15" fill="rgb(211,91,47)" fg:x="1374" fg:w="1"/><text x="94.7281%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="94.6281%" y="277" width="0.0689%" height="15" fill="rgb(242,88,51)" fg:x="1374" fg:w="1"/><text x="94.7281%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="94.6281%" y="261" width="0.0689%" height="15" fill="rgb(230,91,28)" fg:x="1374" fg:w="1"/><text x="94.7281%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="94.6281%" y="245" width="0.0689%" height="15" fill="rgb(254,186,29)" fg:x="1374" fg:w="1"/><text x="94.7281%" y="255.50"></text></g><g><title>__GI___libc_free (1 samples, 0.07%)</title><rect x="94.6281%" y="229" width="0.0689%" height="15" fill="rgb(238,6,4)" fg:x="1374" fg:w="1"/><text x="94.7281%" y="239.50"></text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="94.6281%" y="213" width="0.0689%" height="15" fill="rgb(221,151,16)" fg:x="1374" fg:w="1"/><text x="94.7281%" y="223.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="94.6970%" y="181" width="0.0689%" height="15" fill="rgb(251,143,52)" fg:x="1375" fg:w="1"/><text x="94.7970%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="94.6970%" y="165" width="0.0689%" height="15" fill="rgb(206,90,15)" fg:x="1375" fg:w="1"/><text x="94.7970%" y="175.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="94.6970%" y="149" width="0.0689%" height="15" fill="rgb(218,35,8)" fg:x="1375" fg:w="1"/><text x="94.7970%" y="159.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="94.6970%" y="133" width="0.0689%" height="15" fill="rgb(239,215,6)" fg:x="1375" fg:w="1"/><text x="94.7970%" y="143.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="94.6970%" y="117" width="0.0689%" height="15" fill="rgb(245,116,39)" fg:x="1375" fg:w="1"/><text x="94.7970%" y="127.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.07%)</title><rect x="94.6970%" y="101" width="0.0689%" height="15" fill="rgb(242,65,28)" fg:x="1375" fg:w="1"/><text x="94.7970%" y="111.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="94.6970%" y="85" width="0.0689%" height="15" fill="rgb(252,132,53)" fg:x="1375" fg:w="1"/><text x="94.7970%" y="95.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="94.6970%" y="357" width="0.1377%" height="15" fill="rgb(224,159,50)" fg:x="1375" fg:w="2"/><text x="94.7970%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.14%)</title><rect x="94.6970%" y="341" width="0.1377%" height="15" fill="rgb(224,93,4)" fg:x="1375" fg:w="2"/><text x="94.7970%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.14%)</title><rect x="94.6970%" y="325" width="0.1377%" height="15" fill="rgb(208,81,34)" fg:x="1375" fg:w="2"/><text x="94.7970%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.14%)</title><rect x="94.6970%" y="309" width="0.1377%" height="15" fill="rgb(233,92,54)" fg:x="1375" fg:w="2"/><text x="94.7970%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.14%)</title><rect x="94.6970%" y="293" width="0.1377%" height="15" fill="rgb(237,21,14)" fg:x="1375" fg:w="2"/><text x="94.7970%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="94.6970%" y="277" width="0.1377%" height="15" fill="rgb(249,128,51)" fg:x="1375" fg:w="2"/><text x="94.7970%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.14%)</title><rect x="94.6970%" y="261" width="0.1377%" height="15" fill="rgb(223,129,24)" fg:x="1375" fg:w="2"/><text x="94.7970%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.14%)</title><rect x="94.6970%" y="245" width="0.1377%" height="15" fill="rgb(231,168,25)" fg:x="1375" fg:w="2"/><text x="94.7970%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.14%)</title><rect x="94.6970%" y="229" width="0.1377%" height="15" fill="rgb(224,39,20)" fg:x="1375" fg:w="2"/><text x="94.7970%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.14%)</title><rect x="94.6970%" y="213" width="0.1377%" height="15" fill="rgb(225,152,53)" fg:x="1375" fg:w="2"/><text x="94.7970%" y="223.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.14%)</title><rect x="94.6970%" y="197" width="0.1377%" height="15" fill="rgb(252,17,24)" fg:x="1375" fg:w="2"/><text x="94.7970%" y="207.50"></text></g><g><title>__GI___libc_free (1 samples, 0.07%)</title><rect x="94.7658%" y="181" width="0.0689%" height="15" fill="rgb(250,114,30)" fg:x="1376" fg:w="1"/><text x="94.8658%" y="191.50"></text></g><g><title>arena_for_chunk (1 samples, 0.07%)</title><rect x="94.7658%" y="165" width="0.0689%" height="15" fill="rgb(229,5,4)" fg:x="1376" fg:w="1"/><text x="94.8658%" y="175.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_contains (8 samples, 0.55%)</title><rect x="94.3526%" y="549" width="0.5510%" height="15" fill="rgb(225,176,49)" fg:x="1370" fg:w="8"/><text x="94.4526%" y="559.50"></text></g><g><title>day_12::dfs::path_to_string (8 samples, 0.55%)</title><rect x="94.3526%" y="533" width="0.5510%" height="15" fill="rgb(224,221,49)" fg:x="1370" fg:w="8"/><text x="94.4526%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.55%)</title><rect x="94.3526%" y="517" width="0.5510%" height="15" fill="rgb(253,169,27)" fg:x="1370" fg:w="8"/><text x="94.4526%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (8 samples, 0.55%)</title><rect x="94.3526%" y="501" width="0.5510%" height="15" fill="rgb(211,206,16)" fg:x="1370" fg:w="8"/><text x="94.4526%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (8 samples, 0.55%)</title><rect x="94.3526%" y="485" width="0.5510%" height="15" fill="rgb(244,87,35)" fg:x="1370" fg:w="8"/><text x="94.4526%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (8 samples, 0.55%)</title><rect x="94.3526%" y="469" width="0.5510%" height="15" fill="rgb(246,28,10)" fg:x="1370" fg:w="8"/><text x="94.4526%" y="479.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.55%)</title><rect x="94.3526%" y="453" width="0.5510%" height="15" fill="rgb(229,12,44)" fg:x="1370" fg:w="8"/><text x="94.4526%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.55%)</title><rect x="94.3526%" y="437" width="0.5510%" height="15" fill="rgb(210,145,37)" fg:x="1370" fg:w="8"/><text x="94.4526%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (8 samples, 0.55%)</title><rect x="94.3526%" y="421" width="0.5510%" height="15" fill="rgb(227,112,52)" fg:x="1370" fg:w="8"/><text x="94.4526%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (8 samples, 0.55%)</title><rect x="94.3526%" y="405" width="0.5510%" height="15" fill="rgb(238,155,34)" fg:x="1370" fg:w="8"/><text x="94.4526%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (8 samples, 0.55%)</title><rect x="94.3526%" y="389" width="0.5510%" height="15" fill="rgb(239,226,36)" fg:x="1370" fg:w="8"/><text x="94.4526%" y="399.50"></text></g><g><title>day_12::dfs::path_to_string::{{closure}} (3 samples, 0.21%)</title><rect x="94.6970%" y="373" width="0.2066%" height="15" fill="rgb(230,16,23)" fg:x="1375" fg:w="3"/><text x="94.7970%" y="383.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.07%)</title><rect x="94.8347%" y="357" width="0.0689%" height="15" fill="rgb(236,171,36)" fg:x="1377" fg:w="1"/><text x="94.9347%" y="367.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseElementSimple&lt;Item&gt; as itertools::intersperse::IntersperseElement&lt;Item&gt;&gt;::generate (1 samples, 0.07%)</title><rect x="94.9036%" y="357" width="0.0689%" height="15" fill="rgb(221,22,14)" fg:x="1378" fg:w="1"/><text x="95.0036%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="94.9036%" y="341" width="0.0689%" height="15" fill="rgb(242,43,11)" fg:x="1378" fg:w="1"/><text x="95.0036%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="94.9036%" y="325" width="0.0689%" height="15" fill="rgb(232,69,23)" fg:x="1378" fg:w="1"/><text x="95.0036%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="94.9036%" y="309" width="0.0689%" height="15" fill="rgb(216,180,54)" fg:x="1378" fg:w="1"/><text x="95.0036%" y="319.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="94.9036%" y="293" width="0.0689%" height="15" fill="rgb(216,5,24)" fg:x="1378" fg:w="1"/><text x="95.0036%" y="303.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="94.9036%" y="277" width="0.0689%" height="15" fill="rgb(225,89,9)" fg:x="1378" fg:w="1"/><text x="95.0036%" y="287.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.07%)</title><rect x="94.9036%" y="261" width="0.0689%" height="15" fill="rgb(243,75,33)" fg:x="1378" fg:w="1"/><text x="95.0036%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="94.9036%" y="245" width="0.0689%" height="15" fill="rgb(247,141,45)" fg:x="1378" fg:w="1"/><text x="95.0036%" y="255.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.07%)</title><rect x="94.9036%" y="229" width="0.0689%" height="15" fill="rgb(232,177,36)" fg:x="1378" fg:w="1"/><text x="95.0036%" y="239.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.07%)</title><rect x="94.9725%" y="325" width="0.0689%" height="15" fill="rgb(219,125,36)" fg:x="1379" fg:w="1"/><text x="95.0725%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.07%)</title><rect x="94.9725%" y="309" width="0.0689%" height="15" fill="rgb(227,94,9)" fg:x="1379" fg:w="1"/><text x="95.0725%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="94.9725%" y="293" width="0.0689%" height="15" fill="rgb(240,34,52)" fg:x="1379" fg:w="1"/><text x="95.0725%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.07%)</title><rect x="94.9725%" y="277" width="0.0689%" height="15" fill="rgb(216,45,12)" fg:x="1379" fg:w="1"/><text x="95.0725%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="94.9725%" y="261" width="0.0689%" height="15" fill="rgb(246,21,19)" fg:x="1379" fg:w="1"/><text x="95.0725%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="94.9725%" y="245" width="0.0689%" height="15" fill="rgb(213,98,42)" fg:x="1379" fg:w="1"/><text x="95.0725%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="94.9725%" y="229" width="0.0689%" height="15" fill="rgb(250,136,47)" fg:x="1379" fg:w="1"/><text x="95.0725%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="94.9725%" y="213" width="0.0689%" height="15" fill="rgb(251,124,27)" fg:x="1379" fg:w="1"/><text x="95.0725%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="94.9725%" y="197" width="0.0689%" height="15" fill="rgb(229,180,14)" fg:x="1379" fg:w="1"/><text x="95.0725%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="94.9725%" y="181" width="0.0689%" height="15" fill="rgb(245,216,25)" fg:x="1379" fg:w="1"/><text x="95.0725%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="94.9725%" y="165" width="0.0689%" height="15" fill="rgb(251,43,5)" fg:x="1379" fg:w="1"/><text x="95.0725%" y="175.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="94.9725%" y="149" width="0.0689%" height="15" fill="rgb(250,128,24)" fg:x="1379" fg:w="1"/><text x="95.0725%" y="159.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.07%)</title><rect x="94.9725%" y="133" width="0.0689%" height="15" fill="rgb(217,117,27)" fg:x="1379" fg:w="1"/><text x="95.0725%" y="143.50"></text></g><g><title>_int_realloc (1 samples, 0.07%)</title><rect x="94.9725%" y="117" width="0.0689%" height="15" fill="rgb(245,147,4)" fg:x="1379" fg:w="1"/><text x="95.0725%" y="127.50"></text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="94.9725%" y="101" width="0.0689%" height="15" fill="rgb(242,201,35)" fg:x="1379" fg:w="1"/><text x="95.0725%" y="111.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="95.0413%" y="229" width="0.0689%" height="15" fill="rgb(218,181,1)" fg:x="1380" fg:w="1"/><text x="95.1413%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.07%)</title><rect x="95.0413%" y="213" width="0.0689%" height="15" fill="rgb(222,6,29)" fg:x="1380" fg:w="1"/><text x="95.1413%" y="223.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.07%)</title><rect x="95.0413%" y="197" width="0.0689%" height="15" fill="rgb(208,186,3)" fg:x="1380" fg:w="1"/><text x="95.1413%" y="207.50"></text></g><g><title>day_12::dfs::path_to_string (4 samples, 0.28%)</title><rect x="94.9036%" y="533" width="0.2755%" height="15" fill="rgb(216,36,26)" fg:x="1378" fg:w="4"/><text x="95.0036%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.28%)</title><rect x="94.9036%" y="517" width="0.2755%" height="15" fill="rgb(248,201,23)" fg:x="1378" fg:w="4"/><text x="95.0036%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (4 samples, 0.28%)</title><rect x="94.9036%" y="501" width="0.2755%" height="15" fill="rgb(251,170,31)" fg:x="1378" fg:w="4"/><text x="95.0036%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (4 samples, 0.28%)</title><rect x="94.9036%" y="485" width="0.2755%" height="15" fill="rgb(207,110,25)" fg:x="1378" fg:w="4"/><text x="95.0036%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (4 samples, 0.28%)</title><rect x="94.9036%" y="469" width="0.2755%" height="15" fill="rgb(250,54,15)" fg:x="1378" fg:w="4"/><text x="95.0036%" y="479.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.28%)</title><rect x="94.9036%" y="453" width="0.2755%" height="15" fill="rgb(227,68,33)" fg:x="1378" fg:w="4"/><text x="95.0036%" y="463.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.28%)</title><rect x="94.9036%" y="437" width="0.2755%" height="15" fill="rgb(238,34,41)" fg:x="1378" fg:w="4"/><text x="95.0036%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.28%)</title><rect x="94.9036%" y="421" width="0.2755%" height="15" fill="rgb(220,11,15)" fg:x="1378" fg:w="4"/><text x="95.0036%" y="431.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.28%)</title><rect x="94.9036%" y="405" width="0.2755%" height="15" fill="rgb(246,111,35)" fg:x="1378" fg:w="4"/><text x="95.0036%" y="415.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.28%)</title><rect x="94.9036%" y="389" width="0.2755%" height="15" fill="rgb(209,88,53)" fg:x="1378" fg:w="4"/><text x="95.0036%" y="399.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (4 samples, 0.28%)</title><rect x="94.9036%" y="373" width="0.2755%" height="15" fill="rgb(231,185,47)" fg:x="1378" fg:w="4"/><text x="95.0036%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.21%)</title><rect x="94.9725%" y="357" width="0.2066%" height="15" fill="rgb(233,154,1)" fg:x="1379" fg:w="3"/><text x="95.0725%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (3 samples, 0.21%)</title><rect x="94.9725%" y="341" width="0.2066%" height="15" fill="rgb(225,15,46)" fg:x="1379" fg:w="3"/><text x="95.0725%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.14%)</title><rect x="95.0413%" y="325" width="0.1377%" height="15" fill="rgb(211,135,41)" fg:x="1380" fg:w="2"/><text x="95.1413%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.14%)</title><rect x="95.0413%" y="309" width="0.1377%" height="15" fill="rgb(208,54,0)" fg:x="1380" fg:w="2"/><text x="95.1413%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.14%)</title><rect x="95.0413%" y="293" width="0.1377%" height="15" fill="rgb(244,136,14)" fg:x="1380" fg:w="2"/><text x="95.1413%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.14%)</title><rect x="95.0413%" y="277" width="0.1377%" height="15" fill="rgb(241,56,14)" fg:x="1380" fg:w="2"/><text x="95.1413%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.14%)</title><rect x="95.0413%" y="261" width="0.1377%" height="15" fill="rgb(205,80,24)" fg:x="1380" fg:w="2"/><text x="95.1413%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.14%)</title><rect x="95.0413%" y="245" width="0.1377%" height="15" fill="rgb(220,57,4)" fg:x="1380" fg:w="2"/><text x="95.1413%" y="255.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.07%)</title><rect x="95.1102%" y="229" width="0.0689%" height="15" fill="rgb(226,193,50)" fg:x="1381" fg:w="1"/><text x="95.2102%" y="239.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (4 samples, 0.28%)</title><rect x="95.1791%" y="229" width="0.2755%" height="15" fill="rgb(231,168,22)" fg:x="1382" fg:w="4"/><text x="95.2791%" y="239.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.07%)</title><rect x="95.3857%" y="213" width="0.0689%" height="15" fill="rgb(254,215,14)" fg:x="1385" fg:w="1"/><text x="95.4857%" y="223.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_push (17 samples, 1.17%)</title><rect x="94.9036%" y="549" width="1.1708%" height="15" fill="rgb(211,115,16)" fg:x="1378" fg:w="17"/><text x="95.0036%" y="559.50">da..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (13 samples, 0.90%)</title><rect x="95.1791%" y="533" width="0.8953%" height="15" fill="rgb(236,210,16)" fg:x="1382" fg:w="13"/><text x="95.2791%" y="543.50">s..</text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (13 samples, 0.90%)</title><rect x="95.1791%" y="517" width="0.8953%" height="15" fill="rgb(221,94,12)" fg:x="1382" fg:w="13"/><text x="95.2791%" y="527.50">h..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (13 samples, 0.90%)</title><rect x="95.1791%" y="501" width="0.8953%" height="15" fill="rgb(235,218,49)" fg:x="1382" fg:w="13"/><text x="95.2791%" y="511.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (13 samples, 0.90%)</title><rect x="95.1791%" y="485" width="0.8953%" height="15" fill="rgb(217,114,14)" fg:x="1382" fg:w="13"/><text x="95.2791%" y="495.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (13 samples, 0.90%)</title><rect x="95.1791%" y="469" width="0.8953%" height="15" fill="rgb(216,145,22)" fg:x="1382" fg:w="13"/><text x="95.2791%" y="479.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (13 samples, 0.90%)</title><rect x="95.1791%" y="453" width="0.8953%" height="15" fill="rgb(217,112,39)" fg:x="1382" fg:w="13"/><text x="95.2791%" y="463.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (13 samples, 0.90%)</title><rect x="95.1791%" y="437" width="0.8953%" height="15" fill="rgb(225,85,32)" fg:x="1382" fg:w="13"/><text x="95.2791%" y="447.50">h..</text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (13 samples, 0.90%)</title><rect x="95.1791%" y="421" width="0.8953%" height="15" fill="rgb(245,209,47)" fg:x="1382" fg:w="13"/><text x="95.2791%" y="431.50">h..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (13 samples, 0.90%)</title><rect x="95.1791%" y="405" width="0.8953%" height="15" fill="rgb(218,220,15)" fg:x="1382" fg:w="13"/><text x="95.2791%" y="415.50">h..</text></g><g><title>hashbrown::map::make_hasher::{{closure}} (13 samples, 0.90%)</title><rect x="95.1791%" y="389" width="0.8953%" height="15" fill="rgb(222,202,31)" fg:x="1382" fg:w="13"/><text x="95.2791%" y="399.50">h..</text></g><g><title>hashbrown::map::make_hash (13 samples, 0.90%)</title><rect x="95.1791%" y="373" width="0.8953%" height="15" fill="rgb(243,203,4)" fg:x="1382" fg:w="13"/><text x="95.2791%" y="383.50">h..</text></g><g><title>core::hash::BuildHasher::hash_one (13 samples, 0.90%)</title><rect x="95.1791%" y="357" width="0.8953%" height="15" fill="rgb(237,92,17)" fg:x="1382" fg:w="13"/><text x="95.2791%" y="367.50">c..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (13 samples, 0.90%)</title><rect x="95.1791%" y="341" width="0.8953%" height="15" fill="rgb(231,119,7)" fg:x="1382" fg:w="13"/><text x="95.2791%" y="351.50">c..</text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (13 samples, 0.90%)</title><rect x="95.1791%" y="325" width="0.8953%" height="15" fill="rgb(237,82,41)" fg:x="1382" fg:w="13"/><text x="95.2791%" y="335.50">&lt;..</text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (13 samples, 0.90%)</title><rect x="95.1791%" y="309" width="0.8953%" height="15" fill="rgb(226,81,48)" fg:x="1382" fg:w="13"/><text x="95.2791%" y="319.50">c..</text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (13 samples, 0.90%)</title><rect x="95.1791%" y="293" width="0.8953%" height="15" fill="rgb(234,70,51)" fg:x="1382" fg:w="13"/><text x="95.2791%" y="303.50">&lt;..</text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (13 samples, 0.90%)</title><rect x="95.1791%" y="277" width="0.8953%" height="15" fill="rgb(251,86,4)" fg:x="1382" fg:w="13"/><text x="95.2791%" y="287.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (13 samples, 0.90%)</title><rect x="95.1791%" y="261" width="0.8953%" height="15" fill="rgb(244,144,28)" fg:x="1382" fg:w="13"/><text x="95.2791%" y="271.50">&lt;..</text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (13 samples, 0.90%)</title><rect x="95.1791%" y="245" width="0.8953%" height="15" fill="rgb(232,161,39)" fg:x="1382" fg:w="13"/><text x="95.2791%" y="255.50">&lt;..</text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.62%)</title><rect x="95.4545%" y="229" width="0.6198%" height="15" fill="rgb(247,34,51)" fg:x="1386" fg:w="9"/><text x="95.5545%" y="239.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseElementSimple&lt;Item&gt; as itertools::intersperse::IntersperseElement&lt;Item&gt;&gt;::generate (1 samples, 0.07%)</title><rect x="96.0744%" y="341" width="0.0689%" height="15" fill="rgb(225,132,2)" fg:x="1395" fg:w="1"/><text x="96.1744%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="96.0744%" y="325" width="0.0689%" height="15" fill="rgb(209,159,44)" fg:x="1395" fg:w="1"/><text x="96.1744%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="96.0744%" y="309" width="0.0689%" height="15" fill="rgb(251,214,1)" fg:x="1395" fg:w="1"/><text x="96.1744%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="96.0744%" y="293" width="0.0689%" height="15" fill="rgb(247,84,47)" fg:x="1395" fg:w="1"/><text x="96.1744%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="96.0744%" y="277" width="0.0689%" height="15" fill="rgb(240,111,43)" fg:x="1395" fg:w="1"/><text x="96.1744%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="96.0744%" y="261" width="0.0689%" height="15" fill="rgb(215,214,35)" fg:x="1395" fg:w="1"/><text x="96.1744%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="96.0744%" y="245" width="0.0689%" height="15" fill="rgb(248,207,23)" fg:x="1395" fg:w="1"/><text x="96.1744%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="96.0744%" y="229" width="0.0689%" height="15" fill="rgb(214,186,4)" fg:x="1395" fg:w="1"/><text x="96.1744%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="96.0744%" y="213" width="0.0689%" height="15" fill="rgb(220,133,22)" fg:x="1395" fg:w="1"/><text x="96.1744%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="96.0744%" y="197" width="0.0689%" height="15" fill="rgb(239,134,19)" fg:x="1395" fg:w="1"/><text x="96.1744%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="96.0744%" y="181" width="0.0689%" height="15" fill="rgb(250,140,9)" fg:x="1395" fg:w="1"/><text x="96.1744%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="96.0744%" y="165" width="0.0689%" height="15" fill="rgb(225,59,14)" fg:x="1395" fg:w="1"/><text x="96.1744%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="96.0744%" y="149" width="0.0689%" height="15" fill="rgb(214,152,51)" fg:x="1395" fg:w="1"/><text x="96.1744%" y="159.50"></text></g><g><title>__GI___libc_free (1 samples, 0.07%)</title><rect x="96.1433%" y="197" width="0.0689%" height="15" fill="rgb(251,227,43)" fg:x="1396" fg:w="1"/><text x="96.2433%" y="207.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.28%)</title><rect x="96.0744%" y="405" width="0.2755%" height="15" fill="rgb(241,96,17)" fg:x="1395" fg:w="4"/><text x="96.1744%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.28%)</title><rect x="96.0744%" y="389" width="0.2755%" height="15" fill="rgb(234,198,43)" fg:x="1395" fg:w="4"/><text x="96.1744%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.28%)</title><rect x="96.0744%" y="373" width="0.2755%" height="15" fill="rgb(220,108,29)" fg:x="1395" fg:w="4"/><text x="96.1744%" y="383.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (4 samples, 0.28%)</title><rect x="96.0744%" y="357" width="0.2755%" height="15" fill="rgb(226,163,33)" fg:x="1395" fg:w="4"/><text x="96.1744%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (3 samples, 0.21%)</title><rect x="96.1433%" y="341" width="0.2066%" height="15" fill="rgb(205,194,45)" fg:x="1396" fg:w="3"/><text x="96.2433%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend::{{closure}} (3 samples, 0.21%)</title><rect x="96.1433%" y="325" width="0.2066%" height="15" fill="rgb(206,143,44)" fg:x="1396" fg:w="3"/><text x="96.2433%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (3 samples, 0.21%)</title><rect x="96.1433%" y="309" width="0.2066%" height="15" fill="rgb(236,136,36)" fg:x="1396" fg:w="3"/><text x="96.2433%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (3 samples, 0.21%)</title><rect x="96.1433%" y="293" width="0.2066%" height="15" fill="rgb(249,172,42)" fg:x="1396" fg:w="3"/><text x="96.2433%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (3 samples, 0.21%)</title><rect x="96.1433%" y="277" width="0.2066%" height="15" fill="rgb(216,139,23)" fg:x="1396" fg:w="3"/><text x="96.2433%" y="287.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.21%)</title><rect x="96.1433%" y="261" width="0.2066%" height="15" fill="rgb(207,166,20)" fg:x="1396" fg:w="3"/><text x="96.2433%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.21%)</title><rect x="96.1433%" y="245" width="0.2066%" height="15" fill="rgb(210,209,22)" fg:x="1396" fg:w="3"/><text x="96.2433%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.21%)</title><rect x="96.1433%" y="229" width="0.2066%" height="15" fill="rgb(232,118,20)" fg:x="1396" fg:w="3"/><text x="96.2433%" y="239.50"></text></g><g><title>__GI___libc_free (3 samples, 0.21%)</title><rect x="96.1433%" y="213" width="0.2066%" height="15" fill="rgb(238,113,42)" fg:x="1396" fg:w="3"/><text x="96.2433%" y="223.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.14%)</title><rect x="96.2121%" y="197" width="0.1377%" height="15" fill="rgb(231,42,5)" fg:x="1397" fg:w="2"/><text x="96.3121%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.14%)</title><rect x="96.2121%" y="181" width="0.1377%" height="15" fill="rgb(243,166,24)" fg:x="1397" fg:w="2"/><text x="96.3121%" y="191.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.14%)</title><rect x="96.2121%" y="165" width="0.1377%" height="15" fill="rgb(237,226,12)" fg:x="1397" fg:w="2"/><text x="96.3121%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.14%)</title><rect x="96.2121%" y="149" width="0.1377%" height="15" fill="rgb(229,133,24)" fg:x="1397" fg:w="2"/><text x="96.3121%" y="159.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (2 samples, 0.14%)</title><rect x="96.2121%" y="133" width="0.1377%" height="15" fill="rgb(238,33,43)" fg:x="1397" fg:w="2"/><text x="96.3121%" y="143.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.14%)</title><rect x="96.2121%" y="117" width="0.1377%" height="15" fill="rgb(227,59,38)" fg:x="1397" fg:w="2"/><text x="96.3121%" y="127.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_contains (5 samples, 0.34%)</title><rect x="96.0744%" y="533" width="0.3444%" height="15" fill="rgb(230,97,0)" fg:x="1395" fg:w="5"/><text x="96.1744%" y="543.50"></text></g><g><title>day_12::dfs::path_to_string (5 samples, 0.34%)</title><rect x="96.0744%" y="517" width="0.3444%" height="15" fill="rgb(250,173,50)" fg:x="1395" fg:w="5"/><text x="96.1744%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.34%)</title><rect x="96.0744%" y="501" width="0.3444%" height="15" fill="rgb(240,15,50)" fg:x="1395" fg:w="5"/><text x="96.1744%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (5 samples, 0.34%)</title><rect x="96.0744%" y="485" width="0.3444%" height="15" fill="rgb(221,93,22)" fg:x="1395" fg:w="5"/><text x="96.1744%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (5 samples, 0.34%)</title><rect x="96.0744%" y="469" width="0.3444%" height="15" fill="rgb(245,180,53)" fg:x="1395" fg:w="5"/><text x="96.1744%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.34%)</title><rect x="96.0744%" y="453" width="0.3444%" height="15" fill="rgb(231,88,51)" fg:x="1395" fg:w="5"/><text x="96.1744%" y="463.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.34%)</title><rect x="96.0744%" y="437" width="0.3444%" height="15" fill="rgb(240,58,21)" fg:x="1395" fg:w="5"/><text x="96.1744%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.34%)</title><rect x="96.0744%" y="421" width="0.3444%" height="15" fill="rgb(237,21,10)" fg:x="1395" fg:w="5"/><text x="96.1744%" y="431.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="96.3499%" y="405" width="0.0689%" height="15" fill="rgb(218,43,11)" fg:x="1399" fg:w="1"/><text x="96.4499%" y="415.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (1 samples, 0.07%)</title><rect x="96.3499%" y="389" width="0.0689%" height="15" fill="rgb(218,221,29)" fg:x="1399" fg:w="1"/><text x="96.4499%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="96.3499%" y="373" width="0.0689%" height="15" fill="rgb(214,118,42)" fg:x="1399" fg:w="1"/><text x="96.4499%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="96.3499%" y="357" width="0.0689%" height="15" fill="rgb(251,200,26)" fg:x="1399" fg:w="1"/><text x="96.4499%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="96.3499%" y="341" width="0.0689%" height="15" fill="rgb(237,101,39)" fg:x="1399" fg:w="1"/><text x="96.4499%" y="351.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.07%)</title><rect x="96.3499%" y="325" width="0.0689%" height="15" fill="rgb(251,117,11)" fg:x="1399" fg:w="1"/><text x="96.4499%" y="335.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="96.3499%" y="309" width="0.0689%" height="15" fill="rgb(216,223,23)" fg:x="1399" fg:w="1"/><text x="96.4499%" y="319.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (6 samples, 0.41%)</title><rect x="96.0744%" y="549" width="0.4132%" height="15" fill="rgb(251,54,12)" fg:x="1395" fg:w="6"/><text x="96.1744%" y="559.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_push (1 samples, 0.07%)</title><rect x="96.4187%" y="533" width="0.0689%" height="15" fill="rgb(254,176,54)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="543.50"></text></g><g><title>day_12::dfs::path_to_string (1 samples, 0.07%)</title><rect x="96.4187%" y="517" width="0.0689%" height="15" fill="rgb(210,32,8)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="96.4187%" y="501" width="0.0689%" height="15" fill="rgb(235,52,38)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;alloc::string::String&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="96.4187%" y="485" width="0.0689%" height="15" fill="rgb(231,4,44)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;alloc::string::String&gt;&gt;::extend (1 samples, 0.07%)</title><rect x="96.4187%" y="469" width="0.0689%" height="15" fill="rgb(249,2,32)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.07%)</title><rect x="96.4187%" y="453" width="0.0689%" height="15" fill="rgb(224,65,26)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="463.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="96.4187%" y="437" width="0.0689%" height="15" fill="rgb(250,73,40)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="96.4187%" y="421" width="0.0689%" height="15" fill="rgb(253,177,16)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="431.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="96.4187%" y="405" width="0.0689%" height="15" fill="rgb(217,32,34)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="96.4187%" y="389" width="0.0689%" height="15" fill="rgb(212,7,10)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="399.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="96.4187%" y="373" width="0.0689%" height="15" fill="rgb(245,89,8)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="383.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (1 samples, 0.07%)</title><rect x="96.4187%" y="357" width="0.0689%" height="15" fill="rgb(237,16,53)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="367.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseElementSimple&lt;Item&gt; as itertools::intersperse::IntersperseElement&lt;Item&gt;&gt;::generate (1 samples, 0.07%)</title><rect x="96.4187%" y="341" width="0.0689%" height="15" fill="rgb(250,204,30)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="96.4187%" y="325" width="0.0689%" height="15" fill="rgb(208,77,27)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="96.4187%" y="309" width="0.0689%" height="15" fill="rgb(250,204,28)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.07%)</title><rect x="96.4187%" y="293" width="0.0689%" height="15" fill="rgb(244,63,21)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.07%)</title><rect x="96.4187%" y="277" width="0.0689%" height="15" fill="rgb(236,85,44)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.07%)</title><rect x="96.4187%" y="261" width="0.0689%" height="15" fill="rgb(215,98,4)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="96.4187%" y="245" width="0.0689%" height="15" fill="rgb(235,38,11)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.07%)</title><rect x="96.4187%" y="229" width="0.0689%" height="15" fill="rgb(254,186,25)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.07%)</title><rect x="96.4187%" y="213" width="0.0689%" height="15" fill="rgb(225,55,31)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.07%)</title><rect x="96.4187%" y="197" width="0.0689%" height="15" fill="rgb(211,15,21)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="207.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.07%)</title><rect x="96.4187%" y="181" width="0.0689%" height="15" fill="rgb(215,187,41)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="191.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.07%)</title><rect x="96.4187%" y="165" width="0.0689%" height="15" fill="rgb(248,69,32)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="175.50"></text></g><g><title>__rust_dealloc (1 samples, 0.07%)</title><rect x="96.4187%" y="149" width="0.0689%" height="15" fill="rgb(252,102,52)" fg:x="1400" fg:w="1"/><text x="96.5187%" y="159.50"></text></g><g><title>day_12::node::Node::rc_connections (1 samples, 0.07%)</title><rect x="96.4876%" y="549" width="0.0689%" height="15" fill="rgb(253,140,32)" fg:x="1401" fg:w="1"/><text x="96.5876%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="96.4876%" y="533" width="0.0689%" height="15" fill="rgb(216,56,42)" fg:x="1401" fg:w="1"/><text x="96.5876%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="96.4876%" y="517" width="0.0689%" height="15" fill="rgb(216,184,14)" fg:x="1401" fg:w="1"/><text x="96.5876%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="96.4876%" y="501" width="0.0689%" height="15" fill="rgb(237,187,27)" fg:x="1401" fg:w="1"/><text x="96.5876%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="96.4876%" y="485" width="0.0689%" height="15" fill="rgb(219,65,3)" fg:x="1401" fg:w="1"/><text x="96.5876%" y="495.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="96.4876%" y="469" width="0.0689%" height="15" fill="rgb(245,83,25)" fg:x="1401" fg:w="1"/><text x="96.5876%" y="479.50"></text></g><g><title>&lt;itertools::intersperse::IntersperseWith&lt;I,ElemF&gt; as core::iter::traits::iterator::Iterator&gt;::fold::{{closure}} (1 samples, 0.07%)</title><rect x="96.4876%" y="453" width="0.0689%" height="15" fill="rgb(214,205,45)" fg:x="1401" fg:w="1"/><text x="96.5876%" y="463.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (34 samples, 2.34%)</title><rect x="94.2837%" y="565" width="2.3416%" height="15" fill="rgb(241,20,18)" fg:x="1369" fg:w="34"/><text x="94.3837%" y="575.50">day_12:..</text></g><g><title>itertools::Itertools::counts (1 samples, 0.07%)</title><rect x="96.5565%" y="549" width="0.0689%" height="15" fill="rgb(232,163,23)" fg:x="1402" fg:w="1"/><text x="96.6565%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.07%)</title><rect x="96.5565%" y="533" width="0.0689%" height="15" fill="rgb(214,5,46)" fg:x="1402" fg:w="1"/><text x="96.6565%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="96.5565%" y="517" width="0.0689%" height="15" fill="rgb(229,78,17)" fg:x="1402" fg:w="1"/><text x="96.6565%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="96.5565%" y="501" width="0.0689%" height="15" fill="rgb(248,89,10)" fg:x="1402" fg:w="1"/><text x="96.6565%" y="511.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (1 samples, 0.07%)</title><rect x="96.5565%" y="485" width="0.0689%" height="15" fill="rgb(248,54,15)" fg:x="1402" fg:w="1"/><text x="96.6565%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.07%)</title><rect x="96.5565%" y="469" width="0.0689%" height="15" fill="rgb(223,116,6)" fg:x="1402" fg:w="1"/><text x="96.6565%" y="479.50"></text></g><g><title>itertools::Itertools::counts::{{closure}} (1 samples, 0.07%)</title><rect x="96.5565%" y="453" width="0.0689%" height="15" fill="rgb(205,125,38)" fg:x="1402" fg:w="1"/><text x="96.6565%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.07%)</title><rect x="96.5565%" y="437" width="0.0689%" height="15" fill="rgb(251,78,38)" fg:x="1402" fg:w="1"/><text x="96.6565%" y="447.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.07%)</title><rect x="96.5565%" y="421" width="0.0689%" height="15" fill="rgb(253,78,28)" fg:x="1402" fg:w="1"/><text x="96.6565%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.07%)</title><rect x="96.5565%" y="405" width="0.0689%" height="15" fill="rgb(209,120,3)" fg:x="1402" fg:w="1"/><text x="96.6565%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="96.5565%" y="389" width="0.0689%" height="15" fill="rgb(238,229,9)" fg:x="1402" fg:w="1"/><text x="96.6565%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.07%)</title><rect x="96.5565%" y="373" width="0.0689%" height="15" fill="rgb(253,159,18)" fg:x="1402" fg:w="1"/><text x="96.6565%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.07%)</title><rect x="96.5565%" y="357" width="0.0689%" height="15" fill="rgb(244,42,34)" fg:x="1402" fg:w="1"/><text x="96.6565%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.07%)</title><rect x="96.5565%" y="341" width="0.0689%" height="15" fill="rgb(224,8,7)" fg:x="1402" fg:w="1"/><text x="96.6565%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (1 samples, 0.07%)</title><rect x="96.5565%" y="325" width="0.0689%" height="15" fill="rgb(210,201,45)" fg:x="1402" fg:w="1"/><text x="96.6565%" y="335.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="96.5565%" y="309" width="0.0689%" height="15" fill="rgb(252,185,21)" fg:x="1402" fg:w="1"/><text x="96.6565%" y="319.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (1 samples, 0.07%)</title><rect x="96.5565%" y="293" width="0.0689%" height="15" fill="rgb(223,131,1)" fg:x="1402" fg:w="1"/><text x="96.6565%" y="303.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.07%)</title><rect x="96.5565%" y="277" width="0.0689%" height="15" fill="rgb(245,141,16)" fg:x="1402" fg:w="1"/><text x="96.6565%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="96.5565%" y="261" width="0.0689%" height="15" fill="rgb(229,55,45)" fg:x="1402" fg:w="1"/><text x="96.6565%" y="271.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="96.5565%" y="245" width="0.0689%" height="15" fill="rgb(208,92,15)" fg:x="1402" fg:w="1"/><text x="96.6565%" y="255.50"></text></g><g><title>__memcpy_evex_unaligned_erms (1 samples, 0.07%)</title><rect x="96.5565%" y="229" width="0.0689%" height="15" fill="rgb(234,185,47)" fg:x="1402" fg:w="1"/><text x="96.6565%" y="239.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.07%)</title><rect x="96.6253%" y="421" width="0.0689%" height="15" fill="rgb(253,104,50)" fg:x="1403" fg:w="1"/><text x="96.7253%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="96.6253%" y="405" width="0.0689%" height="15" fill="rgb(205,70,7)" fg:x="1403" fg:w="1"/><text x="96.7253%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.07%)</title><rect x="96.6253%" y="389" width="0.0689%" height="15" fill="rgb(240,178,43)" fg:x="1403" fg:w="1"/><text x="96.7253%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.07%)</title><rect x="96.6253%" y="373" width="0.0689%" height="15" fill="rgb(214,112,2)" fg:x="1403" fg:w="1"/><text x="96.7253%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.07%)</title><rect x="96.6253%" y="357" width="0.0689%" height="15" fill="rgb(206,46,17)" fg:x="1403" fg:w="1"/><text x="96.7253%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (1 samples, 0.07%)</title><rect x="96.6253%" y="341" width="0.0689%" height="15" fill="rgb(225,220,16)" fg:x="1403" fg:w="1"/><text x="96.7253%" y="351.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.07%)</title><rect x="96.6253%" y="325" width="0.0689%" height="15" fill="rgb(238,65,40)" fg:x="1403" fg:w="1"/><text x="96.7253%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.07%)</title><rect x="96.6253%" y="309" width="0.0689%" height="15" fill="rgb(230,151,21)" fg:x="1403" fg:w="1"/><text x="96.7253%" y="319.50"></text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="96.6253%" y="293" width="0.0689%" height="15" fill="rgb(218,58,49)" fg:x="1403" fg:w="1"/><text x="96.7253%" y="303.50"></text></g><g><title>_int_free (2 samples, 0.14%)</title><rect x="96.6942%" y="405" width="0.1377%" height="15" fill="rgb(219,179,14)" fg:x="1404" fg:w="2"/><text x="96.7942%" y="415.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.07%)</title><rect x="96.8320%" y="389" width="0.0689%" height="15" fill="rgb(223,72,1)" fg:x="1406" fg:w="1"/><text x="96.9320%" y="399.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.07%)</title><rect x="96.9008%" y="213" width="0.0689%" height="15" fill="rgb(238,126,10)" fg:x="1407" fg:w="1"/><text x="97.0008%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.14%)</title><rect x="96.9008%" y="229" width="0.1377%" height="15" fill="rgb(224,206,38)" fg:x="1407" fg:w="2"/><text x="97.0008%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="96.9697%" y="213" width="0.0689%" height="15" fill="rgb(212,201,54)" fg:x="1408" fg:w="1"/><text x="97.0697%" y="223.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (70 samples, 4.82%)</title><rect x="92.2865%" y="581" width="4.8209%" height="15" fill="rgb(218,154,48)" fg:x="1340" fg:w="70"/><text x="92.3865%" y="591.50">day_12::dfs::DfsVi..</text></g><g><title>itertools::Itertools::counts (7 samples, 0.48%)</title><rect x="96.6253%" y="565" width="0.4821%" height="15" fill="rgb(232,93,24)" fg:x="1403" fg:w="7"/><text x="96.7253%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.48%)</title><rect x="96.6253%" y="549" width="0.4821%" height="15" fill="rgb(245,30,21)" fg:x="1403" fg:w="7"/><text x="96.7253%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.48%)</title><rect x="96.6253%" y="533" width="0.4821%" height="15" fill="rgb(242,148,29)" fg:x="1403" fg:w="7"/><text x="96.7253%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.48%)</title><rect x="96.6253%" y="517" width="0.4821%" height="15" fill="rgb(244,153,54)" fg:x="1403" fg:w="7"/><text x="96.7253%" y="527.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (7 samples, 0.48%)</title><rect x="96.6253%" y="501" width="0.4821%" height="15" fill="rgb(252,87,22)" fg:x="1403" fg:w="7"/><text x="96.7253%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (7 samples, 0.48%)</title><rect x="96.6253%" y="485" width="0.4821%" height="15" fill="rgb(210,51,29)" fg:x="1403" fg:w="7"/><text x="96.7253%" y="495.50"></text></g><g><title>itertools::Itertools::counts::{{closure}} (7 samples, 0.48%)</title><rect x="96.6253%" y="469" width="0.4821%" height="15" fill="rgb(242,136,47)" fg:x="1403" fg:w="7"/><text x="96.7253%" y="479.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (7 samples, 0.48%)</title><rect x="96.6253%" y="453" width="0.4821%" height="15" fill="rgb(238,68,4)" fg:x="1403" fg:w="7"/><text x="96.7253%" y="463.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (7 samples, 0.48%)</title><rect x="96.6253%" y="437" width="0.4821%" height="15" fill="rgb(242,161,30)" fg:x="1403" fg:w="7"/><text x="96.7253%" y="447.50"></text></g><g><title>hashbrown::map::make_insert_hash (6 samples, 0.41%)</title><rect x="96.6942%" y="421" width="0.4132%" height="15" fill="rgb(218,58,44)" fg:x="1404" fg:w="6"/><text x="96.7942%" y="431.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.28%)</title><rect x="96.8320%" y="405" width="0.2755%" height="15" fill="rgb(252,125,32)" fg:x="1406" fg:w="4"/><text x="96.9320%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.21%)</title><rect x="96.9008%" y="389" width="0.2066%" height="15" fill="rgb(219,178,0)" fg:x="1407" fg:w="3"/><text x="97.0008%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (3 samples, 0.21%)</title><rect x="96.9008%" y="373" width="0.2066%" height="15" fill="rgb(213,152,7)" fg:x="1407" fg:w="3"/><text x="97.0008%" y="383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::hash::Hash&gt;::hash (3 samples, 0.21%)</title><rect x="96.9008%" y="357" width="0.2066%" height="15" fill="rgb(249,109,34)" fg:x="1407" fg:w="3"/><text x="97.0008%" y="367.50"></text></g><g><title>&lt;day_12::node::Node as core::hash::Hash&gt;::hash (3 samples, 0.21%)</title><rect x="96.9008%" y="341" width="0.2066%" height="15" fill="rgb(232,96,21)" fg:x="1407" fg:w="3"/><text x="97.0008%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (3 samples, 0.21%)</title><rect x="96.9008%" y="325" width="0.2066%" height="15" fill="rgb(228,27,39)" fg:x="1407" fg:w="3"/><text x="97.0008%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.21%)</title><rect x="96.9008%" y="309" width="0.2066%" height="15" fill="rgb(211,182,52)" fg:x="1407" fg:w="3"/><text x="97.0008%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (3 samples, 0.21%)</title><rect x="96.9008%" y="293" width="0.2066%" height="15" fill="rgb(234,178,38)" fg:x="1407" fg:w="3"/><text x="97.0008%" y="303.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (3 samples, 0.21%)</title><rect x="96.9008%" y="277" width="0.2066%" height="15" fill="rgb(221,111,3)" fg:x="1407" fg:w="3"/><text x="97.0008%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (3 samples, 0.21%)</title><rect x="96.9008%" y="261" width="0.2066%" height="15" fill="rgb(228,175,21)" fg:x="1407" fg:w="3"/><text x="97.0008%" y="271.50"></text></g><g><title>core::hash::Hasher::write_u8 (3 samples, 0.21%)</title><rect x="96.9008%" y="245" width="0.2066%" height="15" fill="rgb(228,174,43)" fg:x="1407" fg:w="3"/><text x="97.0008%" y="255.50"></text></g><g><title>__memcmp_evex_movbe (1 samples, 0.07%)</title><rect x="97.0386%" y="229" width="0.0689%" height="15" fill="rgb(211,191,0)" fg:x="1409" fg:w="1"/><text x="97.1386%" y="239.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_default (1 samples, 0.07%)</title><rect x="97.1074%" y="469" width="0.0689%" height="15" fill="rgb(253,117,3)" fg:x="1410" fg:w="1"/><text x="97.2074%" y="479.50"></text></g><g><title>std::collections::hash::map::VacantEntry&lt;K,V&gt;::insert (1 samples, 0.07%)</title><rect x="97.1074%" y="453" width="0.0689%" height="15" fill="rgb(241,127,19)" fg:x="1410" fg:w="1"/><text x="97.2074%" y="463.50"></text></g><g><title>hashbrown::rustc_entry::RustcVacantEntry&lt;K,V,A&gt;::insert (1 samples, 0.07%)</title><rect x="97.1074%" y="437" width="0.0689%" height="15" fill="rgb(218,103,12)" fg:x="1410" fg:w="1"/><text x="97.2074%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert_no_grow (1 samples, 0.07%)</title><rect x="97.1074%" y="421" width="0.0689%" height="15" fill="rgb(236,214,43)" fg:x="1410" fg:w="1"/><text x="97.2074%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.07%)</title><rect x="97.1074%" y="405" width="0.0689%" height="15" fill="rgb(244,144,19)" fg:x="1410" fg:w="1"/><text x="97.2074%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.07%)</title><rect x="97.1074%" y="389" width="0.0689%" height="15" fill="rgb(246,188,10)" fg:x="1410" fg:w="1"/><text x="97.2074%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (1 samples, 0.07%)</title><rect x="97.1074%" y="373" width="0.0689%" height="15" fill="rgb(212,193,33)" fg:x="1410" fg:w="1"/><text x="97.2074%" y="383.50"></text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="97.2452%" y="309" width="0.0689%" height="15" fill="rgb(241,51,29)" fg:x="1412" fg:w="1"/><text x="97.3452%" y="319.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.07%)</title><rect x="97.3140%" y="293" width="0.0689%" height="15" fill="rgb(211,58,19)" fg:x="1413" fg:w="1"/><text x="97.4140%" y="303.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.07%)</title><rect x="97.3140%" y="277" width="0.0689%" height="15" fill="rgb(229,111,26)" fg:x="1413" fg:w="1"/><text x="97.4140%" y="287.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.07%)</title><rect x="97.3140%" y="261" width="0.0689%" height="15" fill="rgb(213,115,40)" fg:x="1413" fg:w="1"/><text x="97.4140%" y="271.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.07%)</title><rect x="97.3140%" y="245" width="0.0689%" height="15" fill="rgb(209,56,44)" fg:x="1413" fg:w="1"/><text x="97.4140%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.3140%" y="229" width="0.0689%" height="15" fill="rgb(230,108,32)" fg:x="1413" fg:w="1"/><text x="97.4140%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.3140%" y="213" width="0.0689%" height="15" fill="rgb(216,165,31)" fg:x="1413" fg:w="1"/><text x="97.4140%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.3140%" y="197" width="0.0689%" height="15" fill="rgb(218,122,21)" fg:x="1413" fg:w="1"/><text x="97.4140%" y="207.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.3140%" y="181" width="0.0689%" height="15" fill="rgb(223,224,47)" fg:x="1413" fg:w="1"/><text x="97.4140%" y="191.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.3140%" y="165" width="0.0689%" height="15" fill="rgb(238,102,44)" fg:x="1413" fg:w="1"/><text x="97.4140%" y="175.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.3140%" y="149" width="0.0689%" height="15" fill="rgb(236,46,40)" fg:x="1413" fg:w="1"/><text x="97.4140%" y="159.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.3140%" y="133" width="0.0689%" height="15" fill="rgb(247,202,50)" fg:x="1413" fg:w="1"/><text x="97.4140%" y="143.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.3140%" y="117" width="0.0689%" height="15" fill="rgb(209,99,20)" fg:x="1413" fg:w="1"/><text x="97.4140%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.3140%" y="101" width="0.0689%" height="15" fill="rgb(252,27,34)" fg:x="1413" fg:w="1"/><text x="97.4140%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.3140%" y="85" width="0.0689%" height="15" fill="rgb(215,206,23)" fg:x="1413" fg:w="1"/><text x="97.4140%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.3140%" y="69" width="0.0689%" height="15" fill="rgb(212,135,36)" fg:x="1413" fg:w="1"/><text x="97.4140%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.3140%" y="53" width="0.0689%" height="15" fill="rgb(240,189,1)" fg:x="1413" fg:w="1"/><text x="97.4140%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.07%)</title><rect x="97.3140%" y="37" width="0.0689%" height="15" fill="rgb(242,56,20)" fg:x="1413" fg:w="1"/><text x="97.4140%" y="47.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (3 samples, 0.21%)</title><rect x="97.2452%" y="357" width="0.2066%" height="15" fill="rgb(247,132,33)" fg:x="1412" fg:w="3"/><text x="97.3452%" y="367.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (3 samples, 0.21%)</title><rect x="97.2452%" y="341" width="0.2066%" height="15" fill="rgb(208,149,11)" fg:x="1412" fg:w="3"/><text x="97.3452%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.21%)</title><rect x="97.2452%" y="325" width="0.2066%" height="15" fill="rgb(211,33,11)" fg:x="1412" fg:w="3"/><text x="97.3452%" y="335.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.14%)</title><rect x="97.3140%" y="309" width="0.1377%" height="15" fill="rgb(221,29,38)" fg:x="1413" fg:w="2"/><text x="97.4140%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.07%)</title><rect x="97.3829%" y="293" width="0.0689%" height="15" fill="rgb(206,182,49)" fg:x="1414" fg:w="1"/><text x="97.4829%" y="303.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.07%)</title><rect x="97.3829%" y="277" width="0.0689%" height="15" fill="rgb(216,140,1)" fg:x="1414" fg:w="1"/><text x="97.4829%" y="287.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 0.07%)</title><rect x="97.3829%" y="261" width="0.0689%" height="15" fill="rgb(232,57,40)" fg:x="1414" fg:w="1"/><text x="97.4829%" y="271.50"></text></g><g><title>&lt;day_12::node::Node as core::hash::Hash&gt;::hash (1 samples, 0.07%)</title><rect x="97.3829%" y="245" width="0.0689%" height="15" fill="rgb(224,186,18)" fg:x="1414" fg:w="1"/><text x="97.4829%" y="255.50"></text></g><g><title>&lt;day_12::node::Size as core::hash::Hash&gt;::hash (1 samples, 0.07%)</title><rect x="97.3829%" y="229" width="0.0689%" height="15" fill="rgb(215,121,11)" fg:x="1414" fg:w="1"/><text x="97.4829%" y="239.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.07%)</title><rect x="97.3829%" y="213" width="0.0689%" height="15" fill="rgb(245,147,10)" fg:x="1414" fg:w="1"/><text x="97.4829%" y="223.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.07%)</title><rect x="97.3829%" y="197" width="0.0689%" height="15" fill="rgb(238,153,13)" fg:x="1414" fg:w="1"/><text x="97.4829%" y="207.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.07%)</title><rect x="97.3829%" y="181" width="0.0689%" height="15" fill="rgb(233,108,0)" fg:x="1414" fg:w="1"/><text x="97.4829%" y="191.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="97.3829%" y="165" width="0.0689%" height="15" fill="rgb(212,157,17)" fg:x="1414" fg:w="1"/><text x="97.4829%" y="175.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="97.3829%" y="149" width="0.0689%" height="15" fill="rgb(225,213,38)" fg:x="1414" fg:w="1"/><text x="97.4829%" y="159.50"></text></g><g><title>__GI___libc_free (1 samples, 0.07%)</title><rect x="97.3829%" y="133" width="0.0689%" height="15" fill="rgb(248,16,11)" fg:x="1414" fg:w="1"/><text x="97.4829%" y="143.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (4 samples, 0.28%)</title><rect x="97.2452%" y="437" width="0.2755%" height="15" fill="rgb(241,33,4)" fg:x="1412" fg:w="4"/><text x="97.3452%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (4 samples, 0.28%)</title><rect x="97.2452%" y="421" width="0.2755%" height="15" fill="rgb(222,26,43)" fg:x="1412" fg:w="4"/><text x="97.3452%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (4 samples, 0.28%)</title><rect x="97.2452%" y="405" width="0.2755%" height="15" fill="rgb(243,29,36)" fg:x="1412" fg:w="4"/><text x="97.3452%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (4 samples, 0.28%)</title><rect x="97.2452%" y="389" width="0.2755%" height="15" fill="rgb(241,9,27)" fg:x="1412" fg:w="4"/><text x="97.3452%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (4 samples, 0.28%)</title><rect x="97.2452%" y="373" width="0.2755%" height="15" fill="rgb(205,117,26)" fg:x="1412" fg:w="4"/><text x="97.3452%" y="383.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.07%)</title><rect x="97.4518%" y="357" width="0.0689%" height="15" fill="rgb(209,80,39)" fg:x="1415" fg:w="1"/><text x="97.5518%" y="367.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.07%)</title><rect x="97.4518%" y="341" width="0.0689%" height="15" fill="rgb(239,155,6)" fg:x="1415" fg:w="1"/><text x="97.5518%" y="351.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.07%)</title><rect x="97.4518%" y="325" width="0.0689%" height="15" fill="rgb(212,104,12)" fg:x="1415" fg:w="1"/><text x="97.5518%" y="335.50"></text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="97.5207%" y="421" width="0.0689%" height="15" fill="rgb(234,204,3)" fg:x="1416" fg:w="1"/><text x="97.6207%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.07%)</title><rect x="97.5895%" y="341" width="0.0689%" height="15" fill="rgb(251,218,7)" fg:x="1417" fg:w="1"/><text x="97.6895%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.07%)</title><rect x="97.5895%" y="325" width="0.0689%" height="15" fill="rgb(221,81,32)" fg:x="1417" fg:w="1"/><text x="97.6895%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="97.5895%" y="309" width="0.0689%" height="15" fill="rgb(214,152,26)" fg:x="1417" fg:w="1"/><text x="97.6895%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="97.5895%" y="293" width="0.0689%" height="15" fill="rgb(223,22,3)" fg:x="1417" fg:w="1"/><text x="97.6895%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="97.5895%" y="277" width="0.0689%" height="15" fill="rgb(207,174,7)" fg:x="1417" fg:w="1"/><text x="97.6895%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="97.5895%" y="261" width="0.0689%" height="15" fill="rgb(224,19,52)" fg:x="1417" fg:w="1"/><text x="97.6895%" y="271.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (122 samples, 8.40%)</title><rect x="89.3251%" y="597" width="8.4022%" height="15" fill="rgb(228,24,14)" fg:x="1297" fg:w="122"/><text x="89.4251%" y="607.50">day_12::dfs::DfsVisitor::find_all..</text></g><g><title>itertools::Itertools::counts (9 samples, 0.62%)</title><rect x="97.1074%" y="581" width="0.6198%" height="15" fill="rgb(230,153,43)" fg:x="1410" fg:w="9"/><text x="97.2074%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (9 samples, 0.62%)</title><rect x="97.1074%" y="565" width="0.6198%" height="15" fill="rgb(231,106,12)" fg:x="1410" fg:w="9"/><text x="97.2074%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (9 samples, 0.62%)</title><rect x="97.1074%" y="549" width="0.6198%" height="15" fill="rgb(215,92,2)" fg:x="1410" fg:w="9"/><text x="97.2074%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (9 samples, 0.62%)</title><rect x="97.1074%" y="533" width="0.6198%" height="15" fill="rgb(249,143,25)" fg:x="1410" fg:w="9"/><text x="97.2074%" y="543.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (9 samples, 0.62%)</title><rect x="97.1074%" y="517" width="0.6198%" height="15" fill="rgb(252,7,35)" fg:x="1410" fg:w="9"/><text x="97.2074%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (9 samples, 0.62%)</title><rect x="97.1074%" y="501" width="0.6198%" height="15" fill="rgb(216,69,40)" fg:x="1410" fg:w="9"/><text x="97.2074%" y="511.50"></text></g><g><title>itertools::Itertools::counts::{{closure}} (9 samples, 0.62%)</title><rect x="97.1074%" y="485" width="0.6198%" height="15" fill="rgb(240,36,33)" fg:x="1410" fg:w="9"/><text x="97.2074%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (8 samples, 0.55%)</title><rect x="97.1763%" y="469" width="0.5510%" height="15" fill="rgb(231,128,14)" fg:x="1411" fg:w="8"/><text x="97.2763%" y="479.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (8 samples, 0.55%)</title><rect x="97.1763%" y="453" width="0.5510%" height="15" fill="rgb(245,143,14)" fg:x="1411" fg:w="8"/><text x="97.2763%" y="463.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.21%)</title><rect x="97.5207%" y="437" width="0.2066%" height="15" fill="rgb(222,130,28)" fg:x="1416" fg:w="3"/><text x="97.6207%" y="447.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.14%)</title><rect x="97.5895%" y="421" width="0.1377%" height="15" fill="rgb(212,10,48)" fg:x="1417" fg:w="2"/><text x="97.6895%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.14%)</title><rect x="97.5895%" y="405" width="0.1377%" height="15" fill="rgb(254,118,45)" fg:x="1417" fg:w="2"/><text x="97.6895%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (2 samples, 0.14%)</title><rect x="97.5895%" y="389" width="0.1377%" height="15" fill="rgb(228,6,45)" fg:x="1417" fg:w="2"/><text x="97.6895%" y="399.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::hash::Hash&gt;::hash (2 samples, 0.14%)</title><rect x="97.5895%" y="373" width="0.1377%" height="15" fill="rgb(241,18,35)" fg:x="1417" fg:w="2"/><text x="97.6895%" y="383.50"></text></g><g><title>&lt;day_12::node::Node as core::hash::Hash&gt;::hash (2 samples, 0.14%)</title><rect x="97.5895%" y="357" width="0.1377%" height="15" fill="rgb(227,214,53)" fg:x="1417" fg:w="2"/><text x="97.6895%" y="367.50"></text></g><g><title>&lt;day_12::node::Size as core::hash::Hash&gt;::hash (1 samples, 0.07%)</title><rect x="97.6584%" y="341" width="0.0689%" height="15" fill="rgb(224,107,51)" fg:x="1418" fg:w="1"/><text x="97.7584%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.07%)</title><rect x="97.6584%" y="325" width="0.0689%" height="15" fill="rgb(248,60,28)" fg:x="1418" fg:w="1"/><text x="97.7584%" y="335.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.07%)</title><rect x="97.6584%" y="309" width="0.0689%" height="15" fill="rgb(249,101,23)" fg:x="1418" fg:w="1"/><text x="97.7584%" y="319.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.07%)</title><rect x="97.6584%" y="293" width="0.0689%" height="15" fill="rgb(228,51,19)" fg:x="1418" fg:w="1"/><text x="97.7584%" y="303.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="97.6584%" y="277" width="0.0689%" height="15" fill="rgb(213,20,6)" fg:x="1418" fg:w="1"/><text x="97.7584%" y="287.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="97.6584%" y="261" width="0.0689%" height="15" fill="rgb(212,124,10)" fg:x="1418" fg:w="1"/><text x="97.7584%" y="271.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="97.6584%" y="245" width="0.0689%" height="15" fill="rgb(248,3,40)" fg:x="1418" fg:w="1"/><text x="97.7584%" y="255.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.07%)</title><rect x="97.6584%" y="229" width="0.0689%" height="15" fill="rgb(223,178,23)" fg:x="1418" fg:w="1"/><text x="97.7584%" y="239.50"></text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="97.7273%" y="325" width="0.0689%" height="15" fill="rgb(240,132,45)" fg:x="1419" fg:w="1"/><text x="97.8273%" y="335.50"></text></g><g><title>tcache_put (1 samples, 0.07%)</title><rect x="97.7273%" y="309" width="0.0689%" height="15" fill="rgb(245,164,36)" fg:x="1419" fg:w="1"/><text x="97.8273%" y="319.50"></text></g><g><title>_int_malloc (1 samples, 0.07%)</title><rect x="97.7961%" y="325" width="0.0689%" height="15" fill="rgb(231,188,53)" fg:x="1420" fg:w="1"/><text x="97.8961%" y="335.50"></text></g><g><title>checked_request2size (1 samples, 0.07%)</title><rect x="97.7961%" y="309" width="0.0689%" height="15" fill="rgb(237,198,39)" fg:x="1420" fg:w="1"/><text x="97.8961%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.21%)</title><rect x="97.7273%" y="485" width="0.2066%" height="15" fill="rgb(223,120,35)" fg:x="1419" fg:w="3"/><text x="97.8273%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.21%)</title><rect x="97.7273%" y="469" width="0.2066%" height="15" fill="rgb(253,107,49)" fg:x="1419" fg:w="3"/><text x="97.8273%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.21%)</title><rect x="97.7273%" y="453" width="0.2066%" height="15" fill="rgb(216,44,31)" fg:x="1419" fg:w="3"/><text x="97.8273%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.21%)</title><rect x="97.7273%" y="437" width="0.2066%" height="15" fill="rgb(253,87,21)" fg:x="1419" fg:w="3"/><text x="97.8273%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.21%)</title><rect x="97.7273%" y="421" width="0.2066%" height="15" fill="rgb(226,18,2)" fg:x="1419" fg:w="3"/><text x="97.8273%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.21%)</title><rect x="97.7273%" y="405" width="0.2066%" height="15" fill="rgb(216,8,46)" fg:x="1419" fg:w="3"/><text x="97.8273%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.21%)</title><rect x="97.7273%" y="389" width="0.2066%" height="15" fill="rgb(226,140,39)" fg:x="1419" fg:w="3"/><text x="97.8273%" y="399.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.21%)</title><rect x="97.7273%" y="373" width="0.2066%" height="15" fill="rgb(221,194,54)" fg:x="1419" fg:w="3"/><text x="97.8273%" y="383.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.21%)</title><rect x="97.7273%" y="357" width="0.2066%" height="15" fill="rgb(213,92,11)" fg:x="1419" fg:w="3"/><text x="97.8273%" y="367.50"></text></g><g><title>_int_realloc (3 samples, 0.21%)</title><rect x="97.7273%" y="341" width="0.2066%" height="15" fill="rgb(229,162,46)" fg:x="1419" fg:w="3"/><text x="97.8273%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="97.8650%" y="325" width="0.0689%" height="15" fill="rgb(214,111,36)" fg:x="1421" fg:w="1"/><text x="97.9650%" y="335.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.07%)</title><rect x="97.8650%" y="309" width="0.0689%" height="15" fill="rgb(207,6,21)" fg:x="1421" fg:w="1"/><text x="97.9650%" y="319.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.07%)</title><rect x="97.8650%" y="293" width="0.0689%" height="15" fill="rgb(213,127,38)" fg:x="1421" fg:w="1"/><text x="97.9650%" y="303.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.07%)</title><rect x="97.8650%" y="277" width="0.0689%" height="15" fill="rgb(238,118,32)" fg:x="1421" fg:w="1"/><text x="97.9650%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.28%)</title><rect x="97.7273%" y="549" width="0.2755%" height="15" fill="rgb(240,139,39)" fg:x="1419" fg:w="4"/><text x="97.8273%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.28%)</title><rect x="97.7273%" y="533" width="0.2755%" height="15" fill="rgb(235,10,37)" fg:x="1419" fg:w="4"/><text x="97.8273%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (4 samples, 0.28%)</title><rect x="97.7273%" y="517" width="0.2755%" height="15" fill="rgb(249,171,38)" fg:x="1419" fg:w="4"/><text x="97.8273%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (4 samples, 0.28%)</title><rect x="97.7273%" y="501" width="0.2755%" height="15" fill="rgb(242,144,32)" fg:x="1419" fg:w="4"/><text x="97.8273%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::filter_map::FilterMap&lt;std::collections::hash::map::IntoIter&lt;&amp;alloc::rc::Rc&lt;day_12::node::Node&gt;,usize&gt;,day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}}&gt;&gt; (1 samples, 0.07%)</title><rect x="97.9339%" y="485" width="0.0689%" height="15" fill="rgb(217,117,21)" fg:x="1422" fg:w="1"/><text x="98.0339%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::IntoIter&lt;&amp;alloc::rc::Rc&lt;day_12::node::Node&gt;,usize&gt;&gt; (1 samples, 0.07%)</title><rect x="97.9339%" y="469" width="0.0689%" height="15" fill="rgb(249,87,1)" fg:x="1422" fg:w="1"/><text x="98.0339%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::IntoIter&lt;&amp;alloc::rc::Rc&lt;day_12::node::Node&gt;,usize&gt;&gt; (1 samples, 0.07%)</title><rect x="97.9339%" y="453" width="0.0689%" height="15" fill="rgb(248,196,48)" fg:x="1422" fg:w="1"/><text x="98.0339%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawIntoIter&lt;(&amp;alloc::rc::Rc&lt;day_12::node::Node&gt;,usize)&gt;&gt; (1 samples, 0.07%)</title><rect x="97.9339%" y="437" width="0.0689%" height="15" fill="rgb(251,206,33)" fg:x="1422" fg:w="1"/><text x="98.0339%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.07%)</title><rect x="97.9339%" y="421" width="0.0689%" height="15" fill="rgb(232,141,28)" fg:x="1422" fg:w="1"/><text x="98.0339%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.07%)</title><rect x="97.9339%" y="405" width="0.0689%" height="15" fill="rgb(209,167,14)" fg:x="1422" fg:w="1"/><text x="98.0339%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.07%)</title><rect x="97.9339%" y="389" width="0.0689%" height="15" fill="rgb(225,11,50)" fg:x="1422" fg:w="1"/><text x="98.0339%" y="399.50"></text></g><g><title>__GI___libc_free (1 samples, 0.07%)</title><rect x="97.9339%" y="373" width="0.0689%" height="15" fill="rgb(209,50,20)" fg:x="1422" fg:w="1"/><text x="98.0339%" y="383.50"></text></g><g><title>itertools::Itertools::collect_vec (5 samples, 0.34%)</title><rect x="97.7273%" y="597" width="0.3444%" height="15" fill="rgb(212,17,46)" fg:x="1419" fg:w="5"/><text x="97.8273%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (5 samples, 0.34%)</title><rect x="97.7273%" y="581" width="0.3444%" height="15" fill="rgb(216,101,39)" fg:x="1419" fg:w="5"/><text x="97.8273%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (5 samples, 0.34%)</title><rect x="97.7273%" y="565" width="0.3444%" height="15" fill="rgb(212,228,48)" fg:x="1419" fg:w="5"/><text x="97.8273%" y="575.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_contains (1 samples, 0.07%)</title><rect x="98.0028%" y="549" width="0.0689%" height="15" fill="rgb(250,6,50)" fg:x="1423" fg:w="1"/><text x="98.1028%" y="559.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.07%)</title><rect x="98.0028%" y="533" width="0.0689%" height="15" fill="rgb(250,160,48)" fg:x="1423" fg:w="1"/><text x="98.1028%" y="543.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.07%)</title><rect x="98.0028%" y="517" width="0.0689%" height="15" fill="rgb(244,216,33)" fg:x="1423" fg:w="1"/><text x="98.1028%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.07%)</title><rect x="98.0028%" y="501" width="0.0689%" height="15" fill="rgb(207,157,5)" fg:x="1423" fg:w="1"/><text x="98.1028%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.07%)</title><rect x="98.0028%" y="485" width="0.0689%" height="15" fill="rgb(228,199,8)" fg:x="1423" fg:w="1"/><text x="98.1028%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.07%)</title><rect x="98.0028%" y="469" width="0.0689%" height="15" fill="rgb(227,80,20)" fg:x="1423" fg:w="1"/><text x="98.1028%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.07%)</title><rect x="98.0028%" y="453" width="0.0689%" height="15" fill="rgb(222,9,33)" fg:x="1423" fg:w="1"/><text x="98.1028%" y="463.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.07%)</title><rect x="98.0028%" y="437" width="0.0689%" height="15" fill="rgb(239,44,28)" fg:x="1423" fg:w="1"/><text x="98.1028%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.07%)</title><rect x="98.0028%" y="421" width="0.0689%" height="15" fill="rgb(249,187,43)" fg:x="1423" fg:w="1"/><text x="98.1028%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.07%)</title><rect x="98.0028%" y="405" width="0.0689%" height="15" fill="rgb(216,141,28)" fg:x="1423" fg:w="1"/><text x="98.1028%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.07%)</title><rect x="98.0028%" y="389" width="0.0689%" height="15" fill="rgb(230,154,53)" fg:x="1423" fg:w="1"/><text x="98.1028%" y="399.50"></text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="98.0716%" y="325" width="0.0689%" height="15" fill="rgb(227,82,4)" fg:x="1424" fg:w="1"/><text x="98.1716%" y="335.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="98.1405%" y="165" width="0.0689%" height="15" fill="rgb(220,107,16)" fg:x="1425" fg:w="1"/><text x="98.2405%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.07%)</title><rect x="98.1405%" y="149" width="0.0689%" height="15" fill="rgb(207,187,2)" fg:x="1425" fg:w="1"/><text x="98.2405%" y="159.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.07%)</title><rect x="98.1405%" y="133" width="0.0689%" height="15" fill="rgb(210,162,52)" fg:x="1425" fg:w="1"/><text x="98.2405%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.14%)</title><rect x="98.1405%" y="245" width="0.1377%" height="15" fill="rgb(217,216,49)" fg:x="1425" fg:w="2"/><text x="98.2405%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.14%)</title><rect x="98.1405%" y="229" width="0.1377%" height="15" fill="rgb(218,146,49)" fg:x="1425" fg:w="2"/><text x="98.2405%" y="239.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (2 samples, 0.14%)</title><rect x="98.1405%" y="213" width="0.1377%" height="15" fill="rgb(216,55,40)" fg:x="1425" fg:w="2"/><text x="98.2405%" y="223.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (2 samples, 0.14%)</title><rect x="98.1405%" y="197" width="0.1377%" height="15" fill="rgb(208,196,21)" fg:x="1425" fg:w="2"/><text x="98.2405%" y="207.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (2 samples, 0.14%)</title><rect x="98.1405%" y="181" width="0.1377%" height="15" fill="rgb(242,117,42)" fg:x="1425" fg:w="2"/><text x="98.2405%" y="191.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.07%)</title><rect x="98.2094%" y="165" width="0.0689%" height="15" fill="rgb(210,11,23)" fg:x="1426" fg:w="1"/><text x="98.3094%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="98.2094%" y="149" width="0.0689%" height="15" fill="rgb(217,110,2)" fg:x="1426" fg:w="1"/><text x="98.3094%" y="159.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.07%)</title><rect x="98.2094%" y="133" width="0.0689%" height="15" fill="rgb(229,77,54)" fg:x="1426" fg:w="1"/><text x="98.3094%" y="143.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.07%)</title><rect x="98.2782%" y="133" width="0.0689%" height="15" fill="rgb(218,53,16)" fg:x="1427" fg:w="1"/><text x="98.3782%" y="143.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (5 samples, 0.34%)</title><rect x="98.0716%" y="453" width="0.3444%" height="15" fill="rgb(215,38,13)" fg:x="1424" fg:w="5"/><text x="98.1716%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (5 samples, 0.34%)</title><rect x="98.0716%" y="437" width="0.3444%" height="15" fill="rgb(235,42,18)" fg:x="1424" fg:w="5"/><text x="98.1716%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (5 samples, 0.34%)</title><rect x="98.0716%" y="421" width="0.3444%" height="15" fill="rgb(219,66,54)" fg:x="1424" fg:w="5"/><text x="98.1716%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (5 samples, 0.34%)</title><rect x="98.0716%" y="405" width="0.3444%" height="15" fill="rgb(222,205,4)" fg:x="1424" fg:w="5"/><text x="98.1716%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (5 samples, 0.34%)</title><rect x="98.0716%" y="389" width="0.3444%" height="15" fill="rgb(227,213,46)" fg:x="1424" fg:w="5"/><text x="98.1716%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (5 samples, 0.34%)</title><rect x="98.0716%" y="373" width="0.3444%" height="15" fill="rgb(250,145,42)" fg:x="1424" fg:w="5"/><text x="98.1716%" y="383.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (5 samples, 0.34%)</title><rect x="98.0716%" y="357" width="0.3444%" height="15" fill="rgb(219,15,2)" fg:x="1424" fg:w="5"/><text x="98.1716%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.34%)</title><rect x="98.0716%" y="341" width="0.3444%" height="15" fill="rgb(231,181,52)" fg:x="1424" fg:w="5"/><text x="98.1716%" y="351.50"></text></g><g><title>core::hash::BuildHasher::hash_one (4 samples, 0.28%)</title><rect x="98.1405%" y="325" width="0.2755%" height="15" fill="rgb(235,1,42)" fg:x="1425" fg:w="4"/><text x="98.2405%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.28%)</title><rect x="98.1405%" y="309" width="0.2755%" height="15" fill="rgb(249,88,27)" fg:x="1425" fg:w="4"/><text x="98.2405%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (4 samples, 0.28%)</title><rect x="98.1405%" y="293" width="0.2755%" height="15" fill="rgb(235,145,16)" fg:x="1425" fg:w="4"/><text x="98.2405%" y="303.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::hash::Hash&gt;::hash (4 samples, 0.28%)</title><rect x="98.1405%" y="277" width="0.2755%" height="15" fill="rgb(237,114,19)" fg:x="1425" fg:w="4"/><text x="98.2405%" y="287.50"></text></g><g><title>&lt;day_12::node::Node as core::hash::Hash&gt;::hash (4 samples, 0.28%)</title><rect x="98.1405%" y="261" width="0.2755%" height="15" fill="rgb(238,51,50)" fg:x="1425" fg:w="4"/><text x="98.2405%" y="271.50"></text></g><g><title>&lt;day_12::node::Size as core::hash::Hash&gt;::hash (2 samples, 0.14%)</title><rect x="98.2782%" y="245" width="0.1377%" height="15" fill="rgb(205,194,25)" fg:x="1427" fg:w="2"/><text x="98.3782%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (2 samples, 0.14%)</title><rect x="98.2782%" y="229" width="0.1377%" height="15" fill="rgb(215,203,17)" fg:x="1427" fg:w="2"/><text x="98.3782%" y="239.50"></text></g><g><title>core::hash::Hasher::write_isize (2 samples, 0.14%)</title><rect x="98.2782%" y="213" width="0.1377%" height="15" fill="rgb(233,112,49)" fg:x="1427" fg:w="2"/><text x="98.3782%" y="223.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.14%)</title><rect x="98.2782%" y="197" width="0.1377%" height="15" fill="rgb(241,130,26)" fg:x="1427" fg:w="2"/><text x="98.3782%" y="207.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.14%)</title><rect x="98.2782%" y="181" width="0.1377%" height="15" fill="rgb(252,223,19)" fg:x="1427" fg:w="2"/><text x="98.3782%" y="191.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.14%)</title><rect x="98.2782%" y="165" width="0.1377%" height="15" fill="rgb(211,95,25)" fg:x="1427" fg:w="2"/><text x="98.3782%" y="175.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.14%)</title><rect x="98.2782%" y="149" width="0.1377%" height="15" fill="rgb(251,182,27)" fg:x="1427" fg:w="2"/><text x="98.3782%" y="159.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.07%)</title><rect x="98.3471%" y="133" width="0.0689%" height="15" fill="rgb(238,24,4)" fg:x="1428" fg:w="1"/><text x="98.4471%" y="143.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.07%)</title><rect x="98.4160%" y="421" width="0.0689%" height="15" fill="rgb(224,220,25)" fg:x="1429" fg:w="1"/><text x="98.5160%" y="431.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.07%)</title><rect x="98.4160%" y="405" width="0.0689%" height="15" fill="rgb(239,133,26)" fg:x="1429" fg:w="1"/><text x="98.5160%" y="415.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.07%)</title><rect x="98.4160%" y="389" width="0.0689%" height="15" fill="rgb(211,94,48)" fg:x="1429" fg:w="1"/><text x="98.5160%" y="399.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (176 samples, 12.12%)</title><rect x="86.4325%" y="613" width="12.1212%" height="15" fill="rgb(239,87,6)" fg:x="1255" fg:w="176"/><text x="86.5325%" y="623.50">day_12::dfs::DfsVisitor::find_all_paths_visiting_..</text></g><g><title>itertools::Itertools::counts (7 samples, 0.48%)</title><rect x="98.0716%" y="597" width="0.4821%" height="15" fill="rgb(227,62,0)" fg:x="1424" fg:w="7"/><text x="98.1716%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.48%)</title><rect x="98.0716%" y="581" width="0.4821%" height="15" fill="rgb(211,226,4)" fg:x="1424" fg:w="7"/><text x="98.1716%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.48%)</title><rect x="98.0716%" y="565" width="0.4821%" height="15" fill="rgb(253,38,52)" fg:x="1424" fg:w="7"/><text x="98.1716%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (7 samples, 0.48%)</title><rect x="98.0716%" y="549" width="0.4821%" height="15" fill="rgb(229,126,40)" fg:x="1424" fg:w="7"/><text x="98.1716%" y="559.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (7 samples, 0.48%)</title><rect x="98.0716%" y="533" width="0.4821%" height="15" fill="rgb(229,165,44)" fg:x="1424" fg:w="7"/><text x="98.1716%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (7 samples, 0.48%)</title><rect x="98.0716%" y="517" width="0.4821%" height="15" fill="rgb(247,95,47)" fg:x="1424" fg:w="7"/><text x="98.1716%" y="527.50"></text></g><g><title>itertools::Itertools::counts::{{closure}} (7 samples, 0.48%)</title><rect x="98.0716%" y="501" width="0.4821%" height="15" fill="rgb(216,140,30)" fg:x="1424" fg:w="7"/><text x="98.1716%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (7 samples, 0.48%)</title><rect x="98.0716%" y="485" width="0.4821%" height="15" fill="rgb(246,214,8)" fg:x="1424" fg:w="7"/><text x="98.1716%" y="495.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (7 samples, 0.48%)</title><rect x="98.0716%" y="469" width="0.4821%" height="15" fill="rgb(227,224,15)" fg:x="1424" fg:w="7"/><text x="98.1716%" y="479.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.14%)</title><rect x="98.4160%" y="453" width="0.1377%" height="15" fill="rgb(233,175,4)" fg:x="1429" fg:w="2"/><text x="98.5160%" y="463.50"></text></g><g><title>core::hash::BuildHasher::hash_one (2 samples, 0.14%)</title><rect x="98.4160%" y="437" width="0.1377%" height="15" fill="rgb(221,66,45)" fg:x="1429" fg:w="2"/><text x="98.5160%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.07%)</title><rect x="98.4848%" y="421" width="0.0689%" height="15" fill="rgb(221,178,18)" fg:x="1430" fg:w="1"/><text x="98.5848%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.07%)</title><rect x="98.4848%" y="405" width="0.0689%" height="15" fill="rgb(213,81,29)" fg:x="1430" fg:w="1"/><text x="98.5848%" y="415.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 0.07%)</title><rect x="98.4848%" y="389" width="0.0689%" height="15" fill="rgb(220,89,49)" fg:x="1430" fg:w="1"/><text x="98.5848%" y="399.50"></text></g><g><title>&lt;day_12::node::Node as core::hash::Hash&gt;::hash (1 samples, 0.07%)</title><rect x="98.4848%" y="373" width="0.0689%" height="15" fill="rgb(227,60,33)" fg:x="1430" fg:w="1"/><text x="98.5848%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.07%)</title><rect x="98.4848%" y="357" width="0.0689%" height="15" fill="rgb(205,113,12)" fg:x="1430" fg:w="1"/><text x="98.5848%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.07%)</title><rect x="98.4848%" y="341" width="0.0689%" height="15" fill="rgb(211,32,1)" fg:x="1430" fg:w="1"/><text x="98.5848%" y="351.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="98.4848%" y="325" width="0.0689%" height="15" fill="rgb(246,2,12)" fg:x="1430" fg:w="1"/><text x="98.5848%" y="335.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="98.4848%" y="309" width="0.0689%" height="15" fill="rgb(243,37,27)" fg:x="1430" fg:w="1"/><text x="98.5848%" y="319.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="98.4848%" y="293" width="0.0689%" height="15" fill="rgb(248,211,31)" fg:x="1430" fg:w="1"/><text x="98.5848%" y="303.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.07%)</title><rect x="98.4848%" y="277" width="0.0689%" height="15" fill="rgb(242,146,47)" fg:x="1430" fg:w="1"/><text x="98.5848%" y="287.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="98.4848%" y="261" width="0.0689%" height="15" fill="rgb(206,70,20)" fg:x="1430" fg:w="1"/><text x="98.5848%" y="271.50"></text></g><g><title>day_12::dfs::DfsVisitor::all_paths_contains (1 samples, 0.07%)</title><rect x="98.5537%" y="565" width="0.0689%" height="15" fill="rgb(215,10,51)" fg:x="1431" fg:w="1"/><text x="98.6537%" y="575.50"></text></g><g><title>day_12::dfs::path_to_string (1 samples, 0.07%)</title><rect x="98.5537%" y="549" width="0.0689%" height="15" fill="rgb(243,178,53)" fg:x="1431" fg:w="1"/><text x="98.6537%" y="559.50"></text></g><g><title>itertools::Itertools::intersperse (1 samples, 0.07%)</title><rect x="98.5537%" y="533" width="0.0689%" height="15" fill="rgb(233,221,20)" fg:x="1431" fg:w="1"/><text x="98.6537%" y="543.50"></text></g><g><title>itertools::intersperse::intersperse (1 samples, 0.07%)</title><rect x="98.5537%" y="517" width="0.0689%" height="15" fill="rgb(218,95,35)" fg:x="1431" fg:w="1"/><text x="98.6537%" y="527.50"></text></g><g><title>itertools::intersperse::intersperse_with (1 samples, 0.07%)</title><rect x="98.5537%" y="501" width="0.0689%" height="15" fill="rgb(229,13,5)" fg:x="1431" fg:w="1"/><text x="98.6537%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="98.5537%" y="485" width="0.0689%" height="15" fill="rgb(252,164,30)" fg:x="1431" fg:w="1"/><text x="98.6537%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.07%)</title><rect x="98.5537%" y="469" width="0.0689%" height="15" fill="rgb(232,68,36)" fg:x="1431" fg:w="1"/><text x="98.6537%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.07%)</title><rect x="98.5537%" y="453" width="0.0689%" height="15" fill="rgb(219,59,54)" fg:x="1431" fg:w="1"/><text x="98.6537%" y="463.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.07%)</title><rect x="98.5537%" y="437" width="0.0689%" height="15" fill="rgb(250,92,33)" fg:x="1431" fg:w="1"/><text x="98.6537%" y="447.50"></text></g><g><title>itertools::Itertools::collect_vec (2 samples, 0.14%)</title><rect x="98.5537%" y="613" width="0.1377%" height="15" fill="rgb(229,162,54)" fg:x="1431" fg:w="2"/><text x="98.6537%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.14%)</title><rect x="98.5537%" y="597" width="0.1377%" height="15" fill="rgb(244,114,52)" fg:x="1431" fg:w="2"/><text x="98.6537%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.14%)</title><rect x="98.5537%" y="581" width="0.1377%" height="15" fill="rgb(212,211,43)" fg:x="1431" fg:w="2"/><text x="98.6537%" y="591.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.07%)</title><rect x="98.6226%" y="565" width="0.0689%" height="15" fill="rgb(226,147,8)" fg:x="1432" fg:w="1"/><text x="98.7226%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.07%)</title><rect x="98.6226%" y="549" width="0.0689%" height="15" fill="rgb(226,23,13)" fg:x="1432" fg:w="1"/><text x="98.7226%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (1 samples, 0.07%)</title><rect x="98.6226%" y="533" width="0.0689%" height="15" fill="rgb(240,63,4)" fg:x="1432" fg:w="1"/><text x="98.7226%" y="543.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.07%)</title><rect x="98.6226%" y="517" width="0.0689%" height="15" fill="rgb(221,1,32)" fg:x="1432" fg:w="1"/><text x="98.7226%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.07%)</title><rect x="98.6915%" y="469" width="0.0689%" height="15" fill="rgb(242,117,10)" fg:x="1433" fg:w="1"/><text x="98.7915%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="98.6915%" y="453" width="0.0689%" height="15" fill="rgb(249,172,44)" fg:x="1433" fg:w="1"/><text x="98.7915%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.07%)</title><rect x="98.6915%" y="437" width="0.0689%" height="15" fill="rgb(244,46,45)" fg:x="1433" fg:w="1"/><text x="98.7915%" y="447.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.07%)</title><rect x="98.6915%" y="421" width="0.0689%" height="15" fill="rgb(206,43,17)" fg:x="1433" fg:w="1"/><text x="98.7915%" y="431.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.07%)</title><rect x="98.6915%" y="405" width="0.0689%" height="15" fill="rgb(239,218,39)" fg:x="1433" fg:w="1"/><text x="98.7915%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash::{{closure}} (1 samples, 0.07%)</title><rect x="98.6915%" y="389" width="0.0689%" height="15" fill="rgb(208,169,54)" fg:x="1433" fg:w="1"/><text x="98.7915%" y="399.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.07%)</title><rect x="98.6915%" y="373" width="0.0689%" height="15" fill="rgb(247,25,42)" fg:x="1433" fg:w="1"/><text x="98.7915%" y="383.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.07%)</title><rect x="98.6915%" y="357" width="0.0689%" height="15" fill="rgb(226,23,31)" fg:x="1433" fg:w="1"/><text x="98.7915%" y="367.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="98.6915%" y="341" width="0.0689%" height="15" fill="rgb(247,16,28)" fg:x="1433" fg:w="1"/><text x="98.7915%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.07%)</title><rect x="98.6915%" y="325" width="0.0689%" height="15" fill="rgb(231,147,38)" fg:x="1433" fg:w="1"/><text x="98.7915%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.07%)</title><rect x="98.6915%" y="309" width="0.0689%" height="15" fill="rgb(253,81,48)" fg:x="1433" fg:w="1"/><text x="98.7915%" y="319.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 0.07%)</title><rect x="98.6915%" y="293" width="0.0689%" height="15" fill="rgb(249,222,43)" fg:x="1433" fg:w="1"/><text x="98.7915%" y="303.50"></text></g><g><title>&lt;day_12::node::Node as core::hash::Hash&gt;::hash (1 samples, 0.07%)</title><rect x="98.6915%" y="277" width="0.0689%" height="15" fill="rgb(221,3,27)" fg:x="1433" fg:w="1"/><text x="98.7915%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.07%)</title><rect x="98.6915%" y="261" width="0.0689%" height="15" fill="rgb(228,180,5)" fg:x="1433" fg:w="1"/><text x="98.7915%" y="271.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.07%)</title><rect x="98.6915%" y="245" width="0.0689%" height="15" fill="rgb(227,131,42)" fg:x="1433" fg:w="1"/><text x="98.7915%" y="255.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="98.6915%" y="229" width="0.0689%" height="15" fill="rgb(212,3,39)" fg:x="1433" fg:w="1"/><text x="98.7915%" y="239.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="98.6915%" y="213" width="0.0689%" height="15" fill="rgb(226,45,5)" fg:x="1433" fg:w="1"/><text x="98.7915%" y="223.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="98.6915%" y="197" width="0.0689%" height="15" fill="rgb(215,167,45)" fg:x="1433" fg:w="1"/><text x="98.7915%" y="207.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.07%)</title><rect x="98.6915%" y="181" width="0.0689%" height="15" fill="rgb(250,218,53)" fg:x="1433" fg:w="1"/><text x="98.7915%" y="191.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.07%)</title><rect x="98.6915%" y="165" width="0.0689%" height="15" fill="rgb(207,140,0)" fg:x="1433" fg:w="1"/><text x="98.7915%" y="175.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (205 samples, 14.12%)</title><rect x="84.7107%" y="629" width="14.1185%" height="15" fill="rgb(238,133,51)" fg:x="1230" fg:w="205"/><text x="84.8107%" y="639.50">day_12::dfs::DfsVisitor::find_all_paths_visiting_small_ca..</text></g><g><title>itertools::Itertools::counts (2 samples, 0.14%)</title><rect x="98.6915%" y="613" width="0.1377%" height="15" fill="rgb(218,203,53)" fg:x="1433" fg:w="2"/><text x="98.7915%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (2 samples, 0.14%)</title><rect x="98.6915%" y="597" width="0.1377%" height="15" fill="rgb(226,184,25)" fg:x="1433" fg:w="2"/><text x="98.7915%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.14%)</title><rect x="98.6915%" y="581" width="0.1377%" height="15" fill="rgb(231,121,21)" fg:x="1433" fg:w="2"/><text x="98.7915%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.14%)</title><rect x="98.6915%" y="565" width="0.1377%" height="15" fill="rgb(251,14,34)" fg:x="1433" fg:w="2"/><text x="98.7915%" y="575.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (2 samples, 0.14%)</title><rect x="98.6915%" y="549" width="0.1377%" height="15" fill="rgb(249,193,11)" fg:x="1433" fg:w="2"/><text x="98.7915%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (2 samples, 0.14%)</title><rect x="98.6915%" y="533" width="0.1377%" height="15" fill="rgb(220,172,37)" fg:x="1433" fg:w="2"/><text x="98.7915%" y="543.50"></text></g><g><title>itertools::Itertools::counts::{{closure}} (2 samples, 0.14%)</title><rect x="98.6915%" y="517" width="0.1377%" height="15" fill="rgb(231,229,43)" fg:x="1433" fg:w="2"/><text x="98.7915%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.14%)</title><rect x="98.6915%" y="501" width="0.1377%" height="15" fill="rgb(250,161,5)" fg:x="1433" fg:w="2"/><text x="98.7915%" y="511.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.14%)</title><rect x="98.6915%" y="485" width="0.1377%" height="15" fill="rgb(218,225,18)" fg:x="1433" fg:w="2"/><text x="98.7915%" y="495.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.07%)</title><rect x="98.7603%" y="469" width="0.0689%" height="15" fill="rgb(245,45,42)" fg:x="1434" fg:w="1"/><text x="98.8603%" y="479.50"></text></g><g><title>_int_free (1 samples, 0.07%)</title><rect x="98.7603%" y="453" width="0.0689%" height="15" fill="rgb(211,115,1)" fg:x="1434" fg:w="1"/><text x="98.8603%" y="463.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (214 samples, 14.74%)</title><rect x="84.1598%" y="645" width="14.7383%" height="15" fill="rgb(248,133,52)" fg:x="1222" fg:w="214"/><text x="84.2598%" y="655.50">day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves..</text></g><g><title>itertools::Itertools::collect_vec (1 samples, 0.07%)</title><rect x="98.8292%" y="629" width="0.0689%" height="15" fill="rgb(238,100,21)" fg:x="1435" fg:w="1"/><text x="98.9292%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.07%)</title><rect x="98.8292%" y="613" width="0.0689%" height="15" fill="rgb(247,144,11)" fg:x="1435" fg:w="1"/><text x="98.9292%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="98.8292%" y="597" width="0.0689%" height="15" fill="rgb(206,164,16)" fg:x="1435" fg:w="1"/><text x="98.9292%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="98.8292%" y="581" width="0.0689%" height="15" fill="rgb(222,34,3)" fg:x="1435" fg:w="1"/><text x="98.9292%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="98.8292%" y="565" width="0.0689%" height="15" fill="rgb(248,82,4)" fg:x="1435" fg:w="1"/><text x="98.9292%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.07%)</title><rect x="98.8292%" y="549" width="0.0689%" height="15" fill="rgb(228,81,46)" fg:x="1435" fg:w="1"/><text x="98.9292%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.07%)</title><rect x="98.8292%" y="533" width="0.0689%" height="15" fill="rgb(227,67,47)" fg:x="1435" fg:w="1"/><text x="98.9292%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="98.8292%" y="517" width="0.0689%" height="15" fill="rgb(215,93,53)" fg:x="1435" fg:w="1"/><text x="98.9292%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.07%)</title><rect x="98.8292%" y="501" width="0.0689%" height="15" fill="rgb(248,194,39)" fg:x="1435" fg:w="1"/><text x="98.9292%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.07%)</title><rect x="98.8292%" y="485" width="0.0689%" height="15" fill="rgb(215,5,19)" fg:x="1435" fg:w="1"/><text x="98.9292%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.07%)</title><rect x="98.8292%" y="469" width="0.0689%" height="15" fill="rgb(226,215,51)" fg:x="1435" fg:w="1"/><text x="98.9292%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="98.8292%" y="453" width="0.0689%" height="15" fill="rgb(225,56,26)" fg:x="1435" fg:w="1"/><text x="98.9292%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.07%)</title><rect x="98.8292%" y="437" width="0.0689%" height="15" fill="rgb(222,75,29)" fg:x="1435" fg:w="1"/><text x="98.9292%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.07%)</title><rect x="98.8292%" y="421" width="0.0689%" height="15" fill="rgb(236,139,6)" fg:x="1435" fg:w="1"/><text x="98.9292%" y="431.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.07%)</title><rect x="98.8292%" y="405" width="0.0689%" height="15" fill="rgb(223,137,36)" fg:x="1435" fg:w="1"/><text x="98.9292%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="98.8292%" y="389" width="0.0689%" height="15" fill="rgb(226,99,2)" fg:x="1435" fg:w="1"/><text x="98.9292%" y="399.50"></text></g><g><title>_start (233 samples, 16.05%)</title><rect x="82.9201%" y="1205" width="16.0468%" height="15" fill="rgb(206,133,23)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="1215.50">_start</text></g><g><title>__libc_start_main_impl (233 samples, 16.05%)</title><rect x="82.9201%" y="1189" width="16.0468%" height="15" fill="rgb(243,173,15)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="1199.50">__libc_start_main_impl</text></g><g><title>__libc_start_call_main (233 samples, 16.05%)</title><rect x="82.9201%" y="1173" width="16.0468%" height="15" fill="rgb(228,69,28)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="1183.50">__libc_start_call_main</text></g><g><title>main (233 samples, 16.05%)</title><rect x="82.9201%" y="1157" width="16.0468%" height="15" fill="rgb(212,51,22)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="1167.50">main</text></g><g><title>std::rt::lang_start_internal (233 samples, 16.05%)</title><rect x="82.9201%" y="1141" width="16.0468%" height="15" fill="rgb(227,113,0)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="1151.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (233 samples, 16.05%)</title><rect x="82.9201%" y="1125" width="16.0468%" height="15" fill="rgb(252,84,27)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="1135.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (233 samples, 16.05%)</title><rect x="82.9201%" y="1109" width="16.0468%" height="15" fill="rgb(223,145,39)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="1119.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (233 samples, 16.05%)</title><rect x="82.9201%" y="1093" width="16.0468%" height="15" fill="rgb(239,219,30)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="1103.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (233 samples, 16.05%)</title><rect x="82.9201%" y="1077" width="16.0468%" height="15" fill="rgb(224,196,39)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="1087.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (233 samples, 16.05%)</title><rect x="82.9201%" y="1061" width="16.0468%" height="15" fill="rgb(205,35,43)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="1071.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (233 samples, 16.05%)</title><rect x="82.9201%" y="1045" width="16.0468%" height="15" fill="rgb(228,201,21)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="1055.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (233 samples, 16.05%)</title><rect x="82.9201%" y="1029" width="16.0468%" height="15" fill="rgb(237,118,16)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="1039.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (233 samples, 16.05%)</title><rect x="82.9201%" y="1013" width="16.0468%" height="15" fill="rgb(241,17,19)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="1023.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; ..</text></g><g><title>std::rt::lang_start::{{closure}} (233 samples, 16.05%)</title><rect x="82.9201%" y="997" width="16.0468%" height="15" fill="rgb(214,10,25)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="1007.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (233 samples, 16.05%)</title><rect x="82.9201%" y="981" width="16.0468%" height="15" fill="rgb(238,37,29)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="991.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (233 samples, 16.05%)</title><rect x="82.9201%" y="965" width="16.0468%" height="15" fill="rgb(253,83,25)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="975.50">core::ops::function::FnOnce::call_once</text></g><g><title>day_12::main (233 samples, 16.05%)</title><rect x="82.9201%" y="949" width="16.0468%" height="15" fill="rgb(234,192,12)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="959.50">day_12::main</text></g><g><title>day_12::bin::process_part2 (233 samples, 16.05%)</title><rect x="82.9201%" y="933" width="16.0468%" height="15" fill="rgb(241,216,45)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="943.50">day_12::bin::process_part2</text></g><g><title>day_12::Graph::all_dfs_paths_visiting_small_caves_twice (233 samples, 16.05%)</title><rect x="82.9201%" y="917" width="16.0468%" height="15" fill="rgb(242,22,33)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="927.50">day_12::Graph::all_dfs_paths_visiting_small_caves_twice</text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (233 samples, 16.05%)</title><rect x="82.9201%" y="901" width="16.0468%" height="15" fill="rgb(231,105,49)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="911.50">day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice</text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (233 samples, 16.05%)</title><rect x="82.9201%" y="885" width="16.0468%" height="15" fill="rgb(218,204,15)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="895.50">day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice</text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (233 samples, 16.05%)</title><rect x="82.9201%" y="869" width="16.0468%" height="15" fill="rgb(235,138,41)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="879.50">day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice</text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (233 samples, 16.05%)</title><rect x="82.9201%" y="853" width="16.0468%" height="15" fill="rgb(246,0,9)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="863.50">day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice</text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (233 samples, 16.05%)</title><rect x="82.9201%" y="837" width="16.0468%" height="15" fill="rgb(210,74,4)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="847.50">day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice</text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (233 samples, 16.05%)</title><rect x="82.9201%" y="821" width="16.0468%" height="15" fill="rgb(250,60,41)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="831.50">day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice</text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (233 samples, 16.05%)</title><rect x="82.9201%" y="805" width="16.0468%" height="15" fill="rgb(220,115,12)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="815.50">day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice</text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (233 samples, 16.05%)</title><rect x="82.9201%" y="789" width="16.0468%" height="15" fill="rgb(237,100,13)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="799.50">day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice</text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (233 samples, 16.05%)</title><rect x="82.9201%" y="773" width="16.0468%" height="15" fill="rgb(213,55,26)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="783.50">day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice</text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (233 samples, 16.05%)</title><rect x="82.9201%" y="757" width="16.0468%" height="15" fill="rgb(216,17,4)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="767.50">day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice</text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (233 samples, 16.05%)</title><rect x="82.9201%" y="741" width="16.0468%" height="15" fill="rgb(220,153,47)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="751.50">day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice</text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (233 samples, 16.05%)</title><rect x="82.9201%" y="725" width="16.0468%" height="15" fill="rgb(215,131,9)" fg:x="1204" fg:w="233"/><text x="83.0201%" y="735.50">day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice</text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (232 samples, 15.98%)</title><rect x="82.9890%" y="709" width="15.9780%" height="15" fill="rgb(233,46,42)" fg:x="1205" fg:w="232"/><text x="83.0890%" y="719.50">day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice</text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (231 samples, 15.91%)</title><rect x="83.0579%" y="693" width="15.9091%" height="15" fill="rgb(226,86,7)" fg:x="1206" fg:w="231"/><text x="83.1579%" y="703.50">day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice</text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (227 samples, 15.63%)</title><rect x="83.3333%" y="677" width="15.6336%" height="15" fill="rgb(239,226,21)" fg:x="1210" fg:w="227"/><text x="83.4333%" y="687.50">day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twi..</text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (225 samples, 15.50%)</title><rect x="83.4711%" y="661" width="15.4959%" height="15" fill="rgb(244,137,22)" fg:x="1212" fg:w="225"/><text x="83.5711%" y="671.50">day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_tw..</text></g><g><title>itertools::Itertools::counts (1 samples, 0.07%)</title><rect x="98.8981%" y="645" width="0.0689%" height="15" fill="rgb(211,139,35)" fg:x="1436" fg:w="1"/><text x="98.9981%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.07%)</title><rect x="98.8981%" y="629" width="0.0689%" height="15" fill="rgb(214,62,50)" fg:x="1436" fg:w="1"/><text x="98.9981%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="98.8981%" y="613" width="0.0689%" height="15" fill="rgb(212,113,44)" fg:x="1436" fg:w="1"/><text x="98.9981%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="98.8981%" y="597" width="0.0689%" height="15" fill="rgb(226,150,43)" fg:x="1436" fg:w="1"/><text x="98.9981%" y="607.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (1 samples, 0.07%)</title><rect x="98.8981%" y="581" width="0.0689%" height="15" fill="rgb(250,71,37)" fg:x="1436" fg:w="1"/><text x="98.9981%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.07%)</title><rect x="98.8981%" y="565" width="0.0689%" height="15" fill="rgb(219,76,19)" fg:x="1436" fg:w="1"/><text x="98.9981%" y="575.50"></text></g><g><title>itertools::Itertools::counts::{{closure}} (1 samples, 0.07%)</title><rect x="98.8981%" y="549" width="0.0689%" height="15" fill="rgb(250,39,11)" fg:x="1436" fg:w="1"/><text x="98.9981%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.07%)</title><rect x="98.8981%" y="533" width="0.0689%" height="15" fill="rgb(230,64,31)" fg:x="1436" fg:w="1"/><text x="98.9981%" y="543.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.07%)</title><rect x="98.8981%" y="517" width="0.0689%" height="15" fill="rgb(208,222,23)" fg:x="1436" fg:w="1"/><text x="98.9981%" y="527.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.07%)</title><rect x="98.8981%" y="501" width="0.0689%" height="15" fill="rgb(227,125,18)" fg:x="1436" fg:w="1"/><text x="98.9981%" y="511.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="98.8981%" y="485" width="0.0689%" height="15" fill="rgb(234,210,9)" fg:x="1436" fg:w="1"/><text x="98.9981%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.07%)</title><rect x="98.8981%" y="469" width="0.0689%" height="15" fill="rgb(217,127,24)" fg:x="1436" fg:w="1"/><text x="98.9981%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.07%)</title><rect x="98.8981%" y="453" width="0.0689%" height="15" fill="rgb(239,141,48)" fg:x="1436" fg:w="1"/><text x="98.9981%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 0.07%)</title><rect x="98.8981%" y="437" width="0.0689%" height="15" fill="rgb(227,109,8)" fg:x="1436" fg:w="1"/><text x="98.9981%" y="447.50"></text></g><g><title>&lt;day_12::node::Node as core::hash::Hash&gt;::hash (1 samples, 0.07%)</title><rect x="98.8981%" y="421" width="0.0689%" height="15" fill="rgb(235,184,23)" fg:x="1436" fg:w="1"/><text x="98.9981%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.07%)</title><rect x="98.8981%" y="405" width="0.0689%" height="15" fill="rgb(227,226,48)" fg:x="1436" fg:w="1"/><text x="98.9981%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.07%)</title><rect x="98.8981%" y="389" width="0.0689%" height="15" fill="rgb(206,150,11)" fg:x="1436" fg:w="1"/><text x="98.9981%" y="399.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="98.8981%" y="373" width="0.0689%" height="15" fill="rgb(254,2,33)" fg:x="1436" fg:w="1"/><text x="98.9981%" y="383.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="98.8981%" y="357" width="0.0689%" height="15" fill="rgb(243,160,20)" fg:x="1436" fg:w="1"/><text x="98.9981%" y="367.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write_str (1 samples, 0.07%)</title><rect x="98.8981%" y="341" width="0.0689%" height="15" fill="rgb(218,208,30)" fg:x="1436" fg:w="1"/><text x="98.9981%" y="351.50"></text></g><g><title>core::hash::Hasher::write_u8 (1 samples, 0.07%)</title><rect x="98.8981%" y="325" width="0.0689%" height="15" fill="rgb(224,120,49)" fg:x="1436" fg:w="1"/><text x="98.9981%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="98.8981%" y="309" width="0.0689%" height="15" fill="rgb(246,12,2)" fg:x="1436" fg:w="1"/><text x="98.9981%" y="319.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.07%)</title><rect x="99.1736%" y="1173" width="0.0689%" height="15" fill="rgb(236,117,3)" fg:x="1440" fg:w="1"/><text x="99.2736%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.34%)</title><rect x="98.9669%" y="1205" width="0.3444%" height="15" fill="rgb(216,128,52)" fg:x="1437" fg:w="5"/><text x="99.0669%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.28%)</title><rect x="99.0358%" y="1189" width="0.2755%" height="15" fill="rgb(246,145,19)" fg:x="1438" fg:w="4"/><text x="99.1358%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.07%)</title><rect x="99.2424%" y="1173" width="0.0689%" height="15" fill="rgb(222,11,46)" fg:x="1441" fg:w="1"/><text x="99.3424%" y="1183.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="99.3113%" y="1205" width="0.0689%" height="15" fill="rgb(245,82,36)" fg:x="1442" fg:w="1"/><text x="99.4113%" y="1215.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.07%)</title><rect x="99.3113%" y="1189" width="0.0689%" height="15" fill="rgb(250,73,51)" fg:x="1442" fg:w="1"/><text x="99.4113%" y="1199.50"></text></g><g><title>alloc::vec::in_place_collect::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.07%)</title><rect x="99.3802%" y="1205" width="0.0689%" height="15" fill="rgb(221,189,23)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="1215.50"></text></g><g><title>&lt;I as alloc::vec::in_place_collect::SpecInPlaceCollect&lt;T,I&gt;&gt;::collect_in_place (1 samples, 0.07%)</title><rect x="99.3802%" y="1189" width="0.0689%" height="15" fill="rgb(210,33,7)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="99.3802%" y="1173" width="0.0689%" height="15" fill="rgb(210,107,22)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="1183.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (1 samples, 0.07%)</title><rect x="99.3802%" y="1157" width="0.0689%" height="15" fill="rgb(222,116,37)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.07%)</title><rect x="99.3802%" y="1141" width="0.0689%" height="15" fill="rgb(254,17,48)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="1151.50"></text></g><g><title>core::iter::adapters::filter::filter_try_fold::{{closure}} (1 samples, 0.07%)</title><rect x="99.3802%" y="1125" width="0.0689%" height="15" fill="rgb(224,36,32)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="1135.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}} (1 samples, 0.07%)</title><rect x="99.3802%" y="1109" width="0.0689%" height="15" fill="rgb(232,90,46)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count (1 samples, 0.07%)</title><rect x="99.3802%" y="1093" width="0.0689%" height="15" fill="rgb(241,66,40)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.07%)</title><rect x="99.3802%" y="1077" width="0.0689%" height="15" fill="rgb(249,184,29)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="1087.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.07%)</title><rect x="99.3802%" y="1061" width="0.0689%" height="15" fill="rgb(231,181,1)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="99.3802%" y="1045" width="0.0689%" height="15" fill="rgb(224,94,2)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="99.3802%" y="1029" width="0.0689%" height="15" fill="rgb(229,170,15)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="1039.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.07%)</title><rect x="99.3802%" y="1013" width="0.0689%" height="15" fill="rgb(240,127,35)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::count::to_usize::{{closure}} (1 samples, 0.07%)</title><rect x="99.3802%" y="997" width="0.0689%" height="15" fill="rgb(248,196,34)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="1007.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}}::{{closure}} (1 samples, 0.07%)</title><rect x="99.3802%" y="981" width="0.0689%" height="15" fill="rgb(236,137,7)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="991.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.07%)</title><rect x="99.3802%" y="965" width="0.0689%" height="15" fill="rgb(235,127,16)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="975.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="99.3802%" y="949" width="0.0689%" height="15" fill="rgb(250,192,54)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="959.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEqIdent&lt;T&gt;&gt;::eq (1 samples, 0.07%)</title><rect x="99.3802%" y="933" width="0.0689%" height="15" fill="rgb(218,98,20)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="943.50"></text></g><g><title>&lt;day_12::node::Node as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="99.3802%" y="917" width="0.0689%" height="15" fill="rgb(230,176,47)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.07%)</title><rect x="99.3802%" y="901" width="0.0689%" height="15" fill="rgb(244,2,33)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="911.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A2&gt;&gt; for alloc::vec::Vec&lt;T,A1&gt;&gt;::eq (1 samples, 0.07%)</title><rect x="99.3802%" y="885" width="0.0689%" height="15" fill="rgb(231,100,17)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="895.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.07%)</title><rect x="99.3802%" y="869" width="0.0689%" height="15" fill="rgb(245,23,12)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="879.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.07%)</title><rect x="99.3802%" y="853" width="0.0689%" height="15" fill="rgb(249,55,22)" fg:x="1443" fg:w="1"/><text x="99.4802%" y="863.50"></text></g><g><title>core::hash::BuildHasher::hash_one (1 samples, 0.07%)</title><rect x="99.4490%" y="1205" width="0.0689%" height="15" fill="rgb(207,134,9)" fg:x="1444" fg:w="1"/><text x="99.5490%" y="1215.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&lt;&amp;str&gt;&gt;::eq (1 samples, 0.07%)</title><rect x="99.5179%" y="1189" width="0.0689%" height="15" fill="rgb(218,134,0)" fg:x="1445" fg:w="1"/><text x="99.6179%" y="1199.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.07%)</title><rect x="99.5179%" y="1173" width="0.0689%" height="15" fill="rgb(213,212,33)" fg:x="1445" fg:w="1"/><text x="99.6179%" y="1183.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.07%)</title><rect x="99.5179%" y="1157" width="0.0689%" height="15" fill="rgb(252,106,18)" fg:x="1445" fg:w="1"/><text x="99.6179%" y="1167.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.07%)</title><rect x="99.5179%" y="1141" width="0.0689%" height="15" fill="rgb(208,126,42)" fg:x="1445" fg:w="1"/><text x="99.6179%" y="1151.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.07%)</title><rect x="99.5179%" y="1125" width="0.0689%" height="15" fill="rgb(246,175,29)" fg:x="1445" fg:w="1"/><text x="99.6179%" y="1135.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice (2 samples, 0.14%)</title><rect x="99.5179%" y="1205" width="0.1377%" height="15" fill="rgb(215,13,50)" fg:x="1445" fg:w="2"/><text x="99.6179%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.07%)</title><rect x="99.5868%" y="1189" width="0.0689%" height="15" fill="rgb(216,172,15)" fg:x="1446" fg:w="1"/><text x="99.6868%" y="1199.50"></text></g><g><title>day_12::dfs::DfsVisitor::find_all_paths_visiting_small_caves_twice::{{closure}} (1 samples, 0.07%)</title><rect x="99.5868%" y="1173" width="0.0689%" height="15" fill="rgb(212,103,13)" fg:x="1446" fg:w="1"/><text x="99.6868%" y="1183.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.07%)</title><rect x="99.5868%" y="1157" width="0.0689%" height="15" fill="rgb(231,171,36)" fg:x="1446" fg:w="1"/><text x="99.6868%" y="1167.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.07%)</title><rect x="99.5868%" y="1141" width="0.0689%" height="15" fill="rgb(250,123,20)" fg:x="1446" fg:w="1"/><text x="99.6868%" y="1151.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.07%)</title><rect x="99.5868%" y="1125" width="0.0689%" height="15" fill="rgb(212,53,50)" fg:x="1446" fg:w="1"/><text x="99.6868%" y="1135.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.07%)</title><rect x="99.5868%" y="1109" width="0.0689%" height="15" fill="rgb(243,54,12)" fg:x="1446" fg:w="1"/><text x="99.6868%" y="1119.50"></text></g><g><title>core::mem::replace (1 samples, 0.07%)</title><rect x="99.5868%" y="1093" width="0.0689%" height="15" fill="rgb(234,101,34)" fg:x="1446" fg:w="1"/><text x="99.6868%" y="1103.50"></text></g><g><title>core::ptr::write (1 samples, 0.07%)</title><rect x="99.5868%" y="1077" width="0.0689%" height="15" fill="rgb(254,67,22)" fg:x="1446" fg:w="1"/><text x="99.6868%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.07%)</title><rect x="99.6556%" y="1205" width="0.0689%" height="15" fill="rgb(250,35,47)" fg:x="1447" fg:w="1"/><text x="99.7556%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::reserve_rehash_inner (1 samples, 0.07%)</title><rect x="99.6556%" y="1189" width="0.0689%" height="15" fill="rgb(226,126,38)" fg:x="1447" fg:w="1"/><text x="99.7556%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::resize_inner (1 samples, 0.07%)</title><rect x="99.6556%" y="1173" width="0.0689%" height="15" fill="rgb(216,138,53)" fg:x="1447" fg:w="1"/><text x="99.7556%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.07%)</title><rect x="99.6556%" y="1157" width="0.0689%" height="15" fill="rgb(246,199,43)" fg:x="1447" fg:w="1"/><text x="99.7556%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.07%)</title><rect x="99.6556%" y="1141" width="0.0689%" height="15" fill="rgb(232,125,11)" fg:x="1447" fg:w="1"/><text x="99.7556%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_bucket_full (1 samples, 0.07%)</title><rect x="99.6556%" y="1125" width="0.0689%" height="15" fill="rgb(218,219,45)" fg:x="1447" fg:w="1"/><text x="99.7556%" y="1135.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.07%)</title><rect x="99.6556%" y="1109" width="0.0689%" height="15" fill="rgb(216,102,54)" fg:x="1447" fg:w="1"/><text x="99.7556%" y="1119.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.21%)</title><rect x="99.7245%" y="1205" width="0.2066%" height="15" fill="rgb(250,228,7)" fg:x="1448" fg:w="3"/><text x="99.8245%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.14%)</title><rect x="99.7934%" y="1189" width="0.1377%" height="15" fill="rgb(226,125,25)" fg:x="1449" fg:w="2"/><text x="99.8934%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_inner (2 samples, 0.14%)</title><rect x="99.7934%" y="1173" width="0.1377%" height="15" fill="rgb(224,165,27)" fg:x="1449" fg:w="2"/><text x="99.8934%" y="1183.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.07%)</title><rect x="99.8623%" y="1157" width="0.0689%" height="15" fill="rgb(233,86,3)" fg:x="1450" fg:w="1"/><text x="99.9623%" y="1167.50"></text></g><g><title>all (1,452 samples, 100%)</title><rect x="0.0000%" y="1237" width="100.0000%" height="15" fill="rgb(228,116,20)" fg:x="0" fg:w="1452"/><text x="0.1000%" y="1247.50"></text></g><g><title>day-12 (1,452 samples, 100.00%)</title><rect x="0.0000%" y="1221" width="100.0000%" height="15" fill="rgb(209,192,17)" fg:x="0" fg:w="1452"/><text x="0.1000%" y="1231.50">day-12</text></g><g><title>itertools::Itertools::counts (1 samples, 0.07%)</title><rect x="99.9311%" y="1205" width="0.0689%" height="15" fill="rgb(224,88,34)" fg:x="1451" fg:w="1"/><text x="100.0311%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.07%)</title><rect x="99.9311%" y="1189" width="0.0689%" height="15" fill="rgb(233,38,6)" fg:x="1451" fg:w="1"/><text x="100.0311%" y="1199.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.07%)</title><rect x="99.9311%" y="1173" width="0.0689%" height="15" fill="rgb(212,59,30)" fg:x="1451" fg:w="1"/><text x="100.0311%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.07%)</title><rect x="99.9311%" y="1157" width="0.0689%" height="15" fill="rgb(213,80,3)" fg:x="1451" fg:w="1"/><text x="100.0311%" y="1167.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (1 samples, 0.07%)</title><rect x="99.9311%" y="1141" width="0.0689%" height="15" fill="rgb(251,178,7)" fg:x="1451" fg:w="1"/><text x="100.0311%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.07%)</title><rect x="99.9311%" y="1125" width="0.0689%" height="15" fill="rgb(213,154,26)" fg:x="1451" fg:w="1"/><text x="100.0311%" y="1135.50"></text></g><g><title>itertools::Itertools::counts::{{closure}} (1 samples, 0.07%)</title><rect x="99.9311%" y="1109" width="0.0689%" height="15" fill="rgb(238,165,49)" fg:x="1451" fg:w="1"/><text x="100.0311%" y="1119.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.07%)</title><rect x="99.9311%" y="1093" width="0.0689%" height="15" fill="rgb(248,91,46)" fg:x="1451" fg:w="1"/><text x="100.0311%" y="1103.50"></text></g></svg></svg>